###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       22/Feb/2016  14:14:20
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\Src\audio_application.c
#    Command line =  
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\Src\audio_application.c
#        -D USE_HAL_DRIVER -D STM32F746xx -D USE_STM32746G_DISCO -D
#        USE_IOEXPANDER -D USE_USB_FS -lC
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List
#        -lA
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List
#        -o
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_sp --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.3\arm\INC\c\DLib_Config_Full.h"
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\CMSIS\Device\ST\STM32F7xx\Include\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\STM32F7xx_HAL_Driver\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\BSP\STM32746G-Discovery\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\BSP\Components\Common\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\Log\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\Fonts\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\CPU\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_Device_Library\Core\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_HOST_Library\Core\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_HOST_Library\Class\MSC\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\Third_Party\FatFs\src\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\Third_Party\FatFs\src\drivers\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_Audio\Addons\PDM\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_Device_Library\Class\AUDIO\Inc\
#        -On --use_c++_inline --require_prototypes -I "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.3\arm\CMSIS\Include\" -D
#        ARM_MATH_CM7
#    List file    =  
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List\audio_application.lst
#    Object file  =  
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\Obj\audio_application.o
#
###############################################################################

D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\Src\audio_application.c
      1          
      2          
      3          /* Includes ------------------------------------------------------------------*/
      4          #include "audio_application.h"

  /**
    ^
"D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\Inc\usbh_conf.h",1  Warning[Pa050]: 
          non-native end of line sequence detected (this diagnostic is only
          issued once)
      5          
      6          
      7          /* Private typedef -----------------------------------------------------------*/
      8          #define AUDIO_SIZE_ELEMENT (2*AUDIO_OUT_BUFFER_SIZE+10)
      9          /* Private define ------------------------------------------------------------*/
     10          /* Private macro -------------------------------------------------------------*/
     11          
     12          /** @defgroup AUDIO_APPLICATION_Exported_Variables 
     13          * @{
     14          */
     15          #pragma location= (SDRAM_BANK_ADDR+ 3*BUFFER_SIZE_BYTE)

   \                                 In section .bss, at 0xc00181e0
     16          int16_t PCM_Buffer1[AUDIO_CHANNELS*AUDIO_OUT_BUFFER_SIZE];
   \                     PCM_Buffer1:
   \   00000000                      DS8 4096
     17          #pragma location= (SDRAM_BANK_ADDR+ 3*BUFFER_SIZE_BYTE+2*AUDIO_CHANNELS*AUDIO_OUT_BUFFER_SIZE)

   \                                 In section .bss, at 0xc00191e0
     18          int16_t PCM_Buffer2[AUDIO_CHANNELS*AUDIO_OUT_BUFFER_SIZE];
   \                     PCM_Buffer2:
   \   00000000                      DS8 4096
     19          #pragma location= (SDRAM_BANK_ADDR+ 3*BUFFER_SIZE_BYTE+4*AUDIO_CHANNELS*AUDIO_OUT_BUFFER_SIZE)

   \                                 In section .bss, at 0xc001a1e0
     20          int16_t PCM_Buffer3[AUDIO_CHANNELS*AUDIO_OUT_BUFFER_SIZE];
   \                     PCM_Buffer3:
   \   00000000                      DS8 4096
     21          

   \                                 In section .bss, align 2
     22          __IO uint16_t cntFrm;
   \                     cntFrm:
   \   00000000                      DS8 2
     23          
     24          
     25          extern uint8_t buffer_switch;
     26          extern Mic_Array_Data Buffer1,Buffer2,Buffer3;
     27          
     28          /*-------------------------------------------------------------------------------------------------------------
     29          			  
     30          	Sequence  Record Data                     Processing Data                 Player Data
     31          			  
     32          	1-------  Buffer1                         Buffer2                         Buffer3
     33          			  
     34          	2-------  Buffer3                         Buffer1                         Buffer2		  
     35          			  
     36          	3-------  Buffer2                         Buffer3                         Buffer1 
     37           ---------------------------------------------------------------------------------------------------------------*/
     38          

   \                                 In section .text, align 2, keep-with-next
     39          void AudioProcess(uint16_t idxFrm)
     40          {
   \                     AudioProcess: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     41          #if 0
     42              switch (buffer_switch)
     43              {
     44                case BUF1_PLAY:
     45          		Send_Audio_to_USB((int16_t *)PCM_Buffer3, AUDIO_OUT_BUFFER_SIZE*AUDIO_CHANNELS);
     46                  break;
     47                case BUF2_PLAY:
     48                  Send_Audio_to_USB((int16_t *)PCM_Buffer1, AUDIO_OUT_BUFFER_SIZE*AUDIO_CHANNELS); 
     49                  break;
     50                case BUF3_PLAY:
     51                  Send_Audio_to_USB((int16_t *)PCM_Buffer2, AUDIO_OUT_BUFFER_SIZE*AUDIO_CHANNELS); 
     52                  break;
     53                default:
     54                  break;
     55              }
     56          	
     57          #endif
     58              //Send_Audio_to_USB((int16_t *)PCM_Buffer1, AUDIO_OUT_BUFFER_SIZE*AUDIO_CHANNELS);
     59              
     60              Send_Audio_to_USB((int16_t *)&PCM_Buffer1[(AUDIO_SAMPLING_FREQUENCY/1000)*AUDIO_CHANNELS*idxFrm], (AUDIO_SAMPLING_FREQUENCY/1000)*AUDIO_CHANNELS);
   \   00000004   0x2120             MOVS     R1,#+32
   \   00000006   0x....             LDR.N    R0,??DataTable1  ;; 0xc00181e0
   \   00000008   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000000A   0x2240             MOVS     R2,#+64
   \   0000000C   0xFB02 0x0004      MLA      R0,R2,R4,R0
   \   00000010   0x.... 0x....      BL       Send_Audio_to_USB
     61          
     62          }
   \   00000014   0xBD10             POP      {R4,PC}          ;; return
   \   00000016                      REQUIRE PCM_Buffer1
     63          

   \                                 In section .text, align 2, keep-with-next
     64          void AudioMerging(void)
     65          {
     66          #if 0
     67          	switch (buffer_switch)
     68              {
     69                case BUF1_PLAY:
     70          	  	for (uint16_t i=0;i<2*AUDIO_OUT_BUFFER_SIZE;i++)
     71           	  	{
     72           	  	    if (i%2==0)
     73           	  	    {
     74          	 	  	    for(uint8_t j=0;j<AUDIO_CHANNELS;j++)
     75          	 	  	    {
     76          	                PCM_Buffer3[8*(i/2)+j] = (int16_t)*(&Buffer3.bufMIC1[0] + AUDIO_SIZE_ELEMENT*j + i);
     77          	 	  	    }
     78           	  	    }
     79          		}
     80          		
     81                  break;
     82                case BUF2_PLAY:
     83          	  	for (uint16_t i=0;i<2*AUDIO_OUT_BUFFER_SIZE;i++)
     84           	  	{
     85           	  	    if (i%2==0)
     86           	  	    {
     87          	 	  	    for(uint8_t j=0;j<AUDIO_CHANNELS;j++)
     88          	 	  	    {
     89          	                PCM_Buffer1[8*(i/2)+j] = (int16_t)*(&Buffer1.bufMIC1[0] + AUDIO_SIZE_ELEMENT*j + i);
     90          	 	  	    }
     91           	  	    }
     92          		}	  	
     93                  break;
     94                case BUF3_PLAY:
     95          		for (uint16_t i=0;i<2*AUDIO_OUT_BUFFER_SIZE;i++)
     96          		{
     97          		  if (i%2==0)
     98          		  {
     99          			  for(uint8_t j=0;j<AUDIO_CHANNELS;j++)
    100          			  {
    101          				  PCM_Buffer2[8*(i/2)+j] = (int16_t)*(&Buffer2.bufMIC1[0] + AUDIO_SIZE_ELEMENT*j + i);
    102          			  }
    103          		  }
    104          		}
    105                  break;
    106                default:
    107                  break;
    108              }
    109          #endif
    110          switch (buffer_switch)
   \                     AudioMerging: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable1_1
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD003             BEQ.N    ??AudioMerging_0
   \   00000008   0x2802             CMP      R0,#+2
   \   0000000A   0xD027             BEQ.N    ??AudioMerging_1
   \   0000000C   0xD313             BCC.N    ??AudioMerging_2
   \   0000000E   0xE038             B.N      ??AudioMerging_3
    111          {
    112            case BUF1_PLAY:
    113          	for (uint16_t i=0;i<AUDIO_CHANNELS*AUDIO_OUT_BUFFER_SIZE;i++)
   \                     ??AudioMerging_0: (+1)
   \   00000010   0x2000             MOVS     R0,#+0
   \                     ??AudioMerging_4: (+1)
   \   00000012   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000014   0xF5B0 0x6F00      CMP      R0,#+2048
   \   00000018   0xDA0C             BGE.N    ??AudioMerging_5
    114          	{
    115          	  PCM_Buffer1[i] = Buffer3.bufMIC5[i];			
   \   0000001A   0x....             LDR.N    R1,??DataTable1_2
   \   0000001C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000001E   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000022   0xF244 0x0250      MOVW     R2,#+16464
   \   00000026   0x5A51             LDRH     R1,[R2, R1]
   \   00000028   0x....             LDR.N    R2,??DataTable1  ;; 0xc00181e0
   \   0000002A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000002C   0xF822 0x1010      STRH     R1,[R2, R0, LSL #+1]
    116          	}
   \   00000030   0x1C40             ADDS     R0,R0,#+1
   \   00000032   0xE7EE             B.N      ??AudioMerging_4
    117          	
    118          	break;
   \                     ??AudioMerging_5: (+1)
   \   00000034   0xE025             B.N      ??AudioMerging_6
    119            case BUF2_PLAY:
    120          	for (uint16_t i=0;i<AUDIO_CHANNELS*AUDIO_OUT_BUFFER_SIZE;i++)
   \                     ??AudioMerging_2: (+1)
   \   00000036   0x2000             MOVS     R0,#+0
   \                     ??AudioMerging_7: (+1)
   \   00000038   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000003A   0xF5B0 0x6F00      CMP      R0,#+2048
   \   0000003E   0xDA0C             BGE.N    ??AudioMerging_8
    121          	{
    122          	  PCM_Buffer1[i] = Buffer1.bufMIC5[i];			
   \   00000040   0x....             LDR.N    R1,??DataTable1_3
   \   00000042   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000044   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000048   0xF244 0x0250      MOVW     R2,#+16464
   \   0000004C   0x5A51             LDRH     R1,[R2, R1]
   \   0000004E   0x....             LDR.N    R2,??DataTable1  ;; 0xc00181e0
   \   00000050   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000052   0xF822 0x1010      STRH     R1,[R2, R0, LSL #+1]
    123          	}		
   \   00000056   0x1C40             ADDS     R0,R0,#+1
   \   00000058   0xE7EE             B.N      ??AudioMerging_7
    124          	break;
   \                     ??AudioMerging_8: (+1)
   \   0000005A   0xE012             B.N      ??AudioMerging_6
    125            case BUF3_PLAY:
    126          	  for (uint16_t i=0;i<AUDIO_CHANNELS*AUDIO_OUT_BUFFER_SIZE;i++)
   \                     ??AudioMerging_1: (+1)
   \   0000005C   0x2000             MOVS     R0,#+0
   \                     ??AudioMerging_9: (+1)
   \   0000005E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000060   0xF5B0 0x6F00      CMP      R0,#+2048
   \   00000064   0xDA0C             BGE.N    ??AudioMerging_10
    127          	  {
    128          		PCM_Buffer1[i] = Buffer2.bufMIC5[i];		  
   \   00000066   0x....             LDR.N    R1,??DataTable1_4
   \   00000068   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000006A   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   0000006E   0xF244 0x0250      MOVW     R2,#+16464
   \   00000072   0x5A51             LDRH     R1,[R2, R1]
   \   00000074   0x....             LDR.N    R2,??DataTable1  ;; 0xc00181e0
   \   00000076   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000078   0xF822 0x1010      STRH     R1,[R2, R0, LSL #+1]
    129          	  }
   \   0000007C   0x1C40             ADDS     R0,R0,#+1
   \   0000007E   0xE7EE             B.N      ??AudioMerging_9
    130          	break;
   \                     ??AudioMerging_10: (+1)
   \   00000080   0xE7FF             B.N      ??AudioMerging_6
    131            default:
    132          	break;
    133          }
    134          //cntFrm=0;
    135          
    136          }
   \                     ??AudioMerging_3: (+1)
   \                     ??AudioMerging_6: (+1)
   \   00000082   0x4770             BX       LR               ;; return
   \   00000084                      REQUIRE PCM_Buffer1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0xC00181E0         DC32     0xc00181e0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     buffer_switch

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     Buffer3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     Buffer1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     Buffer2
    137          
    138          
    139          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   AudioMerging
       8   AudioProcess
         8   -> Send_Audio_to_USB


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
     132  AudioMerging
      22  AudioProcess
    4096  PCM_Buffer1
    4096  PCM_Buffer2
    4096  PCM_Buffer3
       2  cntFrm

 
      2 bytes in section .bss
 12 288 bytes in section .bss  (abs)
    174 bytes in section .text
 
    174 bytes of CODE memory
 12 290 bytes of DATA memory

Errors: none
Warnings: 1
