###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       01/Feb/2016  11:10:29
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\sop1hc\Github\data\Mic_Array_V00\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\Src\waverecorder.c
#    Command line =  
#        D:\sop1hc\Github\data\Mic_Array_V00\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\Src\waverecorder.c
#        -D USE_HAL_DRIVER -D STM32F746xx -D USE_STM32746G_DISCO -D
#        USE_IOEXPANDER -D USE_USB_FS -lC
#        D:\sop1hc\Github\data\Mic_Array_V00\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List
#        -lA
#        D:\sop1hc\Github\data\Mic_Array_V00\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List
#        -o
#        D:\sop1hc\Github\data\Mic_Array_V00\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_sp --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.3\arm\INC\c\DLib_Config_Full.h"
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\CMSIS\Device\ST\STM32F7xx\Include\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\STM32F7xx_HAL_Driver\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\BSP\STM32746G-Discovery\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\BSP\Components\Common\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\Log\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\Fonts\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\CPU\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_Device_Library\Core\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_HOST_Library\Core\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_HOST_Library\Class\MSC\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\Third_Party\FatFs\src\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\Third_Party\FatFs\src\drivers\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_Audio\Addons\PDM\
#        -On --use_c++_inline --require_prototypes -I "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.3\arm\CMSIS\Include\" -D
#        ARM_MATH_CM7
#    List file    =  
#        D:\sop1hc\Github\data\Mic_Array_V00\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List\waverecorder.lst
#    Object file  =  
#        D:\sop1hc\Github\data\Mic_Array_V00\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\Obj\waverecorder.o
#
###############################################################################

D:\sop1hc\Github\data\Mic_Array_V00\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\Src\waverecorder.c
      1          
      2          /* Includes ------------------------------------------------------------------*/
      3          #include "waverecorder.h" 
      4          #include "string.h"
      5          //#include "stm32f7xx_hal_spi.h"
      6          #include "stm32f7xx_hal.h"
      7          #include "pdm_filter.h"
      8          
      9          
     10          /* Private typedef -----------------------------------------------------------*/
     11          /* Private define ------------------------------------------------------------*/
     12          #define TOUCH_RECORD_XMIN       300
     13          #define TOUCH_RECORD_XMAX       340
     14          #define TOUCH_RECORD_YMIN       212
     15          #define TOUCH_RECORD_YMAX       252
     16          
     17          #define TOUCH_STOP_XMIN         205
     18          #define TOUCH_STOP_XMAX         245
     19          #define TOUCH_STOP_YMIN         212
     20          #define TOUCH_STOP_YMAX         252
     21          
     22          #define TOUCH_PAUSE_XMIN        125
     23          #define TOUCH_PAUSE_XMAX        149
     24          #define TOUCH_PAUSE_YMIN        212
     25          #define TOUCH_PAUSE_YMAX        252
     26          
     27          #define TOUCH_VOL_MINUS_XMIN    20
     28          #define TOUCH_VOL_MINUS_XMAX    70
     29          #define TOUCH_VOL_MINUS_YMIN    212
     30          #define TOUCH_VOL_MINUS_YMAX    252
     31          
     32          #define TOUCH_VOL_PLUS_XMIN     402
     33          #define TOUCH_VOL_PLUS_XMAX     452
     34          #define TOUCH_VOL_PLUS_YMIN     212
     35          #define TOUCH_VOL_PLUS_YMAX     252
     36          
     37          
     38          
     39          /* SPI Configuration defines */
     40          #define SPI_SCK_PIN                       GPIO_PIN_10
     41          #define SPI_SCK_GPIO_PORT                 GPIOB
     42          #define SPI_SCK_GPIO_CLK                  1
     43          #define SPI_SCK_SOURCE                    1
     44          #define SPI_SCK_AF                        GPIO_AF5_SPI2
     45          
     46          #define SPI_MOSI_PIN                      GPIO_PIN_3
     47          #define SPI_MOSI_GPIO_PORT                GPIOC
     48          #define SPI_MOSI_GPIO_CLK                 1
     49          #define SPI_MOSI_SOURCE                   1
     50          #define SPI_MOSI_AF                       GPIO_AF5_SPI2
     51          
     52          
     53          /* sop1hc */
     54          #define SPI1_SCK_PIN                       GPIO_PIN_5
     55          #define SPI1_SCK_GPIO_PORT                 GPIOA
     56          #define SPI1_SCK_GPIO_CLK                  1
     57          #define SPI1_SCK_SOURCE                    1
     58          #define SPI1_SCK_AF                        GPIO_AF5_SPI1
     59          
     60          #define SPI1_MOSI_PIN                      GPIO_PIN_7
     61          #define SPI1_MOSI_GPIO_PORT                GPIOA
     62          #define SPI1_MOSI_GPIO_CLK                 1
     63          #define SPI1_MOSI_SOURCE                   1
     64          #define SPI1_MOSI_AF                       GPIO_AF5_SPI1
     65          
     66          #define SPI1_MISO_PIN                      GPIO_PIN_6
     67          #define SPI1_MISO_GPIO_PORT                GPIOA
     68          #define SPI1_MISO_GPIO_CLK                 1
     69          #define SPI1_MISO_SOURCE                   1
     70          #define SPI1_MISO_AF                       GPIO_AF5_SPI1
     71          
     72          
     73          
     74          

   \                                 In section .bss, align 2
     75          uint16_t idxMic8=0;
   \                     idxMic8:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     76          uint16_t idxMic7=0;
   \                     idxMic7:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
     77          uint8_t pHeaderBuff[44];
   \                     pHeaderBuff:
   \   00000000                      DS8 44
     78          //uint16_t Buffer1[AUDIO_IN_PCM_BUFFER_SIZE];

   \                                 In section .bss, align 2
     79          uint16_t volatile cntTransFinish;
   \                     cntTransFinish:
   \   00000000                      DS8 2
     80          
     81          /* Private macro -------------------------------------------------------------*/
     82          /* Private variables ---------------------------------------------------------*/
     83          extern  AUDIO_IN_BufferTypeDef  stkBufferCtlRecIn,stkBuffer1, stkBuffer2;
     84          extern AUDIO_OUT_BufferTypeDef  BufferCtlPlayOut;
     85          extern uint16_t __IO idxSPI5DataBuf1, idxSPI5DataBuf2;
     86          extern WAVE_FormatTypeDef WaveFormat;
     87          extern FIL WavFile;
     88          extern AUDIO_DEMO_StateMachine AudioDemo;
     89          extern AUDIO_PLAYBACK_StateTypeDef AudioState;
     90          extern __IO uint8_t buffer_switch;
     91          extern __IO uint8_t volume;
     92          extern SPI_HandleTypeDef hspi4,hspi1;
     93          extern __IO uint16_t  WaveRec_idxSens1,WaveRec_idxSens2;
     94          extern __IO uint16_t  WaveRec_idxSens3,WaveRec_idxSens4;
     95          extern __IO uint16_t  WaveRec_idxSens5,WaveRec_idxSens6;
     96          extern __IO uint16_t  I2S2_idxTmp;
     97          extern SPI_HandleTypeDef     hspi4;
     98          extern DMA_HandleTypeDef     DmaHandle;
     99          
    100          

   \                                 In section .bss, align 4
    101          __IO int16_t TestSDO12[4*AUDIO_OUT_BUFFER_SIZE];
   \                     TestSDO12:
   \   00000000                      DS8 8192

   \                                 In section .bss, align 4
    102          __IO int16_t TestSDO34[4*AUDIO_OUT_BUFFER_SIZE];
   \                     TestSDO34:
   \   00000000                      DS8 8192

   \                                 In section .bss, align 4
    103          __IO int16_t TestSDO56[4*AUDIO_OUT_BUFFER_SIZE];
   \                     TestSDO56:
   \   00000000                      DS8 8192

   \                                 In section .bss, align 4
    104          __IO uint16_t TestSDO7[4*AUDIO_OUT_BUFFER_SIZE];
   \                     TestSDO7:
   \   00000000                      DS8 8192

   \                                 In section .bss, align 4
    105          __IO uint16_t TestSDO8[4*AUDIO_OUT_BUFFER_SIZE];
   \                     TestSDO8:
   \   00000000                      DS8 8192

   \                                 In section .bss, align 4
    106          __IO uint16_t TestSDO7_1[4*AUDIO_OUT_BUFFER_SIZE];
   \                     TestSDO7_1:
   \   00000000                      DS8 8192

   \                                 In section .bss, align 4
    107          __IO uint16_t TestSDO8_1[4*AUDIO_OUT_BUFFER_SIZE];
   \                     TestSDO8_1:
   \   00000000                      DS8 8192
    108          
    109          

   \                                 In section .bss, align 4
    110          SPI_HandleTypeDef hspi1,hspi2;
   \                     hspi1:
   \   00000000                      DS8 100

   \                                 In section .bss, align 4
   \                     hspi2:
   \   00000000                      DS8 100

   \                                 In section .bss, align 4
    111          SPI_HandleTypeDef spi1_ins,spi2_ins;
   \                     spi1_ins:
   \   00000000                      DS8 100

   \                                 In section .bss, align 4
   \                     spi2_ins:
   \   00000000                      DS8 100

   \                                 In section .bss, align 4
    112          I2S_HandleTypeDef hi2s1;
   \                     hi2s1:
   \   00000000                      DS8 64

   \                                 In section .bss, align 4
    113          I2S_HandleTypeDef hi2s2;
   \                     hi2s2:
   \   00000000                      DS8 64

   \                                 In section .bss, align 4
    114          SPI_HandleTypeDef hspi5,hspi6;
   \                     hspi5:
   \   00000000                      DS8 100

   \                                 In section .bss, align 4
   \                     hspi6:
   \   00000000                      DS8 100

   \                                 In section .bss, align 4
    115          DMA_HandleTypeDef hdma_spi2_tx;
   \                     hdma_spi2_tx:
   \   00000000                      DS8 80

   \                                 In section .bss, align 4
    116          DMA_HandleTypeDef hdma_spi3_tx;
   \                     hdma_spi3_tx:
   \   00000000                      DS8 80

   \                                 In section .bss, align 4
    117          DMA_HandleTypeDef     hdma_spi5_rx,hdma_spi6_rx;
   \                     hdma_spi5_rx:
   \   00000000                      DS8 80

   \                                 In section .bss, align 4
   \                     hdma_spi6_rx:
   \   00000000                      DS8 80

   \                                 In section .bss, align 4
    118          Mic_Array_Data Buffer1,Buffer2,Buffer3;
   \                     Buffer1:
   \   00000000                      DS8 32928

   \                                 In section .bss, align 4
   \                     Buffer2:
   \   00000000                      DS8 32928

   \                                 In section .bss, align 4
   \                     Buffer3:
   \   00000000                      DS8 32928

   \                                 In section .bss, align 4
    119          uint16_t *bufPCMSens7;
   \                     bufPCMSens7:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    120          uint16_t *bufPCMSens8;
   \                     bufPCMSens8:
   \   00000000                      DS8 4

   \                                 In section .bss, align 2
    121          __IO uint16_t cntPos;
   \                     cntPos:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    122          __IO uint16_t cntPos7;
   \                     cntPos7:
   \   00000000                      DS8 2
    123          __IO static uint16_t iBuff;
    124          __IO static uint32_t uwVolume = 70;

   \                                 In section .bss, align 4
    125          __IO PDMFilter_InitStruct Filter[2];
   \                     Filter:
   \   00000000                      DS8 104

   \                                 In section .bss, align 4
    126          __IO uint16_t  pDataMic8[64];//INTERNAL_BUFF_SIZE
   \                     pDataMic8:
   \   00000000                      DS8 128

   \                                 In section .bss, align 4
    127          __IO uint16_t  pDataMic7[64];//INTERNAL_BUFF_SIZE
   \                     pDataMic7:
   \   00000000                      DS8 128

   \                                 In section .bss, align 2
    128          __IO uint16_t cntStrt;
   \                     cntStrt:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
    129          __IO uint8_t WaveRecord_flgInt;
   \                     WaveRecord_flgInt:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    130          uint8_t WaveRecord_flgIni;
   \                     WaveRecord_flgIni:
   \   00000000                      DS8 1
    131          

   \                                 In section .bss, align 2
    132          uint16_t vRawSens1,vRawSens2,vRawSens4,vRawSens3,vRawSens5,vRawSens6;  
   \                     vRawSens1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     vRawSens2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     vRawSens4:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     vRawSens3:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     vRawSens5:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     vRawSens6:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    133          __IO int16_t SPI1_stNipple,I2S1_stNipple, I2S2_stNipple;
   \                     SPI1_stNipple:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     I2S1_stNipple:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     I2S2_stNipple:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    134          __IO uint16_t iSDO12,iSDO34,iSDO56;
   \                     iSDO12:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     iSDO34:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     iSDO56:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
    135          __IO uint8_t swtSDO7,swtSDO8;
   \                     swtSDO7:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     swtSDO8:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    136          __IO uint8_t WaveRecord_flgSDO7Finish,WaveRecord_flgSDO8Finish;
   \                     WaveRecord_flgSDO7Finish:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     WaveRecord_flgSDO8Finish:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    137          __IO uint8_t I2S1_stPosShft,I2S2_stPosShft,SPI4_stPosShft;
   \                     I2S1_stPosShft:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     I2S2_stPosShft:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     SPI4_stPosShft:
   \   00000000                      DS8 1
    138          
    139          /* Private function prototypes -----------------------------------------------*/
    140          static void SPI_I2S_SendData(SPI_TypeDef* SPIx, uint16_t Data);
    141          static uint16_t SPI_I2S_ReceiveData(SPI_TypeDef* SPIx);
    142          static void I2S1_Init(void);
    143          static void I2S2_Init(void);
    144          
    145          
    146          

   \                                 In section .text, align 2, keep-with-next
    147          void SPI1_Ini(void)
    148          {
   \                     SPI1_Ini: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
    149            GPIO_InitTypeDef GPIO_InitStructure;
    150          
    151           
    152             	 
    153            /* Enable SCK, MOSI and MISO GPIO clocks */
    154            __HAL_RCC_SPI1_CLK_ENABLE();
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x40023844
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF450 0x5080      ORRS     R0,R0,#0x1000
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable9  ;; 0x40023844
   \   00000012   0x6008             STR      R0,[R1, #+0]
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x40023844
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0xF410 0x5080      ANDS     R0,R0,#0x1000
   \   0000001E   0x9000             STR      R0,[SP, #+0]
   \   00000020   0x9800             LDR      R0,[SP, #+0]
    155            __HAL_RCC_GPIOA_CLK_ENABLE();
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable9_1  ;; 0x40023830
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable9_1  ;; 0x40023830
   \   00000030   0x6008             STR      R0,[R1, #+0]
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable9_1  ;; 0x40023830
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   0000003C   0x9000             STR      R0,[SP, #+0]
   \   0000003E   0x9800             LDR      R0,[SP, #+0]
    156          
    157            
    158            GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
   \   00000040   0x2002             MOVS     R0,#+2
   \   00000042   0x9002             STR      R0,[SP, #+8]
    159            GPIO_InitStructure.Pull  = GPIO_PULLDOWN;
   \   00000044   0x2002             MOVS     R0,#+2
   \   00000046   0x9003             STR      R0,[SP, #+12]
    160            GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
   \   00000048   0x2003             MOVS     R0,#+3
   \   0000004A   0x9004             STR      R0,[SP, #+16]
    161          
    162            /* SPI SCK pin configuration */
    163            GPIO_InitStructure.Alternate = SPI1_SCK_AF;
   \   0000004C   0x2005             MOVS     R0,#+5
   \   0000004E   0x9005             STR      R0,[SP, #+20]
    164            GPIO_InitStructure.Pin = SPI1_SCK_PIN;
   \   00000050   0x2020             MOVS     R0,#+32
   \   00000052   0x9001             STR      R0,[SP, #+4]
    165            HAL_GPIO_Init(SPI1_SCK_GPIO_PORT,&GPIO_InitStructure);
   \   00000054   0xA901             ADD      R1,SP,#+4
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable9_2  ;; 0x40020000
   \   0000005A   0x.... 0x....      BL       HAL_GPIO_Init
    166          
    167            /* SPI  MOSI pin configuration */
    168            GPIO_InitStructure.Alternate = SPI1_MOSI_SOURCE;
   \   0000005E   0x2001             MOVS     R0,#+1
   \   00000060   0x9005             STR      R0,[SP, #+20]
    169            GPIO_InitStructure.Pin =  SPI1_MOSI_PIN;
   \   00000062   0x2080             MOVS     R0,#+128
   \   00000064   0x9001             STR      R0,[SP, #+4]
    170            HAL_GPIO_Init(SPI1_MOSI_GPIO_PORT, &GPIO_InitStructure);
   \   00000066   0xA901             ADD      R1,SP,#+4
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable9_2  ;; 0x40020000
   \   0000006C   0x.... 0x....      BL       HAL_GPIO_Init
    171          
    172            /* SPI MISO pin configuration */
    173            GPIO_InitStructure.Alternate = SPI1_MISO_SOURCE;
   \   00000070   0x2001             MOVS     R0,#+1
   \   00000072   0x9005             STR      R0,[SP, #+20]
    174            GPIO_InitStructure.Pin = SPI1_MISO_PIN;
   \   00000074   0x2040             MOVS     R0,#+64
   \   00000076   0x9001             STR      R0,[SP, #+4]
    175            HAL_GPIO_Init(SPI1_MISO_GPIO_PORT, &GPIO_InitStructure);
   \   00000078   0xA901             ADD      R1,SP,#+4
   \   0000007A   0x.... 0x....      LDR.W    R0,??DataTable9_2  ;; 0x40020000
   \   0000007E   0x.... 0x....      BL       HAL_GPIO_Init
    176          
    177            /* SPI configuration -------------------------------------------------------*/
    178            //SPI_I2S_DeInit(SPI1);
    179            
    180            spi1_ins.Init.Direction = SPI_DIRECTION_2LINES_RXONLY;
   \   00000082   0xF44F 0x6080      MOV      R0,#+1024
   \   00000086   0x.... 0x....      LDR.W    R1,??DataTable10
   \   0000008A   0x6088             STR      R0,[R1, #+8]
    181            spi1_ins.Init.DataSize = SPI_DATASIZE_16BIT;
   \   0000008C   0xF44F 0x6070      MOV      R0,#+3840
   \   00000090   0x.... 0x....      LDR.W    R1,??DataTable10
   \   00000094   0x60C8             STR      R0,[R1, #+12]
    182            spi1_ins.Init.CLKPolarity = SPI_POLARITY_LOW;
   \   00000096   0x2000             MOVS     R0,#+0
   \   00000098   0x.... 0x....      LDR.W    R1,??DataTable10
   \   0000009C   0x6108             STR      R0,[R1, #+16]
    183            spi1_ins.Init.CLKPhase = SPI_PHASE_1EDGE;
   \   0000009E   0x2000             MOVS     R0,#+0
   \   000000A0   0x.... 0x....      LDR.W    R1,??DataTable10
   \   000000A4   0x6148             STR      R0,[R1, #+20]
    184            spi1_ins.Init.NSS = SPI_NSS_SOFT;
   \   000000A6   0xF44F 0x7000      MOV      R0,#+512
   \   000000AA   0x.... 0x....      LDR.W    R1,??DataTable10
   \   000000AE   0x6188             STR      R0,[R1, #+24]
    185            spi1_ins.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_64;
   \   000000B0   0x2028             MOVS     R0,#+40
   \   000000B2   0x.... 0x....      LDR.W    R1,??DataTable10
   \   000000B6   0x61C8             STR      R0,[R1, #+28]
    186            spi1_ins.Init.FirstBit = SPI_FIRSTBIT_MSB;
   \   000000B8   0x2000             MOVS     R0,#+0
   \   000000BA   0x.... 0x....      LDR.W    R1,??DataTable10
   \   000000BE   0x6208             STR      R0,[R1, #+32]
    187            spi1_ins.Init.CRCPolynomial = 7;
   \   000000C0   0x2007             MOVS     R0,#+7
   \   000000C2   0x.... 0x....      LDR.W    R1,??DataTable10
   \   000000C6   0x62C8             STR      R0,[R1, #+44]
    188            spi1_ins.Init.Mode = SPI_MODE_SLAVE;
   \   000000C8   0x2000             MOVS     R0,#+0
   \   000000CA   0x.... 0x....      LDR.W    R1,??DataTable10
   \   000000CE   0x6048             STR      R0,[R1, #+4]
    189            if(HAL_SPI_Init(&spi1_ins) != HAL_OK)
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable10
   \   000000D4   0x.... 0x....      BL       HAL_SPI_Init
    190            {
    191              /* Initialization Error */
    192              //Error_Handler();
    193            }
    194            
    195           
    196            GPIO_InitStructure.Pin = GPIO_PIN_3;
   \   000000D8   0x2008             MOVS     R0,#+8
   \   000000DA   0x9001             STR      R0,[SP, #+4]
    197            GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;
   \   000000DC   0x2001             MOVS     R0,#+1
   \   000000DE   0x9002             STR      R0,[SP, #+8]
    198            GPIO_InitStructure.Speed = GPIO_SPEED_FAST;
   \   000000E0   0x2002             MOVS     R0,#+2
   \   000000E2   0x9004             STR      R0,[SP, #+16]
    199            GPIO_InitStructure.Pull = GPIO_PULLUP;
   \   000000E4   0x2001             MOVS     R0,#+1
   \   000000E6   0x9003             STR      R0,[SP, #+12]
    200            //GPIO_InitStructure.Alternate 
    201            HAL_GPIO_Init(GPIOE, &GPIO_InitStructure);
   \   000000E8   0xA901             ADD      R1,SP,#+4
   \   000000EA   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x40021000
   \   000000EE   0x.... 0x....      BL       HAL_GPIO_Init
    202          
    203            /* Deselect : Chip Select high */
    204            HAL_GPIO_WritePin(GPIOE,GPIO_PIN_3,GPIO_PIN_SET);
   \   000000F2   0x2201             MOVS     R2,#+1
   \   000000F4   0x2108             MOVS     R1,#+8
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x40021000
   \   000000FA   0x.... 0x....      BL       HAL_GPIO_WritePin
    205             /* sop1hc */
    206            /* Configure the SPI interrupt priority */
    207            HAL_NVIC_SetPriority(SPI1_IRQn, INTERRUPT_PRI_SDO12, 0);
   \   000000FE   0x2200             MOVS     R2,#+0
   \   00000100   0x2100             MOVS     R1,#+0
   \   00000102   0x2023             MOVS     R0,#+35
   \   00000104   0x.... 0x....      BL       HAL_NVIC_SetPriority
    208          
    209            HAL_NVIC_EnableIRQ(SPI1_IRQn);
   \   00000108   0x2023             MOVS     R0,#+35
   \   0000010A   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
    210            //SPI_I2S_ITConfig(SPI1, SPI_I2S_IT_RXNE, ENABLE);
    211            //__HAL_SPI_ENABLE_IT(SPI1,SPI_IT_TXE);
    212          
    213            /* Enable SPI1  */
    214            //__HAL_SPI_ENABLE(SPI1);
    215          
    216          }
   \   0000010E   0xB007             ADD      SP,SP,#+28
   \   00000110   0xBD00             POP      {PC}             ;; return
    217          

   \                                 In section .text, align 2, keep-with-next
    218          void mySPI_SendData(uint8_t adress, uint8_t data)
    219          {
   \                     mySPI_SendData: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    220           
    221          while(!__HAL_SPI_GET_FLAG(&spi1_ins, SPI_FLAG_TXE)); 
   \                     ??mySPI_SendData_0: (+1)
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable10
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0x6880             LDR      R0,[R0, #+8]
   \   0000000E   0x0780             LSLS     R0,R0,#+30
   \   00000010   0xD5F9             BPL.N    ??mySPI_SendData_0
    222          SPI_I2S_SendData(SPI1, adress);
   \   00000012   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000014   0x0021             MOVS     R1,R4
   \   00000016   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable10_1  ;; 0x40013000
   \   0000001C   0x.... 0x....      BL       SPI_I2S_SendData
    223          
    224          while(!__HAL_SPI_GET_FLAG(&spi1_ins, SPI_FLAG_RXNE));
   \                     ??mySPI_SendData_1: (+1)
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable10
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0x6880             LDR      R0,[R0, #+8]
   \   00000028   0x07C0             LSLS     R0,R0,#+31
   \   0000002A   0xD5F9             BPL.N    ??mySPI_SendData_1
    225          SPI_I2S_ReceiveData(SPI1);
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable10_1  ;; 0x40013000
   \   00000030   0x.... 0x....      BL       SPI_I2S_ReceiveData
    226          
    227          while(!!__HAL_SPI_GET_FLAG(&spi1_ins, SPI_FLAG_TXE)); 
   \                     ??mySPI_SendData_2: (+1)
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable10
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x6880             LDR      R0,[R0, #+8]
   \   0000003C   0x0780             LSLS     R0,R0,#+30
   \   0000003E   0xD4F9             BMI.N    ??mySPI_SendData_2
    228          SPI_I2S_SendData(SPI1, data);
   \   00000040   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000042   0x0029             MOVS     R1,R5
   \   00000044   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable10_1  ;; 0x40013000
   \   0000004A   0x.... 0x....      BL       SPI_I2S_SendData
    229          
    230          while(!!__HAL_SPI_GET_FLAG(&spi1_ins, SPI_FLAG_RXNE));
   \                     ??mySPI_SendData_3: (+1)
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable10
   \   00000052   0x6800             LDR      R0,[R0, #+0]
   \   00000054   0x6880             LDR      R0,[R0, #+8]
   \   00000056   0x07C0             LSLS     R0,R0,#+31
   \   00000058   0xD4F9             BMI.N    ??mySPI_SendData_3
    231          SPI_I2S_ReceiveData(SPI1);
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable10_1  ;; 0x40013000
   \   0000005E   0x.... 0x....      BL       SPI_I2S_ReceiveData
    232           
    233          }
   \   00000062   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    234          
    235          /**
    236            * @brief  This function handles AUDIO_REC_SPI global interrupt request.
    237            * @param  None
    238            * @retval None
    239          */
    240          

   \                                 In section .text, align 2, keep-with-next
    241          void SPI1_IRQHandler(void)
    242          {  
   \                     SPI1_IRQHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    243          
    244          
    245          	  static uint8_t stLR,stLROld;
    246          
    247          	  /* USER CODE BEGIN SPI5_IRQn 0 */
    248          	
    249          	  /* USER CODE END SPI5_IRQn 0 */
    250          	  //HAL_SPI_IRQHandler(&hspi5);
    251          	  /* USER CODE BEGIN SPI5_IRQn 1 */
    252          	
    253          	  /* USER CODE END SPI5_IRQn 1 */
    254          		/* Check if data are available in SPI Data register */
    255          	  /* SPI in mode Receiver ----------------------------------------------------*/
    256          	  if(
    257          //	     (__HAL_SPI_GET_FLAG(&hi2s1, SPI_FLAG_OVR) == RESET)&&
    258          //	     (__HAL_SPI_GET_FLAG(&hi2s1, SPI_FLAG_RXNE) != RESET)&&
    259          		 (__HAL_I2S_GET_IT_SOURCE(&hi2s1, SPI_IT_RXNE) != RESET))
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable10_2
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x6840             LDR      R0,[R0, #+4]
   \   0000000A   0x0640             LSLS     R0,R0,#+25
   \   0000000C   0xF140 0x8111      BPL.W    ??SPI1_IRQHandler_0
    260          	  {
    261          	
    262          	   uint16_t test;
    263          	   test =  SPI_I2S_ReceiveData(SPI1);
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable10_1  ;; 0x40013000
   \   00000014   0x.... 0x....      BL       SPI_I2S_ReceiveData
   \   00000018   0x0004             MOVS     R4,R0
    264          	
    265          	   /* Left-Right Mic data */
    266          	   stLR= HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4);
   \   0000001A   0x2110             MOVS     R1,#+16
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable9_2  ;; 0x40020000
   \   00000020   0x.... 0x....      BL       HAL_GPIO_ReadPin
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable11
   \   00000028   0x7008             STRB     R0,[R1, #+0]
    267          	
    268          		if (stLR==GPIO_PIN_SET)
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable11
   \   0000002E   0x7800             LDRB     R0,[R0, #+0]
   \   00000030   0x2801             CMP      R0,#+1
   \   00000032   0xD11F             BNE.N    ??SPI1_IRQHandler_1
    269          		{
    270          				if (stLROld==GPIO_PIN_RESET)
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable12_1
   \   00000038   0x7800             LDRB     R0,[R0, #+0]
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD103             BNE.N    ??SPI1_IRQHandler_2
    271          				{
    272          					SPI1_stNipple = (test);
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable11_1
   \   00000042   0x8004             STRH     R4,[R0, #+0]
   \   00000044   0xE035             B.N      ??SPI1_IRQHandler_3
    273          
    274          				}
    275          				else
    276          				{
    277          					 vRawSens1 =((test>>I2S1_stPosShft)|(SPI1_stNipple<<(SDOLEN-I2S1_stPosShft)));	
                 					 ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI1_IRQHandler_2: (+1)
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   0000004A   0x7800             LDRB     R0,[R0, #+0]
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable11_1
   \   00000050   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000054   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000056   0x0022             MOVS     R2,R4
   \   00000058   0x4102             ASRS     R2,R2,R0
   \   0000005A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   00000060   0x7800             LDRB     R0,[R0, #+0]
   \   00000062   0xF1D0 0x0010      RSBS     R0,R0,#+16
   \   00000066   0xFA11 0xF000      LSLS     R0,R1,R0
   \   0000006A   0x4310             ORRS     R0,R0,R2
   \   0000006C   0x.... 0x....      LDR.W    R1,??DataTable11_3
   \   00000070   0x8008             STRH     R0,[R1, #+0]
   \   00000072   0xE01E             B.N      ??SPI1_IRQHandler_3
    278          				   
    279          				}
    280          		}
    281          		else
    282          		{
    283          			  if (stLROld==GPIO_PIN_SET)
   \                     ??SPI1_IRQHandler_1: (+1)
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable12_1
   \   00000078   0x7800             LDRB     R0,[R0, #+0]
   \   0000007A   0x2801             CMP      R0,#+1
   \   0000007C   0xD103             BNE.N    ??SPI1_IRQHandler_4
    284          			  {
    285          				  SPI1_stNipple = (test);  
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable11_1
   \   00000082   0x8004             STRH     R4,[R0, #+0]
   \   00000084   0xE015             B.N      ??SPI1_IRQHandler_3
    286          
    287          			  }
    288          			  else
    289          			  {
    290          				  vRawSens2 =((test>>I2S1_stPosShft)|(SPI1_stNipple<<(SDOLEN-I2S1_stPosShft)));
                 				  ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI1_IRQHandler_4: (+1)
   \   00000086   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   0000008A   0x7800             LDRB     R0,[R0, #+0]
   \   0000008C   0x.... 0x....      LDR.W    R1,??DataTable11_1
   \   00000090   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000094   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000096   0x0022             MOVS     R2,R4
   \   00000098   0x4102             ASRS     R2,R2,R0
   \   0000009A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   000000A0   0x7800             LDRB     R0,[R0, #+0]
   \   000000A2   0xF1D0 0x0010      RSBS     R0,R0,#+16
   \   000000A6   0xFA11 0xF000      LSLS     R0,R1,R0
   \   000000AA   0x4310             ORRS     R0,R0,R2
   \   000000AC   0x.... 0x....      LDR.W    R1,??DataTable12_2
   \   000000B0   0x8008             STRH     R0,[R1, #+0]
    291          
    292          			  } 	
    293          		}
    294          	   
    295          	   if (iSDO12<4*AUDIO_OUT_BUFFER_SIZE)
   \                     ??SPI1_IRQHandler_3: (+1)
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   000000B6   0x8800             LDRH     R0,[R0, #+0]
   \   000000B8   0xF5B0 0x5F80      CMP      R0,#+4096
   \   000000BC   0xDA0C             BGE.N    ??SPI1_IRQHandler_5
    296          	   {
    297                     TestSDO12[iSDO12++]=test;
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   000000C2   0x8800             LDRH     R0,[R0, #+0]
   \   000000C4   0x1C41             ADDS     R1,R0,#+1
   \   000000C6   0x.... 0x....      LDR.W    R2,??DataTable12_3
   \   000000CA   0x8011             STRH     R1,[R2, #+0]
   \   000000CC   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   000000D0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000D2   0xF821 0x4010      STRH     R4,[R1, R0, LSL #+1]
   \   000000D6   0xE003             B.N      ??SPI1_IRQHandler_6
    298          	   }
    299          	   else
    300          	   {
    301                     iSDO12=0;
   \                     ??SPI1_IRQHandler_5: (+1)
   \   000000D8   0x2000             MOVS     R0,#+0
   \   000000DA   0x.... 0x....      LDR.W    R1,??DataTable12_3
   \   000000DE   0x8008             STRH     R0,[R1, #+0]
    302          	   }
    303          #if 1
    304          		if ((WaveRec_idxSens1 < (2*AUDIO_OUT_BUFFER_SIZE-1))&&(WaveRec_idxSens2 < (2*AUDIO_OUT_BUFFER_SIZE-1)))
   \                     ??SPI1_IRQHandler_6: (+1)
   \   000000E0   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   000000E4   0x8800             LDRH     R0,[R0, #+0]
   \   000000E6   0xF240 0x71FF      MOVW     R1,#+2047
   \   000000EA   0x4288             CMP      R0,R1
   \   000000EC   0xF280 0x809B      BGE.W    ??SPI1_IRQHandler_7
   \   000000F0   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   000000F4   0x8800             LDRH     R0,[R0, #+0]
   \   000000F6   0xF240 0x71FF      MOVW     R1,#+2047
   \   000000FA   0x4288             CMP      R0,R1
   \   000000FC   0xF280 0x8093      BGE.W    ??SPI1_IRQHandler_7
    305          	//			  &&(stLR!=stLROld))
    306          		{
    307          	/*-------------------------------------------------------------------------------------------------------------
    308          				  
    309          		Sequence  Record Data					  Processing Data				  Player Data
    310          				  
    311          		1-------  Buffer1						  Buffer2						  Buffer3 BUF3_PLAY)
    312          				  
    313          		2-------  Buffer3						  Buffer1						  Buffer2 (BUF2_PLAY)		  
    314          				  
    315          		3-------  Buffer2						  Buffer3						  Buffer1 (BUF1_PLAY)
    316          	 ---------------------------------------------------------------------------------------------------------------*/
    317          				  /* Recording Audio Data */						 
    318          				   switch (buffer_switch)
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable12_7
   \   00000104   0x7800             LDRB     R0,[R0, #+0]
   \   00000106   0x2800             CMP      R0,#+0
   \   00000108   0xD003             BEQ.N    ??SPI1_IRQHandler_8
   \   0000010A   0x2802             CMP      R0,#+2
   \   0000010C   0xD05D             BEQ.N    ??SPI1_IRQHandler_9
   \   0000010E   0xD32E             BCC.N    ??SPI1_IRQHandler_10
   \   00000110   0xE089             B.N      ??SPI1_IRQHandler_11
    319          				   {
    320          							case BUF1_PLAY:
    321          #if MAIN_FFT
    322          									//Data is updated to Buffer2
    323          									if ((stLR==GPIO_PIN_SET)&&(stLROld==GPIO_PIN_RESET))
    324          										Buffer2.bufMIC1[WaveRec_idxSens1++] = vRawSens1;
    325          									if ((stLR==GPIO_PIN_RESET)&&(stLROld==GPIO_PIN_SET))
    326          										Buffer2.bufMIC2[WaveRec_idxSens2++] = vRawSens2;
    327          	
    328          #else
    329                                          if (WaveRec_idxSens1<=WaveRec_idxSens2)
                                                 ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI1_IRQHandler_8: (+1)
   \   00000112   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   00000116   0x8800             LDRH     R0,[R0, #+0]
   \   00000118   0x.... 0x....      LDR.W    R1,??DataTable12_5
   \   0000011C   0x8809             LDRH     R1,[R1, #+0]
   \   0000011E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000120   0x4288             CMP      R0,R1
   \   00000122   0xD310             BCC.N    ??SPI1_IRQHandler_12
    330          									Buffer2.bufMIC1[WaveRec_idxSens1++] = vRawSens1;
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   00000128   0x8800             LDRH     R0,[R0, #+0]
   \   0000012A   0x1C41             ADDS     R1,R0,#+1
   \   0000012C   0x.... 0x....      LDR.W    R2,??DataTable12_5
   \   00000130   0x8011             STRH     R1,[R2, #+0]
   \   00000132   0x.... 0x....      LDR.W    R1,??DataTable11_3
   \   00000136   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000013A   0x.... 0x....      LDR.W    R2,??DataTable12_8
   \   0000013E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000140   0xF822 0x1010      STRH     R1,[R2, R0, LSL #+1]
   \   00000144   0xE012             B.N      ??SPI1_IRQHandler_13
    331          							    else
    332          									Buffer2.bufMIC2[WaveRec_idxSens2++] = vRawSens2;									
   \                     ??SPI1_IRQHandler_12: (+1)
   \   00000146   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   0000014A   0x8800             LDRH     R0,[R0, #+0]
   \   0000014C   0x1C41             ADDS     R1,R0,#+1
   \   0000014E   0x.... 0x....      LDR.W    R2,??DataTable12_6
   \   00000152   0x8011             STRH     R1,[R2, #+0]
   \   00000154   0x.... 0x....      LDR.W    R1,??DataTable12_2
   \   00000158   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000015C   0x.... 0x....      LDR.W    R2,??DataTable12_8
   \   00000160   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000162   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   00000166   0xF241 0x0214      MOVW     R2,#+4116
   \   0000016A   0x5211             STRH     R1,[R2, R0]
    333          #endif
    334          	
    335          									break;
   \                     ??SPI1_IRQHandler_13: (+1)
   \   0000016C   0xE05B             B.N      ??SPI1_IRQHandler_7
    336          							case BUF2_PLAY:
    337          #if MAIN_FFT
    338          									//Data is updated to Buffer3				 
    339          									if ((stLR==GPIO_PIN_SET)&&(stLROld==GPIO_PIN_RESET))
    340          										Buffer3.bufMIC1[WaveRec_idxSens1++] = vRawSens1;
    341          									if ((stLR==GPIO_PIN_RESET)&&(stLROld==GPIO_PIN_SET))
    342          										Buffer3.bufMIC2[WaveRec_idxSens2++] = vRawSens2;
    343          #else
    344                                          if (WaveRec_idxSens1<=WaveRec_idxSens2)
                                                 ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI1_IRQHandler_10: (+1)
   \   0000016E   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   00000172   0x8800             LDRH     R0,[R0, #+0]
   \   00000174   0x.... 0x....      LDR.W    R1,??DataTable12_5
   \   00000178   0x8809             LDRH     R1,[R1, #+0]
   \   0000017A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000017C   0x4288             CMP      R0,R1
   \   0000017E   0xD310             BCC.N    ??SPI1_IRQHandler_14
    345          									Buffer3.bufMIC1[WaveRec_idxSens1++] = vRawSens1;
   \   00000180   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   00000184   0x8800             LDRH     R0,[R0, #+0]
   \   00000186   0x1C41             ADDS     R1,R0,#+1
   \   00000188   0x.... 0x....      LDR.W    R2,??DataTable12_5
   \   0000018C   0x8011             STRH     R1,[R2, #+0]
   \   0000018E   0x.... 0x....      LDR.W    R1,??DataTable11_3
   \   00000192   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000196   0x.... 0x....      LDR.W    R2,??DataTable12_9
   \   0000019A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000019C   0xF822 0x1010      STRH     R1,[R2, R0, LSL #+1]
   \   000001A0   0xE012             B.N      ??SPI1_IRQHandler_15
    346          							    else
    347          									Buffer3.bufMIC2[WaveRec_idxSens2++] = vRawSens2;	
   \                     ??SPI1_IRQHandler_14: (+1)
   \   000001A2   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   000001A6   0x8800             LDRH     R0,[R0, #+0]
   \   000001A8   0x1C41             ADDS     R1,R0,#+1
   \   000001AA   0x.... 0x....      LDR.W    R2,??DataTable12_6
   \   000001AE   0x8011             STRH     R1,[R2, #+0]
   \   000001B0   0x.... 0x....      LDR.W    R1,??DataTable12_2
   \   000001B4   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000001B8   0x.... 0x....      LDR.W    R2,??DataTable12_9
   \   000001BC   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001BE   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000001C2   0xF241 0x0214      MOVW     R2,#+4116
   \   000001C6   0x5211             STRH     R1,[R2, R0]
    348          #endif
    349          									break;
   \                     ??SPI1_IRQHandler_15: (+1)
   \   000001C8   0xE02D             B.N      ??SPI1_IRQHandler_7
    350          							case BUF3_PLAY:
    351          #if MAIN_FFT
    352          	
    353          									//Data is update to Buffer1 	 
    354          									if ((stLR==GPIO_PIN_SET)&&(stLROld==GPIO_PIN_RESET))
    355          										Buffer1.bufMIC1[WaveRec_idxSens1++] = vRawSens1;
    356          									if ((stLR==GPIO_PIN_RESET)&&(stLROld==GPIO_PIN_SET))
    357          										Buffer1.bufMIC2[ WaveRec_idxSens2++] = vRawSens2;
    358          #else
    359                                          if (WaveRec_idxSens1<=WaveRec_idxSens2)
                                                 ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI1_IRQHandler_9: (+1)
   \   000001CA   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   000001CE   0x8800             LDRH     R0,[R0, #+0]
   \   000001D0   0x.... 0x....      LDR.W    R1,??DataTable12_5
   \   000001D4   0x8809             LDRH     R1,[R1, #+0]
   \   000001D6   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001D8   0x4288             CMP      R0,R1
   \   000001DA   0xD310             BCC.N    ??SPI1_IRQHandler_16
    360          									Buffer1.bufMIC1[WaveRec_idxSens1++] = vRawSens1;
   \   000001DC   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   000001E0   0x8800             LDRH     R0,[R0, #+0]
   \   000001E2   0x1C41             ADDS     R1,R0,#+1
   \   000001E4   0x.... 0x....      LDR.W    R2,??DataTable12_5
   \   000001E8   0x8011             STRH     R1,[R2, #+0]
   \   000001EA   0x.... 0x....      LDR.W    R1,??DataTable11_3
   \   000001EE   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000001F2   0x.... 0x....      LDR.W    R2,??DataTable12_10
   \   000001F6   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001F8   0xF822 0x1010      STRH     R1,[R2, R0, LSL #+1]
   \   000001FC   0xE012             B.N      ??SPI1_IRQHandler_17
    361          							    else
    362          									Buffer1.bufMIC2[WaveRec_idxSens2++] = vRawSens2;									
   \                     ??SPI1_IRQHandler_16: (+1)
   \   000001FE   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   00000202   0x8800             LDRH     R0,[R0, #+0]
   \   00000204   0x1C41             ADDS     R1,R0,#+1
   \   00000206   0x.... 0x....      LDR.W    R2,??DataTable12_6
   \   0000020A   0x8011             STRH     R1,[R2, #+0]
   \   0000020C   0x.... 0x....      LDR.W    R1,??DataTable12_2
   \   00000210   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000214   0x.... 0x....      LDR.W    R2,??DataTable12_10
   \   00000218   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000021A   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   0000021E   0xF241 0x0214      MOVW     R2,#+4116
   \   00000222   0x5211             STRH     R1,[R2, R0]
    363          #endif
    364          									break;
   \                     ??SPI1_IRQHandler_17: (+1)
   \   00000224   0xE7FF             B.N      ??SPI1_IRQHandler_7
    365          							default:
    366          									break; 
    367          				   }
    368          			
    369          		 } 
    370          #endif		
    371          		/* Update Old value */	  
    372          		stLROld=stLR;	  
   \                     ??SPI1_IRQHandler_11: (+1)
   \                     ??SPI1_IRQHandler_7: (+1)
   \   00000226   0x.... 0x....      LDR.W    R0,??DataTable11
   \   0000022A   0x7800             LDRB     R0,[R0, #+0]
   \   0000022C   0x.... 0x....      LDR.W    R1,??DataTable12_1
   \   00000230   0x7008             STRB     R0,[R1, #+0]
    373          		 
    374          	  } 	 
    375          
    376          }
   \                     ??SPI1_IRQHandler_0: (+1)
   \   00000232   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .bss, align 1
   \                     ??stLR:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??stLROld:
   \   00000000                      DS8 1
    377          
    378          
    379          /**
    380            * @brief  This function handles AUDIO_REC_SPI global interrupt request.
    381            * @param  None
    382            * @retval None
    383          */
    384          

   \                                 In section .text, align 2, keep-with-next
    385          void SPI2_IRQHandler(void)
    386          {      
   \                     SPI2_IRQHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    387              uint16_t app;
    388              static uint8_t I2S2_stLR, I2S2_stLROld;
    389          
    390            /* Check if data are available in SPI Data register */
    391             if (
    392          //	   (__HAL_SPI_GET_FLAG(&hi2s2, SPI_FLAG_OVR) == RESET)&&
    393          //   	    (__HAL_SPI_GET_FLAG(&hi2s2, SPI_FLAG_RXNE) != RESET)&&
    394             	    (__HAL_I2S_GET_IT_SOURCE(&hi2s2, SPI_IT_RXNE)!=RESET)
    395             	  )
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable12_11
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x6840             LDR      R0,[R0, #+4]
   \   0000000A   0x0640             LSLS     R0,R0,#+25
   \   0000000C   0xF140 0x811A      BPL.W    ??SPI2_IRQHandler_0
    396             {
    397              
    398               app = SPI_I2S_ReceiveData(SPI2);   
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable12_12  ;; 0x40003800
   \   00000014   0x.... 0x....      BL       SPI_I2S_ReceiveData
   \   00000018   0x0004             MOVS     R4,R0
    399               //SPI_I2S_SendData(SPI2, 3333);
    400          
    401          	 I2S2_stLR= HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4);
   \   0000001A   0x2110             MOVS     R1,#+16
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable9_2  ;; 0x40020000
   \   00000020   0x.... 0x....      BL       HAL_GPIO_ReadPin
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable12_13
   \   00000028   0x7008             STRB     R0,[R1, #+0]
    402          
    403          	 if (I2S2_stLR==GPIO_PIN_SET)
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   0000002E   0x7800             LDRB     R0,[R0, #+0]
   \   00000030   0x2801             CMP      R0,#+1
   \   00000032   0xD11F             BNE.N    ??SPI2_IRQHandler_1
    404          	 {
    405                  if (I2S2_stLROld==GPIO_PIN_SET)
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable12_14
   \   00000038   0x7800             LDRB     R0,[R0, #+0]
   \   0000003A   0x2801             CMP      R0,#+1
   \   0000003C   0xD103             BNE.N    ??SPI2_IRQHandler_2
    406                  {
    407                      I2S2_stNipple = app;           
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable12_15
   \   00000042   0x8004             STRH     R4,[R0, #+0]
   \   00000044   0xE035             B.N      ??SPI2_IRQHandler_3
    408                  }
    409          		else
    410          		{
    411          
    412          			 vRawSens3 = ((app>>I2S2_stPosShft)|(I2S2_stNipple<<(SDOLEN-I2S2_stPosShft)));
                 			 ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI2_IRQHandler_2: (+1)
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable12_16
   \   0000004A   0x7800             LDRB     R0,[R0, #+0]
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable12_15
   \   00000050   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000054   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000056   0x0022             MOVS     R2,R4
   \   00000058   0x4102             ASRS     R2,R2,R0
   \   0000005A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable12_16
   \   00000060   0x7800             LDRB     R0,[R0, #+0]
   \   00000062   0xF1D0 0x0010      RSBS     R0,R0,#+16
   \   00000066   0xFA11 0xF000      LSLS     R0,R1,R0
   \   0000006A   0x4310             ORRS     R0,R0,R2
   \   0000006C   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   00000070   0x8008             STRH     R0,[R1, #+0]
   \   00000072   0xE01E             B.N      ??SPI2_IRQHandler_3
    413          
    414          		}
    415          	 }
    416          	 else
    417          	 {
    418                  if (I2S2_stLROld==GPIO_PIN_RESET)
   \                     ??SPI2_IRQHandler_1: (+1)
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable12_14
   \   00000078   0x7800             LDRB     R0,[R0, #+0]
   \   0000007A   0x2800             CMP      R0,#+0
   \   0000007C   0xD103             BNE.N    ??SPI2_IRQHandler_4
    419                  {
    420                      I2S2_stNipple = app;
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable12_15
   \   00000082   0x8004             STRH     R4,[R0, #+0]
   \   00000084   0xE015             B.N      ??SPI2_IRQHandler_3
    421          
    422                  }
    423          		else
    424          		{
    425                      vRawSens4 =((app>>I2S2_stPosShft)|(I2S2_stNipple<<(SDOLEN-I2S2_stPosShft)));
                             ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI2_IRQHandler_4: (+1)
   \   00000086   0x.... 0x....      LDR.W    R0,??DataTable12_16
   \   0000008A   0x7800             LDRB     R0,[R0, #+0]
   \   0000008C   0x.... 0x....      LDR.W    R1,??DataTable12_15
   \   00000090   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000094   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000096   0x0022             MOVS     R2,R4
   \   00000098   0x4102             ASRS     R2,R2,R0
   \   0000009A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable12_16
   \   000000A0   0x7800             LDRB     R0,[R0, #+0]
   \   000000A2   0xF1D0 0x0010      RSBS     R0,R0,#+16
   \   000000A6   0xFA11 0xF000      LSLS     R0,R1,R0
   \   000000AA   0x4310             ORRS     R0,R0,R2
   \   000000AC   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   000000B0   0x8008             STRH     R0,[R1, #+0]
    426          		
    427          		}
    428          	 }
    429          
    430          	 	if (iSDO34<4*AUDIO_OUT_BUFFER_SIZE)
   \                     ??SPI2_IRQHandler_3: (+1)
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable12_19
   \   000000B6   0x8800             LDRH     R0,[R0, #+0]
   \   000000B8   0xF5B0 0x5F80      CMP      R0,#+4096
   \   000000BC   0xDA0C             BGE.N    ??SPI2_IRQHandler_5
    431          	   {
    432                     TestSDO34[iSDO34++]=app;
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable12_19
   \   000000C2   0x8800             LDRH     R0,[R0, #+0]
   \   000000C4   0x1C41             ADDS     R1,R0,#+1
   \   000000C6   0x.... 0x....      LDR.W    R2,??DataTable12_19
   \   000000CA   0x8011             STRH     R1,[R2, #+0]
   \   000000CC   0x.... 0x....      LDR.W    R1,??DataTable12_20
   \   000000D0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000D2   0xF821 0x4010      STRH     R4,[R1, R0, LSL #+1]
   \   000000D6   0xE003             B.N      ??SPI2_IRQHandler_6
    433          	   }
    434          	   else
    435          	   {
    436                     iSDO34=0;
   \                     ??SPI2_IRQHandler_5: (+1)
   \   000000D8   0x2000             MOVS     R0,#+0
   \   000000DA   0x.... 0x....      LDR.W    R1,??DataTable12_19
   \   000000DE   0x8008             STRH     R0,[R1, #+0]
    437          	   }
    438          	 
    439          #if 1
    440          	 if ((WaveRec_idxSens3 < (2*AUDIO_OUT_BUFFER_SIZE-1))&&(WaveRec_idxSens4 < (2*AUDIO_OUT_BUFFER_SIZE-1)))
   \                     ??SPI2_IRQHandler_6: (+1)
   \   000000E0   0x.... 0x....      LDR.W    R0,??DataTable12_21
   \   000000E4   0x8800             LDRH     R0,[R0, #+0]
   \   000000E6   0xF240 0x71FF      MOVW     R1,#+2047
   \   000000EA   0x4288             CMP      R0,R1
   \   000000EC   0xF280 0x80A4      BGE.W    ??SPI2_IRQHandler_7
   \   000000F0   0x.... 0x....      LDR.W    R0,??DataTable12_22
   \   000000F4   0x8800             LDRH     R0,[R0, #+0]
   \   000000F6   0xF240 0x71FF      MOVW     R1,#+2047
   \   000000FA   0x4288             CMP      R0,R1
   \   000000FC   0xF280 0x809C      BGE.W    ??SPI2_IRQHandler_7
    441          //             &&(I2S2_stLR!=I2S2_stLROld))
    442          	 {
    443          /*-------------------------------------------------------------------------------------------------------------
    444          			  
    445          	Sequence  Record Data                     Processing Data                 Player Data
    446          			  
    447          	1-------  Buffer1                         Buffer2                         Buffer3 (BUF3_PLAY)
    448          			  
    449          	2-------  Buffer3                         Buffer1                         Buffer2 (BUF2_PLAY)		  
    450          			  
    451          	3-------  Buffer2                         Buffer3                         Buffer1 (BUF1_PLAY)
    452           ---------------------------------------------------------------------------------------------------------------*/
    453          		/* Recording Audio Data */			             
    454          		 switch (buffer_switch)
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable12_7
   \   00000104   0x7800             LDRB     R0,[R0, #+0]
   \   00000106   0x2800             CMP      R0,#+0
   \   00000108   0xD003             BEQ.N    ??SPI2_IRQHandler_8
   \   0000010A   0x2802             CMP      R0,#+2
   \   0000010C   0xD063             BEQ.N    ??SPI2_IRQHandler_9
   \   0000010E   0xD331             BCC.N    ??SPI2_IRQHandler_10
   \   00000110   0xE092             B.N      ??SPI2_IRQHandler_11
    455          		 {
    456          			  case BUF1_PLAY:
    457          				  //Data is updated to Buffer2
    458          				  //PDM_Filter_64_LSB((uint8_t *)InternalBuffer, (uint16_t *)(buffer2+cntPos*PCM_OUT_SIZE), volume , (PDMFilter_InitStruct *)&Filter[0]);
    459          #if MAIN_FFT
    460          				  if ((I2S2_stLR==GPIO_PIN_SET)&&(I2S2_stLROld==GPIO_PIN_RESET))
    461          				      Buffer2.bufMIC3[WaveRec_idxSens3++] = vRawSens3;
    462          				  if ((I2S2_stLR==GPIO_PIN_RESET)&&(I2S2_stLROld==GPIO_PIN_SET))
    463          				      Buffer2.bufMIC4[WaveRec_idxSens4++] = vRawSens4;
    464          #else
    465                            if (WaveRec_idxSens3<=WaveRec_idxSens4) 
                                   ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI2_IRQHandler_8: (+1)
   \   00000112   0x.... 0x....      LDR.W    R0,??DataTable12_22
   \   00000116   0x8800             LDRH     R0,[R0, #+0]
   \   00000118   0x.... 0x....      LDR.W    R1,??DataTable12_21
   \   0000011C   0x8809             LDRH     R1,[R1, #+0]
   \   0000011E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000120   0x4288             CMP      R0,R1
   \   00000122   0xD313             BCC.N    ??SPI2_IRQHandler_12
    466                                Buffer2.bufMIC3[WaveRec_idxSens3++] = vRawSens3;
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable12_21
   \   00000128   0x8800             LDRH     R0,[R0, #+0]
   \   0000012A   0x1C41             ADDS     R1,R0,#+1
   \   0000012C   0x.... 0x....      LDR.W    R2,??DataTable12_21
   \   00000130   0x8011             STRH     R1,[R2, #+0]
   \   00000132   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   00000136   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000013A   0x.... 0x....      LDR.W    R2,??DataTable12_8
   \   0000013E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000140   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   00000144   0xF242 0x0228      MOVW     R2,#+8232
   \   00000148   0x5211             STRH     R1,[R2, R0]
   \   0000014A   0xE012             B.N      ??SPI2_IRQHandler_13
    467          				  else
    468                                Buffer2.bufMIC4[WaveRec_idxSens4++] = vRawSens4;			  
   \                     ??SPI2_IRQHandler_12: (+1)
   \   0000014C   0x.... 0x....      LDR.W    R0,??DataTable12_22
   \   00000150   0x8800             LDRH     R0,[R0, #+0]
   \   00000152   0x1C41             ADDS     R1,R0,#+1
   \   00000154   0x.... 0x....      LDR.W    R2,??DataTable12_22
   \   00000158   0x8011             STRH     R1,[R2, #+0]
   \   0000015A   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   0000015E   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000162   0x.... 0x....      LDR.W    R2,??DataTable12_8
   \   00000166   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000168   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   0000016C   0xF243 0x023C      MOVW     R2,#+12348
   \   00000170   0x5211             STRH     R1,[R2, R0]
    469          #endif 
    470          				  break;
   \                     ??SPI2_IRQHandler_13: (+1)
   \   00000172   0xE061             B.N      ??SPI2_IRQHandler_7
    471          			  case BUF2_PLAY:
    472          				  //Data is updated to Buffer3
    473          				  //PDM_Filter_64_LSB((uint8_t *)InternalBuffer, (uint16_t *)(buffer3+cntPos*PCM_OUT_SIZE), volume , (PDMFilter_InitStruct *)&Filter[0]);
    474          #if MAIN_FFT
    475          				  if ((I2S2_stLR==GPIO_PIN_SET)&&(I2S2_stLROld==GPIO_PIN_RESET))
    476          				      Buffer3.bufMIC3[WaveRec_idxSens3++] = vRawSens3;
    477          				  if ((I2S2_stLR==GPIO_PIN_RESET)&&(I2S2_stLROld==GPIO_PIN_SET))
    478          				      Buffer3.bufMIC4[WaveRec_idxSens4++] = vRawSens4;
    479          #else
    480                            if (WaveRec_idxSens3<=WaveRec_idxSens4) 
                                   ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI2_IRQHandler_10: (+1)
   \   00000174   0x.... 0x....      LDR.W    R0,??DataTable12_22
   \   00000178   0x8800             LDRH     R0,[R0, #+0]
   \   0000017A   0x.... 0x....      LDR.W    R1,??DataTable12_21
   \   0000017E   0x8809             LDRH     R1,[R1, #+0]
   \   00000180   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000182   0x4288             CMP      R0,R1
   \   00000184   0xD313             BCC.N    ??SPI2_IRQHandler_14
    481                                Buffer3.bufMIC3[WaveRec_idxSens3++] = vRawSens3;
   \   00000186   0x.... 0x....      LDR.W    R0,??DataTable12_21
   \   0000018A   0x8800             LDRH     R0,[R0, #+0]
   \   0000018C   0x1C41             ADDS     R1,R0,#+1
   \   0000018E   0x.... 0x....      LDR.W    R2,??DataTable12_21
   \   00000192   0x8011             STRH     R1,[R2, #+0]
   \   00000194   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   00000198   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000019C   0x.... 0x....      LDR.W    R2,??DataTable12_9
   \   000001A0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001A2   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000001A6   0xF242 0x0228      MOVW     R2,#+8232
   \   000001AA   0x5211             STRH     R1,[R2, R0]
   \   000001AC   0xE012             B.N      ??SPI2_IRQHandler_15
    482          				  else
    483                                Buffer3.bufMIC4[WaveRec_idxSens4++] = vRawSens4;			   
   \                     ??SPI2_IRQHandler_14: (+1)
   \   000001AE   0x.... 0x....      LDR.W    R0,??DataTable12_22
   \   000001B2   0x8800             LDRH     R0,[R0, #+0]
   \   000001B4   0x1C41             ADDS     R1,R0,#+1
   \   000001B6   0x.... 0x....      LDR.W    R2,??DataTable12_22
   \   000001BA   0x8011             STRH     R1,[R2, #+0]
   \   000001BC   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   000001C0   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000001C4   0x.... 0x....      LDR.W    R2,??DataTable12_9
   \   000001C8   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001CA   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000001CE   0xF243 0x023C      MOVW     R2,#+12348
   \   000001D2   0x5211             STRH     R1,[R2, R0]
    484          #endif
    485          				  break;
   \                     ??SPI2_IRQHandler_15: (+1)
   \   000001D4   0xE030             B.N      ??SPI2_IRQHandler_7
    486          			  case BUF3_PLAY:
    487          				  //Data is update to Buffer1
    488          				  //PDM_Filter_64_LSB((uint8_t *)InternalBuffer, (uint16_t *)(buffer1+cntPos*PCM_OUT_SIZE), volume , (PDMFilter_InitStruct *)&Filter[0]);
    489          #if MAIN_FFT
    490          				  if ((I2S2_stLR==GPIO_PIN_SET)&&(I2S2_stLROld==GPIO_PIN_RESET))
    491               				  Buffer1.bufMIC3[WaveRec_idxSens3++] = vRawSens3;
    492            				  if ((I2S2_stLR==GPIO_PIN_RESET)&&(I2S2_stLROld==GPIO_PIN_SET))
    493               				  Buffer1.bufMIC4[ WaveRec_idxSens4++] = vRawSens4;
    494          #else
    495                            if (WaveRec_idxSens3<=WaveRec_idxSens4) 
                                   ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI2_IRQHandler_9: (+1)
   \   000001D6   0x.... 0x....      LDR.W    R0,??DataTable12_22
   \   000001DA   0x8800             LDRH     R0,[R0, #+0]
   \   000001DC   0x.... 0x....      LDR.W    R1,??DataTable12_21
   \   000001E0   0x8809             LDRH     R1,[R1, #+0]
   \   000001E2   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001E4   0x4288             CMP      R0,R1
   \   000001E6   0xD313             BCC.N    ??SPI2_IRQHandler_16
    496                                Buffer1.bufMIC3[WaveRec_idxSens3++] = vRawSens3;
   \   000001E8   0x.... 0x....      LDR.W    R0,??DataTable12_21
   \   000001EC   0x8800             LDRH     R0,[R0, #+0]
   \   000001EE   0x1C41             ADDS     R1,R0,#+1
   \   000001F0   0x.... 0x....      LDR.W    R2,??DataTable12_21
   \   000001F4   0x8011             STRH     R1,[R2, #+0]
   \   000001F6   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   000001FA   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000001FE   0x.... 0x....      LDR.W    R2,??DataTable12_10
   \   00000202   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000204   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   00000208   0xF242 0x0228      MOVW     R2,#+8232
   \   0000020C   0x5211             STRH     R1,[R2, R0]
   \   0000020E   0xE012             B.N      ??SPI2_IRQHandler_17
    497          				  else
    498                                Buffer1.bufMIC4[WaveRec_idxSens4++] = vRawSens4;
   \                     ??SPI2_IRQHandler_16: (+1)
   \   00000210   0x.... 0x....      LDR.W    R0,??DataTable12_22
   \   00000214   0x8800             LDRH     R0,[R0, #+0]
   \   00000216   0x1C41             ADDS     R1,R0,#+1
   \   00000218   0x.... 0x....      LDR.W    R2,??DataTable12_22
   \   0000021C   0x8011             STRH     R1,[R2, #+0]
   \   0000021E   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   00000222   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000226   0x.... 0x....      LDR.W    R2,??DataTable12_10
   \   0000022A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000022C   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   00000230   0xF243 0x023C      MOVW     R2,#+12348
   \   00000234   0x5211             STRH     R1,[R2, R0]
    499          
    500          
    501          #endif
    502          				  break;
   \                     ??SPI2_IRQHandler_17: (+1)
   \   00000236   0xE7FF             B.N      ??SPI2_IRQHandler_7
    503          			  default:
    504          				  break; 
    505          		 }
    506          		
    507          	 }          
    508          #endif		  
    509          	 I2S2_stLROld = I2S2_stLR;
   \                     ??SPI2_IRQHandler_11: (+1)
   \                     ??SPI2_IRQHandler_7: (+1)
   \   00000238   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   0000023C   0x7800             LDRB     R0,[R0, #+0]
   \   0000023E   0x.... 0x....      LDR.W    R1,??DataTable12_14
   \   00000242   0x7008             STRB     R0,[R1, #+0]
    510          
    511             }
    512          
    513          }
   \                     ??SPI2_IRQHandler_0: (+1)
   \   00000244   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .bss, align 1
   \                     ??I2S2_stLR:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??I2S2_stLROld:
   \   00000000                      DS8 1
    514          
    515          

   \                                 In section .text, align 2, keep-with-next
    516          void SPI4_IRQHandler(void)
    517          {
   \                     SPI4_IRQHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    518            static uint8_t Main_stLR, Main_stLROld;
    519          
    520          
    521          
    522            /* USER CODE BEGIN SPI5_IRQn 0 */
    523          
    524            /* USER CODE END SPI5_IRQn 0 */
    525            //HAL_SPI_IRQHandler(&hspi5);
    526            /* USER CODE BEGIN SPI5_IRQn 1 */
    527          
    528            /* USER CODE END SPI5_IRQn 1 */
    529              /* Check if data are available in SPI Data register */
    530            /* SPI in mode Receiver ----------------------------------------------------*/
    531            if(
    532          //    (__HAL_SPI_GET_FLAG(&hspi4, SPI_FLAG_OVR) == RESET)&&
    533          //    (__HAL_SPI_GET_FLAG(&hspi4, SPI_FLAG_RXNE) != RESET)&&
    534               (__HAL_SPI_GET_IT_SOURCE(&hspi4, SPI_IT_RXNE) != RESET))
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable12_23
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x6840             LDR      R0,[R0, #+4]
   \   0000000A   0x0640             LSLS     R0,R0,#+25
   \   0000000C   0xF140 0x811A      BPL.W    ??SPI4_IRQHandler_0
    535            {
    536          
    537             uint16_t test;
    538             test =  SPI_I2S_ReceiveData(SPI4);
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable12_24  ;; 0x40013400
   \   00000014   0x.... 0x....      BL       SPI_I2S_ReceiveData
   \   00000018   0x0004             MOVS     R4,R0
    539             
    540             /* Left-Right Mic data */
    541             Main_stLR= HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4);
   \   0000001A   0x2110             MOVS     R1,#+16
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable9_2  ;; 0x40020000
   \   00000020   0x.... 0x....      BL       HAL_GPIO_ReadPin
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable12_25
   \   00000028   0x7008             STRB     R0,[R1, #+0]
    542          
    543          	if (Main_stLR==GPIO_PIN_SET)
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable12_25
   \   0000002E   0x7800             LDRB     R0,[R0, #+0]
   \   00000030   0x2801             CMP      R0,#+1
   \   00000032   0xD11F             BNE.N    ??SPI4_IRQHandler_1
    544          	{
    545                      if (Main_stLROld==GPIO_PIN_SET)
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable13
   \   00000038   0x7800             LDRB     R0,[R0, #+0]
   \   0000003A   0x2801             CMP      R0,#+1
   \   0000003C   0xD103             BNE.N    ??SPI4_IRQHandler_2
    546                      {
    547                         I2S1_stNipple = (test);    
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable12_26
   \   00000042   0x8004             STRH     R4,[R0, #+0]
   \   00000044   0xE035             B.N      ??SPI4_IRQHandler_3
    548                      }
    549                      else
    550                      {
    551           
    552                         vRawSens5 =((test>>SPI4_stPosShft)|(I2S1_stNipple<<(SDOLEN-SPI4_stPosShft)));						 	             		   
                                ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI4_IRQHandler_2: (+1)
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable12_27
   \   0000004A   0x7800             LDRB     R0,[R0, #+0]
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable12_26
   \   00000050   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000054   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000056   0x0022             MOVS     R2,R4
   \   00000058   0x4102             ASRS     R2,R2,R0
   \   0000005A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable12_27
   \   00000060   0x7800             LDRB     R0,[R0, #+0]
   \   00000062   0xF1D0 0x0010      RSBS     R0,R0,#+16
   \   00000066   0xFA11 0xF000      LSLS     R0,R1,R0
   \   0000006A   0x4310             ORRS     R0,R0,R2
   \   0000006C   0x.... 0x....      LDR.W    R1,??DataTable12_28
   \   00000070   0x8008             STRH     R0,[R1, #+0]
   \   00000072   0xE01E             B.N      ??SPI4_IRQHandler_3
    553                         
    554                      }
    555          	}
    556          	else
    557          	{
    558                    if (Main_stLROld==GPIO_PIN_RESET)
   \                     ??SPI4_IRQHandler_1: (+1)
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable13
   \   00000078   0x7800             LDRB     R0,[R0, #+0]
   \   0000007A   0x2800             CMP      R0,#+0
   \   0000007C   0xD103             BNE.N    ??SPI4_IRQHandler_4
    559                    {
    560                        I2S1_stNipple = (test);	  
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable12_26
   \   00000082   0x8004             STRH     R4,[R0, #+0]
   \   00000084   0xE015             B.N      ??SPI4_IRQHandler_3
    561          
    562                    }
    563                    else
    564                    {
    565                        vRawSens6 =((test>>SPI4_stPosShft)|(I2S1_stNipple<<(SDOLEN-SPI4_stPosShft)));
                               ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI4_IRQHandler_4: (+1)
   \   00000086   0x.... 0x....      LDR.W    R0,??DataTable12_27
   \   0000008A   0x7800             LDRB     R0,[R0, #+0]
   \   0000008C   0x.... 0x....      LDR.W    R1,??DataTable12_26
   \   00000090   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000094   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000096   0x0022             MOVS     R2,R4
   \   00000098   0x4102             ASRS     R2,R2,R0
   \   0000009A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable12_27
   \   000000A0   0x7800             LDRB     R0,[R0, #+0]
   \   000000A2   0xF1D0 0x0010      RSBS     R0,R0,#+16
   \   000000A6   0xFA11 0xF000      LSLS     R0,R1,R0
   \   000000AA   0x4310             ORRS     R0,R0,R2
   \   000000AC   0x.... 0x....      LDR.W    R1,??DataTable12_29
   \   000000B0   0x8008             STRH     R0,[R1, #+0]
    566                    }		
    567          	}
    568          	
    569          	if (iSDO56<4*AUDIO_OUT_BUFFER_SIZE)
   \                     ??SPI4_IRQHandler_3: (+1)
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable12_30
   \   000000B6   0x8800             LDRH     R0,[R0, #+0]
   \   000000B8   0xF5B0 0x5F80      CMP      R0,#+4096
   \   000000BC   0xDA0C             BGE.N    ??SPI4_IRQHandler_5
    570          	{
    571          		TestSDO56[iSDO56++]=test;
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable12_30
   \   000000C2   0x8800             LDRH     R0,[R0, #+0]
   \   000000C4   0x1C41             ADDS     R1,R0,#+1
   \   000000C6   0x.... 0x....      LDR.W    R2,??DataTable12_30
   \   000000CA   0x8011             STRH     R1,[R2, #+0]
   \   000000CC   0x.... 0x....      LDR.W    R1,??DataTable12_31
   \   000000D0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000D2   0xF821 0x4010      STRH     R4,[R1, R0, LSL #+1]
   \   000000D6   0xE003             B.N      ??SPI4_IRQHandler_6
    572          	}
    573          	else
    574          	{
    575          		iSDO56=0;
   \                     ??SPI4_IRQHandler_5: (+1)
   \   000000D8   0x2000             MOVS     R0,#+0
   \   000000DA   0x.... 0x....      LDR.W    R1,??DataTable12_30
   \   000000DE   0x8008             STRH     R0,[R1, #+0]
    576          	}
    577          
    578             
    579          #if 1
    580          	if ((WaveRec_idxSens5 < (2*AUDIO_OUT_BUFFER_SIZE-1))&&(WaveRec_idxSens6 < (2*AUDIO_OUT_BUFFER_SIZE-1)))
   \                     ??SPI4_IRQHandler_6: (+1)
   \   000000E0   0x.... 0x....      LDR.W    R0,??DataTable12_32
   \   000000E4   0x8800             LDRH     R0,[R0, #+0]
   \   000000E6   0xF240 0x71FF      MOVW     R1,#+2047
   \   000000EA   0x4288             CMP      R0,R1
   \   000000EC   0xF280 0x80A4      BGE.W    ??SPI4_IRQHandler_7
   \   000000F0   0x.... 0x....      LDR.W    R0,??DataTable12_33
   \   000000F4   0x8800             LDRH     R0,[R0, #+0]
   \   000000F6   0xF240 0x71FF      MOVW     R1,#+2047
   \   000000FA   0x4288             CMP      R0,R1
   \   000000FC   0xF280 0x809C      BGE.W    ??SPI4_IRQHandler_7
    581          //            &&(stLR!=stLROld))
    582          	{
    583          /*-------------------------------------------------------------------------------------------------------------
    584          			  
    585          	Sequence  Record Data                     Processing Data                 Player Data
    586          			  
    587          	1-------  Buffer1                         Buffer2                         Buffer3 BUF3_PLAY)
    588          			  
    589          	2-------  Buffer3                         Buffer1                         Buffer2 (BUF2_PLAY)		  
    590          			  
    591          	3-------  Buffer2                         Buffer3                         Buffer1 (BUF1_PLAY)
    592           ---------------------------------------------------------------------------------------------------------------*/
    593                        /* Recording Audio Data */			             
    594                         switch (buffer_switch)
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable12_7
   \   00000104   0x7800             LDRB     R0,[R0, #+0]
   \   00000106   0x2800             CMP      R0,#+0
   \   00000108   0xD003             BEQ.N    ??SPI4_IRQHandler_8
   \   0000010A   0x2802             CMP      R0,#+2
   \   0000010C   0xD063             BEQ.N    ??SPI4_IRQHandler_9
   \   0000010E   0xD331             BCC.N    ??SPI4_IRQHandler_10
   \   00000110   0xE092             B.N      ??SPI4_IRQHandler_11
    595                         {
    596                                  case BUF1_PLAY:
    597          #if MAIN_FFT
    598                                          //Data is updated to Buffer2
    599                                          if ((Main_stLR==GPIO_PIN_SET)&&(Main_stLROld==GPIO_PIN_RESET))
    600                                              Buffer2.bufMIC5[WaveRec_idxSens5++] = vRawSens5;
    601          								if ((Main_stLR==GPIO_PIN_RESET)&&(Main_stLROld==GPIO_PIN_SET))
    602                                              Buffer2.bufMIC6[WaveRec_idxSens6++] = vRawSens6;
    603          
    604          #else
    605                                      if(WaveRec_idxSens5<=WaveRec_idxSens6)
                                             ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI4_IRQHandler_8: (+1)
   \   00000112   0x.... 0x....      LDR.W    R0,??DataTable12_33
   \   00000116   0x8800             LDRH     R0,[R0, #+0]
   \   00000118   0x.... 0x....      LDR.W    R1,??DataTable12_32
   \   0000011C   0x8809             LDRH     R1,[R1, #+0]
   \   0000011E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000120   0x4288             CMP      R0,R1
   \   00000122   0xD313             BCC.N    ??SPI4_IRQHandler_12
    606                                          Buffer2.bufMIC5[WaveRec_idxSens5++] = vRawSens5;
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable12_32
   \   00000128   0x8800             LDRH     R0,[R0, #+0]
   \   0000012A   0x1C41             ADDS     R1,R0,#+1
   \   0000012C   0x.... 0x....      LDR.W    R2,??DataTable12_32
   \   00000130   0x8011             STRH     R1,[R2, #+0]
   \   00000132   0x.... 0x....      LDR.W    R1,??DataTable12_28
   \   00000136   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000013A   0x.... 0x....      LDR.W    R2,??DataTable12_8
   \   0000013E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000140   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   00000144   0xF244 0x0250      MOVW     R2,#+16464
   \   00000148   0x5211             STRH     R1,[R2, R0]
   \   0000014A   0xE012             B.N      ??SPI4_IRQHandler_13
    607          							else
    608                                          Buffer2.bufMIC6[WaveRec_idxSens6++] = vRawSens6;
   \                     ??SPI4_IRQHandler_12: (+1)
   \   0000014C   0x.... 0x....      LDR.W    R0,??DataTable12_33
   \   00000150   0x8800             LDRH     R0,[R0, #+0]
   \   00000152   0x1C41             ADDS     R1,R0,#+1
   \   00000154   0x.... 0x....      LDR.W    R2,??DataTable12_33
   \   00000158   0x8011             STRH     R1,[R2, #+0]
   \   0000015A   0x.... 0x....      LDR.W    R1,??DataTable12_29
   \   0000015E   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000162   0x.... 0x....      LDR.W    R2,??DataTable12_8
   \   00000166   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000168   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   0000016C   0xF245 0x0264      MOVW     R2,#+20580
   \   00000170   0x5211             STRH     R1,[R2, R0]
    609          								
    610          #endif
    611          
    612                                          break;
   \                     ??SPI4_IRQHandler_13: (+1)
   \   00000172   0xE061             B.N      ??SPI4_IRQHandler_7
    613                                  case BUF2_PLAY:
    614          #if MAIN_FFT
    615                                          //Data is updated to Buffer3				 
    616          								if ((Main_stLR==GPIO_PIN_SET)&&(Main_stLROld==GPIO_PIN_RESET))
    617                                              Buffer3.bufMIC5[WaveRec_idxSens5++] = vRawSens5;
    618          								if ((Main_stLR==GPIO_PIN_RESET)&&(Main_stLROld==GPIO_PIN_SET))
    619                                              Buffer3.bufMIC6[WaveRec_idxSens6++] = vRawSens6;
    620          #else
    621          
    622                                      if(WaveRec_idxSens5<=WaveRec_idxSens6)
                                             ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI4_IRQHandler_10: (+1)
   \   00000174   0x.... 0x....      LDR.W    R0,??DataTable12_33
   \   00000178   0x8800             LDRH     R0,[R0, #+0]
   \   0000017A   0x.... 0x....      LDR.W    R1,??DataTable12_32
   \   0000017E   0x8809             LDRH     R1,[R1, #+0]
   \   00000180   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000182   0x4288             CMP      R0,R1
   \   00000184   0xD313             BCC.N    ??SPI4_IRQHandler_14
    623                                          Buffer3.bufMIC5[WaveRec_idxSens5++] = vRawSens5;
   \   00000186   0x.... 0x....      LDR.W    R0,??DataTable12_32
   \   0000018A   0x8800             LDRH     R0,[R0, #+0]
   \   0000018C   0x1C41             ADDS     R1,R0,#+1
   \   0000018E   0x.... 0x....      LDR.W    R2,??DataTable12_32
   \   00000192   0x8011             STRH     R1,[R2, #+0]
   \   00000194   0x.... 0x....      LDR.W    R1,??DataTable12_28
   \   00000198   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000019C   0x.... 0x....      LDR.W    R2,??DataTable12_9
   \   000001A0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001A2   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000001A6   0xF244 0x0250      MOVW     R2,#+16464
   \   000001AA   0x5211             STRH     R1,[R2, R0]
   \   000001AC   0xE012             B.N      ??SPI4_IRQHandler_15
    624          							else
    625                                          Buffer3.bufMIC6[WaveRec_idxSens6++] = vRawSens6;							
   \                     ??SPI4_IRQHandler_14: (+1)
   \   000001AE   0x.... 0x....      LDR.W    R0,??DataTable12_33
   \   000001B2   0x8800             LDRH     R0,[R0, #+0]
   \   000001B4   0x1C41             ADDS     R1,R0,#+1
   \   000001B6   0x.... 0x....      LDR.W    R2,??DataTable12_33
   \   000001BA   0x8011             STRH     R1,[R2, #+0]
   \   000001BC   0x.... 0x....      LDR.W    R1,??DataTable12_29
   \   000001C0   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000001C4   0x.... 0x....      LDR.W    R2,??DataTable12_9
   \   000001C8   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001CA   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000001CE   0xF245 0x0264      MOVW     R2,#+20580
   \   000001D2   0x5211             STRH     R1,[R2, R0]
    626          
    627          #endif
    628                                          break;
   \                     ??SPI4_IRQHandler_15: (+1)
   \   000001D4   0xE030             B.N      ??SPI4_IRQHandler_7
    629                                  case BUF3_PLAY:
    630          #if MAIN_FFT
    631          
    632                                          //Data is update to Buffer1		 
    633          								if ((Main_stLR==GPIO_PIN_SET)&&(Main_stLROld==GPIO_PIN_RESET))
    634                                              Buffer1.bufMIC5[WaveRec_idxSens5++] = vRawSens5;
    635          								if ((Main_stLR==GPIO_PIN_RESET)&&(Main_stLROld==GPIO_PIN_SET))
    636                                              Buffer1.bufMIC6[ WaveRec_idxSens6++] = vRawSens6;
    637          #else
    638                                      if(WaveRec_idxSens5<=WaveRec_idxSens6)
                                             ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI4_IRQHandler_9: (+1)
   \   000001D6   0x.... 0x....      LDR.W    R0,??DataTable12_33
   \   000001DA   0x8800             LDRH     R0,[R0, #+0]
   \   000001DC   0x.... 0x....      LDR.W    R1,??DataTable12_32
   \   000001E0   0x8809             LDRH     R1,[R1, #+0]
   \   000001E2   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001E4   0x4288             CMP      R0,R1
   \   000001E6   0xD313             BCC.N    ??SPI4_IRQHandler_16
    639                                          Buffer1.bufMIC5[WaveRec_idxSens5++] = vRawSens5;
   \   000001E8   0x.... 0x....      LDR.W    R0,??DataTable12_32
   \   000001EC   0x8800             LDRH     R0,[R0, #+0]
   \   000001EE   0x1C41             ADDS     R1,R0,#+1
   \   000001F0   0x.... 0x....      LDR.W    R2,??DataTable12_32
   \   000001F4   0x8011             STRH     R1,[R2, #+0]
   \   000001F6   0x.... 0x....      LDR.W    R1,??DataTable12_28
   \   000001FA   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000001FE   0x.... 0x....      LDR.W    R2,??DataTable12_10
   \   00000202   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000204   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   00000208   0xF244 0x0250      MOVW     R2,#+16464
   \   0000020C   0x5211             STRH     R1,[R2, R0]
   \   0000020E   0xE012             B.N      ??SPI4_IRQHandler_17
    640          							else
    641                                          Buffer1.bufMIC6[WaveRec_idxSens6++] = vRawSens6;							
   \                     ??SPI4_IRQHandler_16: (+1)
   \   00000210   0x.... 0x....      LDR.W    R0,??DataTable12_33
   \   00000214   0x8800             LDRH     R0,[R0, #+0]
   \   00000216   0x1C41             ADDS     R1,R0,#+1
   \   00000218   0x.... 0x....      LDR.W    R2,??DataTable12_33
   \   0000021C   0x8011             STRH     R1,[R2, #+0]
   \   0000021E   0x.... 0x....      LDR.W    R1,??DataTable12_29
   \   00000222   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000226   0x.... 0x....      LDR.W    R2,??DataTable12_10
   \   0000022A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000022C   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   00000230   0xF245 0x0264      MOVW     R2,#+20580
   \   00000234   0x5211             STRH     R1,[R2, R0]
    642          #endif
    643                                          break;
   \                     ??SPI4_IRQHandler_17: (+1)
   \   00000236   0xE7FF             B.N      ??SPI4_IRQHandler_7
    644                                  default:
    645                                          break; 
    646                         }
    647          		
    648          	 } 
    649          #endif	
    650          	/* Update Old value */	  
    651          	Main_stLROld=Main_stLR;	  
   \                     ??SPI4_IRQHandler_11: (+1)
   \                     ??SPI4_IRQHandler_7: (+1)
   \   00000238   0x.... 0x....      LDR.W    R0,??DataTable12_25
   \   0000023C   0x7800             LDRB     R0,[R0, #+0]
   \   0000023E   0x.... 0x....      LDR.W    R1,??DataTable13
   \   00000242   0x7008             STRB     R0,[R1, #+0]
    652               
    653            }      
    654          }
   \                     ??SPI4_IRQHandler_0: (+1)
   \   00000244   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .bss, align 1
   \                     ??Main_stLR:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??Main_stLROld:
   \   00000000                      DS8 1
    655          
    656          
    657          
    658          

   \                                 In section .text, align 2, keep-with-next
    659          void SPI5_IRQHandler(void)
    660          {
   \                     SPI5_IRQHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    661            //static uint16_t stNipple;
    662            //static uint8_t stLR, stOder;
    663          
    664            /* USER CODE BEGIN SPI5_IRQn 0 */
    665          
    666            /* USER CODE END SPI5_IRQn 0 */
    667            //HAL_SPI_IRQHandler(&hspi5);
    668            /* USER CODE BEGIN SPI5_IRQn 1 */
    669          
    670            /* USER CODE END SPI5_IRQn 1 */
    671              /* Check if data are available in SPI Data register */
    672            /* SPI in mode Receiver ----------------------------------------------------*/
    673            if(
    674               (__HAL_SPI_GET_FLAG(&hspi5, SPI_FLAG_OVR) == RESET)&&
    675               (__HAL_SPI_GET_FLAG(&hspi5, SPI_FLAG_RXNE) != RESET)&&
    676               (__HAL_SPI_GET_IT_SOURCE(&hspi5, SPI_IT_RXNE) != RESET))
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable13_1
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x6880             LDR      R0,[R0, #+8]
   \   0000000A   0x0640             LSLS     R0,R0,#+25
   \   0000000C   0xD46D             BMI.N    ??SPI5_IRQHandler_0
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable13_1
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x6880             LDR      R0,[R0, #+8]
   \   00000016   0x07C0             LSLS     R0,R0,#+31
   \   00000018   0xD567             BPL.N    ??SPI5_IRQHandler_0
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable13_1
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0x6840             LDR      R0,[R0, #+4]
   \   00000022   0x0640             LSLS     R0,R0,#+25
   \   00000024   0xD561             BPL.N    ??SPI5_IRQHandler_0
    677            {
    678          
    679          
    680             uint16_t test;
    681             test =  SPI_I2S_ReceiveData(SPI5);
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable13_2  ;; 0x40015000
   \   0000002A   0x.... 0x....      BL       SPI_I2S_ReceiveData
   \   0000002E   0x0004             MOVS     R4,R0
    682             SPI5->DR = 3333;
   \   00000030   0xF640 0x5005      MOVW     R0,#+3333
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable13_3  ;; 0x4001500c
   \   00000038   0x6008             STR      R0,[R1, #+0]
    683          
    684            pDataMic8[idxMic8++] =	HTONS(test);
   \   0000003A   0x0020             MOVS     R0,R4
   \   0000003C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000003E   0x0221             LSLS     R1,R4,#+8
   \   00000040   0xEA51 0x2010      ORRS     R0,R1,R0, LSR #+8
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable13_4
   \   00000048   0x.... 0x....      LDR.W    R2,??DataTable13_5
   \   0000004C   0x8812             LDRH     R2,[R2, #+0]
   \   0000004E   0xF821 0x0012      STRH     R0,[R1, R2, LSL #+1]
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable13_5
   \   00000056   0x8800             LDRH     R0,[R0, #+0]
   \   00000058   0x1C40             ADDS     R0,R0,#+1
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable13_5
   \   0000005E   0x8008             STRH     R0,[R1, #+0]
    685            
    686            //volume = 64;
    687            
    688            if (idxMic8>=64)
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable13_5
   \   00000064   0x8800             LDRH     R0,[R0, #+0]
   \   00000066   0x2840             CMP      R0,#+64
   \   00000068   0xDB3F             BLT.N    ??SPI5_IRQHandler_0
    689            {
    690          	if (buffer_switch != 1)
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable12_7
   \   0000006E   0x7800             LDRB     R0,[R0, #+0]
   \   00000070   0x2801             CMP      R0,#+1
   \   00000072   0xD013             BEQ.N    ??SPI5_IRQHandler_1
    691          	{
    692          		PDM_Filter_64_LSB((uint8_t *)pDataMic8,(uint16_t *)(bufPCMSens8 + cntPos*16), volume ,
                 		^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
    693          						  (PDMFilter_InitStruct *)&Filter[0]);
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable13_6
   \   00000078   0x7802             LDRB     R2,[R0, #+0]
   \   0000007A   0x.... 0x....      LDR.W    R3,??DataTable13_7
   \   0000007E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000080   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable13_8
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable16
   \   0000008C   0x8809             LDRH     R1,[R1, #+0]
   \   0000008E   0xEB10 0x1141      ADDS     R1,R0,R1, LSL #+5
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable13_4
   \   00000096   0x.... 0x....      BL       PDM_Filter_64_LSB
   \   0000009A   0xE012             B.N      ??SPI5_IRQHandler_2
    694          	}
    695          	else
    696          	{
    697          		PDM_Filter_64_LSB((uint8_t *)pDataMic8,(uint16_t *)(bufPCMSens8 + cntPos*16), volume , 
                 		^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
    698          						  (PDMFilter_InitStruct *)&Filter[0]);   
   \                     ??SPI5_IRQHandler_1: (+1)
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable13_6
   \   000000A0   0x7802             LDRB     R2,[R0, #+0]
   \   000000A2   0x.... 0x....      LDR.W    R3,??DataTable13_7
   \   000000A6   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000A8   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable13_8
   \   000000AE   0x6800             LDR      R0,[R0, #+0]
   \   000000B0   0x.... 0x....      LDR.W    R1,??DataTable16
   \   000000B4   0x8809             LDRH     R1,[R1, #+0]
   \   000000B6   0xEB10 0x1141      ADDS     R1,R0,R1, LSL #+5
   \   000000BA   0x.... 0x....      LDR.W    R0,??DataTable13_4
   \   000000BE   0x.... 0x....      BL       PDM_Filter_64_LSB
    699          	}
    700          	idxMic8=0;
   \                     ??SPI5_IRQHandler_2: (+1)
   \   000000C2   0x2000             MOVS     R0,#+0
   \   000000C4   0x.... 0x....      LDR.W    R1,??DataTable13_5
   \   000000C8   0x8008             STRH     R0,[R1, #+0]
    701          	cntPos++;
   \   000000CA   0x.... 0x....      LDR.W    R0,??DataTable16
   \   000000CE   0x8800             LDRH     R0,[R0, #+0]
   \   000000D0   0x1C40             ADDS     R0,R0,#+1
   \   000000D2   0x.... 0x....      LDR.W    R1,??DataTable16
   \   000000D6   0x8008             STRH     R0,[R1, #+0]
    702          	if (cntPos>=256) cntPos=0;
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable16
   \   000000DC   0x8800             LDRH     R0,[R0, #+0]
   \   000000DE   0x28FF             CMP      R0,#+255
   \   000000E0   0xDD03             BLE.N    ??SPI5_IRQHandler_0
   \   000000E2   0x2000             MOVS     R0,#+0
   \   000000E4   0x.... 0x....      LDR.W    R1,??DataTable16
   \   000000E8   0x8008             STRH     R0,[R1, #+0]
    703            }
    704              
    705            }
    706            
    707          }
   \                     ??SPI5_IRQHandler_0: (+1)
   \   000000EA   0xBD10             POP      {R4,PC}          ;; return
    708          
    709          /* SPI5 init function */
    710          
    711          

   \                                 In section .text, align 2, keep-with-next
    712          void SPI6_IRQHandler(void)
    713          {
   \                     SPI6_IRQHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    714            /* SPI in mode Receiver ----------------------------------------------------*/
    715            if(
    716          //     (__HAL_SPI_GET_FLAG(&hspi6, SPI_FLAG_OVR) == RESET)&&
    717               (__HAL_SPI_GET_FLAG(&hspi6, SPI_FLAG_TXE) != RESET)&&
    718               (__HAL_SPI_GET_IT_SOURCE(&hspi6, SPI_IT_TXE) != RESET))
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x6880             LDR      R0,[R0, #+8]
   \   0000000A   0x0780             LSLS     R0,R0,#+30
   \   0000000C   0xD567             BPL.N    ??SPI6_IRQHandler_0
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x6840             LDR      R0,[R0, #+4]
   \   00000016   0x0600             LSLS     R0,R0,#+24
   \   00000018   0xD561             BPL.N    ??SPI6_IRQHandler_0
    719            {
    720          
    721          
    722               uint16_t test;
    723               test =  SPI_I2S_ReceiveData(SPI6);
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable13_10  ;; 0x40015400
   \   0000001E   0x.... 0x....      BL       SPI_I2S_ReceiveData
   \   00000022   0x0004             MOVS     R4,R0
    724               SPI6->DR = 3333;
   \   00000024   0xF640 0x5005      MOVW     R0,#+3333
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable13_11  ;; 0x4001540c
   \   0000002C   0x6008             STR      R0,[R1, #+0]
    725          
    726              pDataMic7[idxMic7++] =	HTONS(test);
   \   0000002E   0x0020             MOVS     R0,R4
   \   00000030   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000032   0x0221             LSLS     R1,R4,#+8
   \   00000034   0xEA51 0x2010      ORRS     R0,R1,R0, LSR #+8
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable13_12
   \   0000003C   0x.... 0x....      LDR.W    R2,??DataTable13_13
   \   00000040   0x8812             LDRH     R2,[R2, #+0]
   \   00000042   0xF821 0x0012      STRH     R0,[R1, R2, LSL #+1]
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable13_13
   \   0000004A   0x8800             LDRH     R0,[R0, #+0]
   \   0000004C   0x1C40             ADDS     R0,R0,#+1
   \   0000004E   0x.... 0x....      LDR.W    R1,??DataTable13_13
   \   00000052   0x8008             STRH     R0,[R1, #+0]
    727          
    728              //volume = 64;
    729          
    730              if (idxMic7>=64)
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable13_13
   \   00000058   0x8800             LDRH     R0,[R0, #+0]
   \   0000005A   0x2840             CMP      R0,#+64
   \   0000005C   0xDB3F             BLT.N    ??SPI6_IRQHandler_0
    731              {
    732                if (buffer_switch != 1)
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable12_7
   \   00000062   0x7800             LDRB     R0,[R0, #+0]
   \   00000064   0x2801             CMP      R0,#+1
   \   00000066   0xD013             BEQ.N    ??SPI6_IRQHandler_1
    733                {
    734                        PDM_Filter_64_LSB((uint8_t *)pDataMic7,(uint16_t *)(bufPCMSens7 + cntPos7*16), volume ,
                               ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
    735                                                          (PDMFilter_InitStruct *)&Filter[1]);
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable13_6
   \   0000006C   0x7802             LDRB     R2,[R0, #+0]
   \   0000006E   0x.... 0x....      LDR.W    R3,??DataTable13_14
   \   00000072   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000074   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable13_15
   \   0000007A   0x6800             LDR      R0,[R0, #+0]
   \   0000007C   0x.... 0x....      LDR.W    R1,??DataTable17
   \   00000080   0x8809             LDRH     R1,[R1, #+0]
   \   00000082   0xEB10 0x1141      ADDS     R1,R0,R1, LSL #+5
   \   00000086   0x.... 0x....      LDR.W    R0,??DataTable13_12
   \   0000008A   0x.... 0x....      BL       PDM_Filter_64_LSB
   \   0000008E   0xE012             B.N      ??SPI6_IRQHandler_2
    736                }
    737                else
    738                {
    739                        PDM_Filter_64_LSB((uint8_t *)pDataMic7,(uint16_t *)(bufPCMSens7 + cntPos7*16), volume , 
                               ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
    740                                                          (PDMFilter_InitStruct *)&Filter[1]);   
   \                     ??SPI6_IRQHandler_1: (+1)
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable13_6
   \   00000094   0x7802             LDRB     R2,[R0, #+0]
   \   00000096   0x.... 0x....      LDR.W    R3,??DataTable13_14
   \   0000009A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000009C   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable13_15
   \   000000A2   0x6800             LDR      R0,[R0, #+0]
   \   000000A4   0x.... 0x....      LDR.W    R1,??DataTable17
   \   000000A8   0x8809             LDRH     R1,[R1, #+0]
   \   000000AA   0xEB10 0x1141      ADDS     R1,R0,R1, LSL #+5
   \   000000AE   0x.... 0x....      LDR.W    R0,??DataTable13_12
   \   000000B2   0x.... 0x....      BL       PDM_Filter_64_LSB
    741                }
    742                idxMic7=0;
   \                     ??SPI6_IRQHandler_2: (+1)
   \   000000B6   0x2000             MOVS     R0,#+0
   \   000000B8   0x.... 0x....      LDR.W    R1,??DataTable13_13
   \   000000BC   0x8008             STRH     R0,[R1, #+0]
    743                cntPos7++;
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable17
   \   000000C2   0x8800             LDRH     R0,[R0, #+0]
   \   000000C4   0x1C40             ADDS     R0,R0,#+1
   \   000000C6   0x.... 0x....      LDR.W    R1,??DataTable17
   \   000000CA   0x8008             STRH     R0,[R1, #+0]
    744                if (cntPos7>=256) cntPos7=0;
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable17
   \   000000D0   0x8800             LDRH     R0,[R0, #+0]
   \   000000D2   0x28FF             CMP      R0,#+255
   \   000000D4   0xDD03             BLE.N    ??SPI6_IRQHandler_0
   \   000000D6   0x2000             MOVS     R0,#+0
   \   000000D8   0x.... 0x....      LDR.W    R1,??DataTable17
   \   000000DC   0x8008             STRH     R0,[R1, #+0]
    745              }
    746              
    747            }
    748          }
   \                     ??SPI6_IRQHandler_0: (+1)
   \   000000DE   0xBD10             POP      {R4,PC}          ;; return
    749          
    750          
    751          

   \                                 In section .text, align 2, keep-with-next
    752          void MIC1TO6_Init(void)
    753          {
   \                     MIC1TO6_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    754            while(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==GPIO_PIN_SET);
   \                     ??MIC1TO6_Init_0: (+1)
   \   00000002   0x2110             MOVS     R1,#+16
   \   00000004   0x....             LDR.N    R0,??DataTable9_2  ;; 0x40020000
   \   00000006   0x.... 0x....      BL       HAL_GPIO_ReadPin
   \   0000000A   0x2801             CMP      R0,#+1
   \   0000000C   0xD0F9             BEQ.N    ??MIC1TO6_Init_0
    755            while(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==GPIO_PIN_RESET);
   \                     ??MIC1TO6_Init_1: (+1)
   \   0000000E   0x2110             MOVS     R1,#+16
   \   00000010   0x....             LDR.N    R0,??DataTable9_2  ;; 0x40020000
   \   00000012   0x.... 0x....      BL       HAL_GPIO_ReadPin
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD0F9             BEQ.N    ??MIC1TO6_Init_1
    756            I2S1_Init(); /* I2S1   --> SDO12 */
   \   0000001A   0x.... 0x....      BL       I2S1_Init
    757            while(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==GPIO_PIN_SET);
   \                     ??MIC1TO6_Init_2: (+1)
   \   0000001E   0x2110             MOVS     R1,#+16
   \   00000020   0x....             LDR.N    R0,??DataTable9_2  ;; 0x40020000
   \   00000022   0x.... 0x....      BL       HAL_GPIO_ReadPin
   \   00000026   0x2801             CMP      R0,#+1
   \   00000028   0xD0F9             BEQ.N    ??MIC1TO6_Init_2
    758            while(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==GPIO_PIN_RESET);
   \                     ??MIC1TO6_Init_3: (+1)
   \   0000002A   0x2110             MOVS     R1,#+16
   \   0000002C   0x....             LDR.N    R0,??DataTable9_2  ;; 0x40020000
   \   0000002E   0x.... 0x....      BL       HAL_GPIO_ReadPin
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xD0F9             BEQ.N    ??MIC1TO6_Init_3
    759            I2S2_Init(); /* I2S2   --> SDO34 */
   \   00000036   0x.... 0x....      BL       I2S2_Init
    760            while(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==GPIO_PIN_SET);
   \                     ??MIC1TO6_Init_4: (+1)
   \   0000003A   0x2110             MOVS     R1,#+16
   \   0000003C   0x....             LDR.N    R0,??DataTable9_2  ;; 0x40020000
   \   0000003E   0x.... 0x....      BL       HAL_GPIO_ReadPin
   \   00000042   0x2801             CMP      R0,#+1
   \   00000044   0xD0F9             BEQ.N    ??MIC1TO6_Init_4
    761            while(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==GPIO_PIN_RESET);
   \                     ??MIC1TO6_Init_5: (+1)
   \   00000046   0x2110             MOVS     R1,#+16
   \   00000048   0x....             LDR.N    R0,??DataTable9_2  ;; 0x40020000
   \   0000004A   0x.... 0x....      BL       HAL_GPIO_ReadPin
   \   0000004E   0x2800             CMP      R0,#+0
   \   00000050   0xD0F9             BEQ.N    ??MIC1TO6_Init_5
    762            SPI4_Init(); /* SPI4   --> SDO56 */
   \   00000052   0x.... 0x....      BL       SPI4_Init
    763          
    764            SPI5_Init();
   \   00000056   0x.... 0x....      BL       SPI5_Init
    765            SPI6_Init();
   \   0000005A   0x.... 0x....      BL       SPI6_Init
    766          
    767            HAL_SPI_Receive_DMA(&hspi5,( uint8_t *)TestSDO7,4*AUDIO_OUT_BUFFER_SIZE);
   \   0000005E   0xF44F 0x5280      MOV      R2,#+4096
   \   00000062   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   00000066   0x.... 0x....      LDR.W    R0,??DataTable13_1
   \   0000006A   0x.... 0x....      BL       HAL_SPI_Receive_DMA
    768            HAL_SPI_Receive_DMA(&hspi6,( uint8_t *)TestSDO8,4*AUDIO_OUT_BUFFER_SIZE);
   \   0000006E   0xF44F 0x5280      MOV      R2,#+4096
   \   00000072   0x.... 0x....      LDR.W    R1,??DataTable16_2
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   0000007A   0x.... 0x....      BL       HAL_SPI_Receive_DMA
    769          
    770            swtSDO7 = 0;
   \   0000007E   0x2000             MOVS     R0,#+0
   \   00000080   0x.... 0x....      LDR.W    R1,??DataTable16_3
   \   00000084   0x7008             STRB     R0,[R1, #+0]
    771            swtSDO8 = 0;
   \   00000086   0x2000             MOVS     R0,#+0
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   0000008C   0x7008             STRB     R0,[R1, #+0]
    772          }
   \   0000008E   0xBD01             POP      {R0,PC}          ;; return
    773          
    774          
    775          
    776          /* I2S1 init function */
    777          /* Read data of MIC12 */

   \                                 In section .text, align 2, keep-with-next
    778          static void I2S1_Init(void)
    779          {
   \                     I2S1_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    780          #if 1
    781            hi2s1.Instance = SPI1;
   \   00000002   0x....             LDR.N    R0,??DataTable10_1  ;; 0x40013000
   \   00000004   0x....             LDR.N    R1,??DataTable10_2
   \   00000006   0x6008             STR      R0,[R1, #+0]
    782            hi2s1.Init.Mode = I2S_MODE_SLAVE_RX;
   \   00000008   0xF44F 0x7080      MOV      R0,#+256
   \   0000000C   0x....             LDR.N    R1,??DataTable10_2
   \   0000000E   0x6048             STR      R0,[R1, #+4]
    783            hi2s1.Init.Standard = I2S_STANDARD_MSB;
   \   00000010   0x2010             MOVS     R0,#+16
   \   00000012   0x....             LDR.N    R1,??DataTable10_2
   \   00000014   0x6088             STR      R0,[R1, #+8]
    784            hi2s1.Init.DataFormat = I2S_DATAFORMAT_16B;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x....             LDR.N    R1,??DataTable10_2
   \   0000001A   0x60C8             STR      R0,[R1, #+12]
    785            hi2s1.Init.MCLKOutput = I2S_MCLKOUTPUT_DISABLE;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x....             LDR.N    R1,??DataTable10_2
   \   00000020   0x6108             STR      R0,[R1, #+16]
    786            hi2s1.Init.AudioFreq = I2S_AUDIOFREQ_16K;
   \   00000022   0xF44F 0x507A      MOV      R0,#+16000
   \   00000026   0x....             LDR.N    R1,??DataTable10_2
   \   00000028   0x6148             STR      R0,[R1, #+20]
    787            hi2s1.Init.CPOL = I2S_CPOL_LOW;
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x....             LDR.N    R1,??DataTable10_2
   \   0000002E   0x6188             STR      R0,[R1, #+24]
    788            hi2s1.Init.ClockSource = I2S_CLOCK_EXTERNAL;
   \   00000030   0x2001             MOVS     R0,#+1
   \   00000032   0x....             LDR.N    R1,??DataTable10_2
   \   00000034   0x61C8             STR      R0,[R1, #+28]
    789            HAL_I2S_Init(&hi2s1);
   \   00000036   0x....             LDR.N    R0,??DataTable10_2
   \   00000038   0x.... 0x....      BL       HAL_I2S_Init
    790          
    791               /* Enable TXE and ERR interrupt */
    792           __HAL_I2S_ENABLE_IT(&hi2s1, (I2S_IT_RXNE));
   \   0000003C   0x....             LDR.N    R0,??DataTable10_2
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0x6840             LDR      R0,[R0, #+4]
   \   00000042   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00000046   0x....             LDR.N    R1,??DataTable10_2
   \   00000048   0x6809             LDR      R1,[R1, #+0]
   \   0000004A   0x6048             STR      R0,[R1, #+4]
    793           
    794           __HAL_I2S_ENABLE(&hi2s1);
   \   0000004C   0x....             LDR.N    R0,??DataTable10_2
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0x69C0             LDR      R0,[R0, #+28]
   \   00000052   0xF450 0x6080      ORRS     R0,R0,#0x400
   \   00000056   0x....             LDR.N    R1,??DataTable10_2
   \   00000058   0x6809             LDR      R1,[R1, #+0]
   \   0000005A   0x61C8             STR      R0,[R1, #+28]
    795          #else
    796          	hspi1.Instance = SPI1;
    797          	hspi1.Init.Mode = SPI_MODE_SLAVE;
    798          	hspi1.Init.Direction = SPI_DIRECTION_2LINES;//SPI_DIRECTION_2LINES_RXONLY
    799          	hspi1.Init.DataSize = SPI_DATASIZE_16BIT;
    800          	hspi1.Init.CLKPolarity = SPI_POLARITY_HIGH;
    801          	hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
    802          	hspi1.Init.NSS = SPI_NSS_SOFT;//SPI_NSS_HARD_INPUT
    803          	hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
    804          	hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
    805          	hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLED;
    806          	hspi1.Init.CRCPolynomial = 7;
    807          	hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
    808          	hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
    809          	//hspi4.RxISR = SPI5_CallBack;
    810          	HAL_SPI_Init(&hspi1);
    811          
    812          	  //HAL_GPIO_WritePin(GPIOF,GPIO_PIN_6,GPIO_PIN_SET);
    813            /* Enable TXE, RXNE and ERR interrupt */
    814           __HAL_SPI_ENABLE_IT(&hspi1, (SPI_IT_RXNE| SPI_IT_ERR));
    815          
    816           __HAL_SPI_ENABLE(&hspi1);
    817          
    818          #endif
    819          }
   \   0000005C   0xBD01             POP      {R0,PC}          ;; return
    820          
    821          /* I2S2 init function */
    822          /* Read data of MIC34 */
    823          

   \                                 In section .text, align 2, keep-with-next
    824          static void I2S2_Init(void)
    825          {
   \                     I2S2_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    826          
    827          #if 1
    828           //HAL_I2S_DeInit(&hi2s2);
    829           hi2s2.Instance = SPI2;
   \   00000002   0x....             LDR.N    R0,??DataTable12_12  ;; 0x40003800
   \   00000004   0x....             LDR.N    R1,??DataTable12_11
   \   00000006   0x6008             STR      R0,[R1, #+0]
    830           hi2s2.Init.Mode = I2S_MODE_SLAVE_RX;//I2S_MODE_MASTER_RX
   \   00000008   0xF44F 0x7080      MOV      R0,#+256
   \   0000000C   0x....             LDR.N    R1,??DataTable12_11
   \   0000000E   0x6048             STR      R0,[R1, #+4]
    831           hi2s2.Init.Standard = I2S_STANDARD_LSB;//I2S_STANDARD_LSB
   \   00000010   0x2020             MOVS     R0,#+32
   \   00000012   0x....             LDR.N    R1,??DataTable12_11
   \   00000014   0x6088             STR      R0,[R1, #+8]
    832           hi2s2.Init.DataFormat = I2S_DATAFORMAT_16B;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x....             LDR.N    R1,??DataTable12_11
   \   0000001A   0x60C8             STR      R0,[R1, #+12]
    833           hi2s2.Init.MCLKOutput = I2S_MCLKOUTPUT_DISABLE;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x....             LDR.N    R1,??DataTable12_11
   \   00000020   0x6108             STR      R0,[R1, #+16]
    834           hi2s2.Init.AudioFreq = I2S_AUDIOFREQ_16K;
   \   00000022   0xF44F 0x507A      MOV      R0,#+16000
   \   00000026   0x....             LDR.N    R1,??DataTable12_11
   \   00000028   0x6148             STR      R0,[R1, #+20]
    835           hi2s2.Init.CPOL = I2S_CPOL_LOW;
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x....             LDR.N    R1,??DataTable12_11
   \   0000002E   0x6188             STR      R0,[R1, #+24]
    836           hi2s2.Init.ClockSource = I2S_CLOCK_EXTERNAL;
   \   00000030   0x2001             MOVS     R0,#+1
   \   00000032   0x....             LDR.N    R1,??DataTable12_11
   \   00000034   0x61C8             STR      R0,[R1, #+28]
    837          
    838           HAL_I2S_Init(&hi2s2);
   \   00000036   0x....             LDR.N    R0,??DataTable12_11
   \   00000038   0x.... 0x....      BL       HAL_I2S_Init
    839            /* Enable TXE and ERR interrupt */
    840          __HAL_I2S_ENABLE_IT(&hi2s2, (I2S_IT_RXNE));
   \   0000003C   0x....             LDR.N    R0,??DataTable12_11
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0x6840             LDR      R0,[R0, #+4]
   \   00000042   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00000046   0x....             LDR.N    R1,??DataTable12_11
   \   00000048   0x6809             LDR      R1,[R1, #+0]
   \   0000004A   0x6048             STR      R0,[R1, #+4]
    841          __HAL_I2S_ENABLE(&hi2s2);
   \   0000004C   0x....             LDR.N    R0,??DataTable12_11
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0x69C0             LDR      R0,[R0, #+28]
   \   00000052   0xF450 0x6080      ORRS     R0,R0,#0x400
   \   00000056   0x....             LDR.N    R1,??DataTable12_11
   \   00000058   0x6809             LDR      R1,[R1, #+0]
   \   0000005A   0x61C8             STR      R0,[R1, #+28]
    842          
    843          #else
    844             hspi2.Instance = SPI2;
    845             hspi2.Init.Mode = SPI_MODE_SLAVE;
    846             hspi2.Init.Direction = SPI_DIRECTION_2LINES;//SPI_DIRECTION_2LINES_RXONLY
    847             hspi2.Init.DataSize = SPI_DATASIZE_16BIT;
    848             hspi2.Init.CLKPolarity = SPI_POLARITY_HIGH;
    849             hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
    850             hspi2.Init.NSS = SPI_NSS_SOFT;//SPI_NSS_HARD_INPUT
    851             hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
    852             hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
    853             hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLED;
    854             hspi2.Init.CRCPolynomial = 7;
    855             hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
    856             hspi2.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
    857             HAL_SPI_Init(&hspi2);
    858          
    859          	 //HAL_GPIO_WritePin(GPIOF,GPIO_PIN_6,GPIO_PIN_SET);
    860           /* Enable TXE, RXNE and ERR interrupt */
    861          __HAL_SPI_ENABLE_IT(&hspi2, (SPI_IT_RXNE| SPI_IT_ERR));
    862          
    863          __HAL_SPI_ENABLE(&hspi2);
    864          
    865          #endif
    866          
    867          
    868          }
   \   0000005C   0xBD01             POP      {R0,PC}          ;; return
    869          
    870          /* SPI5 init function */

   \                                 In section .text, align 2, keep-with-next
    871          void SPI4_Init(void)
    872          {
   \                     SPI4_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    873          
    874            hspi4.Instance = SPI4;
   \   00000002   0x....             LDR.N    R0,??DataTable12_24  ;; 0x40013400
   \   00000004   0x....             LDR.N    R1,??DataTable12_23
   \   00000006   0x6008             STR      R0,[R1, #+0]
    875            hspi4.Init.Mode = SPI_MODE_SLAVE;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x....             LDR.N    R1,??DataTable12_23
   \   0000000C   0x6048             STR      R0,[R1, #+4]
    876            hspi4.Init.Direction = SPI_DIRECTION_2LINES;//SPI_DIRECTION_2LINES_RXONLY
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x....             LDR.N    R1,??DataTable12_23
   \   00000012   0x6088             STR      R0,[R1, #+8]
    877            hspi4.Init.DataSize = SPI_DATASIZE_16BIT;
   \   00000014   0xF44F 0x6070      MOV      R0,#+3840
   \   00000018   0x....             LDR.N    R1,??DataTable12_23
   \   0000001A   0x60C8             STR      R0,[R1, #+12]
    878            hspi4.Init.CLKPolarity = SPI_POLARITY_HIGH;
   \   0000001C   0x2002             MOVS     R0,#+2
   \   0000001E   0x....             LDR.N    R1,??DataTable12_23
   \   00000020   0x6108             STR      R0,[R1, #+16]
    879            hspi4.Init.CLKPhase = SPI_PHASE_1EDGE;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x....             LDR.N    R1,??DataTable12_23
   \   00000026   0x6148             STR      R0,[R1, #+20]
    880            hspi4.Init.NSS = SPI_NSS_SOFT;//SPI_NSS_HARD_INPUT
   \   00000028   0xF44F 0x7000      MOV      R0,#+512
   \   0000002C   0x....             LDR.N    R1,??DataTable12_23
   \   0000002E   0x6188             STR      R0,[R1, #+24]
    881            hspi4.Init.FirstBit = SPI_FIRSTBIT_MSB;
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x....             LDR.N    R1,??DataTable12_23
   \   00000034   0x6208             STR      R0,[R1, #+32]
    882            hspi4.Init.TIMode = SPI_TIMODE_DISABLE;
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x....             LDR.N    R1,??DataTable12_23
   \   0000003A   0x6248             STR      R0,[R1, #+36]
    883            hspi4.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLED;
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0x....             LDR.N    R1,??DataTable12_23
   \   00000040   0x6288             STR      R0,[R1, #+40]
    884            hspi4.Init.CRCPolynomial = 7;
   \   00000042   0x2007             MOVS     R0,#+7
   \   00000044   0x....             LDR.N    R1,??DataTable12_23
   \   00000046   0x62C8             STR      R0,[R1, #+44]
    885            hspi4.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x....             LDR.N    R1,??DataTable12_23
   \   0000004C   0x6308             STR      R0,[R1, #+48]
    886            hspi4.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x....             LDR.N    R1,??DataTable12_23
   \   00000052   0x6348             STR      R0,[R1, #+52]
    887            HAL_SPI_Init(&hspi4);
   \   00000054   0x....             LDR.N    R0,??DataTable12_23
   \   00000056   0x.... 0x....      BL       HAL_SPI_Init
    888          
    889            /* Enable TXE, RXNE and ERR interrupt */
    890           __HAL_SPI_ENABLE_IT(&hspi4, (SPI_IT_RXNE| SPI_IT_ERR));
   \   0000005A   0x....             LDR.N    R0,??DataTable12_23
   \   0000005C   0x6800             LDR      R0,[R0, #+0]
   \   0000005E   0x6840             LDR      R0,[R0, #+4]
   \   00000060   0xF050 0x0060      ORRS     R0,R0,#0x60
   \   00000064   0x....             LDR.N    R1,??DataTable12_23
   \   00000066   0x6809             LDR      R1,[R1, #+0]
   \   00000068   0x6048             STR      R0,[R1, #+4]
    891          
    892           __HAL_SPI_ENABLE(&hspi4);
   \   0000006A   0x....             LDR.N    R0,??DataTable12_23
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00000074   0x....             LDR.N    R1,??DataTable12_23
   \   00000076   0x6809             LDR      R1,[R1, #+0]
   \   00000078   0x6008             STR      R0,[R1, #+0]
    893          }
   \   0000007A   0xBD01             POP      {R0,PC}          ;; return
    894          
    895          

   \                                 In section .text, align 2, keep-with-next
    896          void Mic7Rec(void)
    897          {
   \                     Mic7Rec: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    898              SPI5_Init();
   \   00000002   0x.... 0x....      BL       SPI5_Init
    899          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
    900          

   \                                 In section .text, align 2, keep-with-next
    901          void Mic8Rec(void)
    902          {
   \                     Mic8Rec: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    903              SPI6_Init();
   \   00000002   0x.... 0x....      BL       SPI6_Init
    904          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
    905          
    906          
    907          /* SPI5 init function */

   \                                 In section .text, align 2, keep-with-next
    908          void SPI5_Init(void)
    909          {
   \                     SPI5_Init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    910          	
    911              /* Enable CRC module */
    912              RCC->AHB1ENR |= RCC_AHB1ENR_CRCEN;
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF450 0x5080      ORRS     R0,R0,#0x1000
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable17_2  ;; 0x40023830
   \   00000010   0x6008             STR      R0,[R1, #+0]
    913          	for (char i=0; i< 2; i++)
   \   00000012   0x2400             MOVS     R4,#+0
   \                     ??SPI5_Init_0: (+1)
   \   00000014   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000016   0x2C02             CMP      R4,#+2
   \   00000018   0xDA34             BGE.N    ??SPI5_Init_1
    914          	{
    915          		/* Filter LP & HP Init */
    916          		Filter[i].LP_HZ = 8000;   //sop1hc 8000
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   0000001E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000020   0x2134             MOVS     R1,#+52
   \   00000022   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000026   0x.... 0x....      LDR.W    R1,??DataTable17_3  ;; 0x45fa0000
   \   0000002A   0x6041             STR      R1,[R0, #+4]
    917          		Filter[i].HP_HZ = 10;
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   00000030   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000032   0x2134             MOVS     R1,#+52
   \   00000034   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable17_4  ;; 0x41200000
   \   0000003C   0x6081             STR      R1,[R0, #+8]
    918          		Filter[i].Fs = 16000;    //sop1hc: 16000
   \   0000003E   0xF44F 0x507A      MOV      R0,#+16000
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   00000046   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000048   0x2234             MOVS     R2,#+52
   \   0000004A   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   0000004E   0x8008             STRH     R0,[R1, #+0]
    919          		Filter[i].Out_MicChannels = 1;
   \   00000050   0x2001             MOVS     R0,#+1
   \   00000052   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   00000056   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000058   0x2234             MOVS     R2,#+52
   \   0000005A   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   0000005E   0x81C8             STRH     R0,[R1, #+14]
    920          		Filter[i].In_MicChannels = 1;
   \   00000060   0x2001             MOVS     R0,#+1
   \   00000062   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   00000066   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000068   0x2234             MOVS     R2,#+52
   \   0000006A   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   0000006E   0x8188             STRH     R0,[R1, #+12]
    921          		PDM_Filter_Init((PDMFilter_InitStruct *)&Filter[i]);
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   00000074   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000076   0x2134             MOVS     R1,#+52
   \   00000078   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   0000007C   0x.... 0x....      BL       PDM_Filter_Init
    922          	}
   \   00000080   0x1C64             ADDS     R4,R4,#+1
   \   00000082   0xE7C7             B.N      ??SPI5_Init_0
    923          
    924          
    925            hspi5.Instance = SPI5;
   \                     ??SPI5_Init_1: (+1)
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable13_2  ;; 0x40015000
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   0000008C   0x6008             STR      R0,[R1, #+0]
    926            hspi5.Init.Mode = SPI_MODE_SLAVE;
   \   0000008E   0x2000             MOVS     R0,#+0
   \   00000090   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000094   0x6048             STR      R0,[R1, #+4]
    927            hspi5.Init.Direction = SPI_DIRECTION_2LINES_RXONLY;//SPI_DIRECTION_2LINES_RXONLY
   \   00000096   0xF44F 0x6080      MOV      R0,#+1024
   \   0000009A   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   0000009E   0x6088             STR      R0,[R1, #+8]
    928            hspi5.Init.DataSize = SPI_DATASIZE_16BIT;
   \   000000A0   0xF44F 0x6070      MOV      R0,#+3840
   \   000000A4   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000000A8   0x60C8             STR      R0,[R1, #+12]
    929            hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
   \   000000AA   0x2000             MOVS     R0,#+0
   \   000000AC   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000000B0   0x6108             STR      R0,[R1, #+16]
    930            hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
   \   000000B2   0x2000             MOVS     R0,#+0
   \   000000B4   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000000B8   0x6148             STR      R0,[R1, #+20]
    931            hspi5.Init.NSS = SPI_NSS_SOFT;//SPI_NSS_HARD_INPUT
   \   000000BA   0xF44F 0x7000      MOV      R0,#+512
   \   000000BE   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000000C2   0x6188             STR      R0,[R1, #+24]
    932            hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
   \   000000C4   0x2000             MOVS     R0,#+0
   \   000000C6   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000000CA   0x6208             STR      R0,[R1, #+32]
    933            hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
   \   000000CC   0x2000             MOVS     R0,#+0
   \   000000CE   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000000D2   0x6248             STR      R0,[R1, #+36]
    934            hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLED;
   \   000000D4   0x2000             MOVS     R0,#+0
   \   000000D6   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000000DA   0x6288             STR      R0,[R1, #+40]
    935            hspi5.Init.CRCPolynomial = 7;
   \   000000DC   0x2007             MOVS     R0,#+7
   \   000000DE   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000000E2   0x62C8             STR      R0,[R1, #+44]
    936            hspi5.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
   \   000000E4   0x2000             MOVS     R0,#+0
   \   000000E6   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000000EA   0x6308             STR      R0,[R1, #+48]
    937            hspi5.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
   \   000000EC   0x2000             MOVS     R0,#+0
   \   000000EE   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000000F2   0x6348             STR      R0,[R1, #+52]
    938            //hspi5.RxISR = SPI5_CallBack;
    939            HAL_SPI_Init(&hspi5);
   \   000000F4   0x.... 0x....      LDR.W    R0,??DataTable13_1
   \   000000F8   0x.... 0x....      BL       HAL_SPI_Init
    940          
    941          
    942            //HAL_GPIO_WritePin(GPIOF,GPIO_PIN_6,GPIO_PIN_SET);
    943            /* Enable TXE, RXNE and ERR interrupt */
    944           //__HAL_SPI_ENABLE_IT(&hspi5, (SPI_IT_RXNE| SPI_IT_ERR));
    945          
    946           //__HAL_SPI_ENABLE(&hspi5);
    947          
    948          }
   \   000000FC   0xBD10             POP      {R4,PC}          ;; return
    949          

   \                                 In section .text, align 2, keep-with-next
    950          void SPI6_Init(void)
    951          {
   \                     SPI6_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    952          	
    953            hspi6.Instance = SPI6;
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable13_10  ;; 0x40015400
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    954            hspi6.Init.Mode = SPI_MODE_SLAVE;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   00000012   0x6048             STR      R0,[R1, #+4]
    955            hspi6.Init.Direction = SPI_DIRECTION_2LINES_RXONLY;//SPI_DIRECTION_2LINES_RXONLY
   \   00000014   0xF44F 0x6080      MOV      R0,#+1024
   \   00000018   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   0000001C   0x6088             STR      R0,[R1, #+8]
    956            hspi6.Init.DataSize = SPI_DATASIZE_16BIT;
   \   0000001E   0xF44F 0x6070      MOV      R0,#+3840
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   00000026   0x60C8             STR      R0,[R1, #+12]
    957            hspi6.Init.CLKPolarity = SPI_POLARITY_LOW;
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   0000002E   0x6108             STR      R0,[R1, #+16]
    958            hspi6.Init.CLKPhase = SPI_PHASE_1EDGE;
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   00000036   0x6148             STR      R0,[R1, #+20]
    959            hspi6.Init.NSS = SPI_NSS_SOFT;//SPI_NSS_HARD_INPUT
   \   00000038   0xF44F 0x7000      MOV      R0,#+512
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   00000040   0x6188             STR      R0,[R1, #+24]
    960            hspi6.Init.FirstBit = SPI_FIRSTBIT_MSB;
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   00000048   0x6208             STR      R0,[R1, #+32]
    961            hspi6.Init.TIMode = SPI_TIMODE_DISABLE;
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   00000050   0x6248             STR      R0,[R1, #+36]
    962            hspi6.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLED;
   \   00000052   0x2000             MOVS     R0,#+0
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   00000058   0x6288             STR      R0,[R1, #+40]
    963            hspi6.Init.CRCPolynomial = 7;
   \   0000005A   0x2007             MOVS     R0,#+7
   \   0000005C   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   00000060   0x62C8             STR      R0,[R1, #+44]
    964            hspi6.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
   \   00000062   0x2000             MOVS     R0,#+0
   \   00000064   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   00000068   0x6308             STR      R0,[R1, #+48]
    965            hspi6.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
   \   0000006A   0x2000             MOVS     R0,#+0
   \   0000006C   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   00000070   0x6348             STR      R0,[R1, #+52]
    966            //hspi6.RxISR = SPI6_CallBack;
    967            HAL_SPI_Init(&hspi6);
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   00000076   0x.... 0x....      BL       HAL_SPI_Init
    968          
    969          
    970            //HAL_GPIO_WritePin(GPIOF,GPIO_PIN_6,GPIO_PIN_SET);
    971            /* Enable TXE, RXNE and ERR interrupt */
    972           //__HAL_SPI_ENABLE_IT(&hspi6, (SPI_IT_RXNE| SPI_IT_ERR));
    973          
    974           //__HAL_SPI_ENABLE(&hspi6);
    975          
    976          }
   \   0000007A   0xBD01             POP      {R0,PC}          ;; return
    977          
    978          
    979          
    980          

   \                                 In section .text, align 2, keep-with-next
    981          void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
    982          {
   \                     HAL_SPI_MspInit: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
   \   00000004   0x0004             MOVS     R4,R0
    983          
    984            GPIO_InitTypeDef GPIO_InitStruct;
    985            if (hspi->Instance==SPI1)
   \   00000006   0x6820             LDR      R0,[R4, #+0]
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable17_5  ;; 0x40013000
   \   0000000C   0x4288             CMP      R0,R1
   \   0000000E   0xD144             BNE.N    ??HAL_SPI_MspInit_0
    986            {
    987          	  /* USER CODE BEGIN SPI1_MspInit 0 */
    988          	  
    989          	  /* USER CODE END SPI1_MspInit 0 */
    990          	  /* Peripheral clock enable */
    991          	  __SPI1_CLK_ENABLE();
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable17_6  ;; 0x40023844
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0xF450 0x5080      ORRS     R0,R0,#0x1000
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable17_6  ;; 0x40023844
   \   0000001E   0x6008             STR      R0,[R1, #+0]
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable17_6  ;; 0x40023844
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0xF410 0x5080      ANDS     R0,R0,#0x1000
   \   0000002A   0x9000             STR      R0,[SP, #+0]
   \   0000002C   0x9800             LDR      R0,[SP, #+0]
    992          	  __GPIOA_CLK_ENABLE();
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable17_2  ;; 0x40023830
   \   0000003C   0x6008             STR      R0,[R1, #+0]
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   00000042   0x6800             LDR      R0,[R0, #+0]
   \   00000044   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000048   0x9000             STR      R0,[SP, #+0]
   \   0000004A   0x9800             LDR      R0,[SP, #+0]
    993          	  __GPIOC_CLK_ENABLE();
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   00000050   0x6800             LDR      R0,[R0, #+0]
   \   00000052   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000056   0x.... 0x....      LDR.W    R1,??DataTable17_2  ;; 0x40023830
   \   0000005A   0x6008             STR      R0,[R1, #+0]
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   00000060   0x6800             LDR      R0,[R0, #+0]
   \   00000062   0xF010 0x0004      ANDS     R0,R0,#0x4
   \   00000066   0x9000             STR      R0,[SP, #+0]
   \   00000068   0x9800             LDR      R0,[SP, #+0]
    994          	  
    995          	  /**I2S1 GPIO Configuration	
    996          		PA4 	------> I2S1_WS --> LRCKO
    997          		PA5 	------> I2S1_CK --> BICKO
    998          		PA7 	------> I2S1_SD --> SDO12
    999          		PC4 	------> I2S1_MCK
   1000          		*/
   1001          		GPIO_InitStruct.Pin =  GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
   \   0000006A   0x20F0             MOVS     R0,#+240
   \   0000006C   0x9001             STR      R0,[SP, #+4]
   1002          		GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   0000006E   0x2002             MOVS     R0,#+2
   \   00000070   0x9002             STR      R0,[SP, #+8]
   1003          		GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   00000072   0x2000             MOVS     R0,#+0
   \   00000074   0x9003             STR      R0,[SP, #+12]
   1004          		GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
   \   00000076   0x2003             MOVS     R0,#+3
   \   00000078   0x9004             STR      R0,[SP, #+16]
   1005          		GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
   \   0000007A   0x2005             MOVS     R0,#+5
   \   0000007C   0x9005             STR      R0,[SP, #+20]
   1006          		HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
   \   0000007E   0xA901             ADD      R1,SP,#+4
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable17_7  ;; 0x40020000
   \   00000084   0x.... 0x....      BL       HAL_GPIO_Init
   1007          	  
   1008          		//GPIO_InitStruct.Pin = GPIO_PIN_4;
   1009          		//GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   1010          		//GPIO_InitStruct.Pull = GPIO_NOPULL;
   1011          		//GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
   1012          		//GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
   1013          		//HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
   1014          		
   1015          	  /* Peripheral interrupt init*/
   1016          		HAL_NVIC_SetPriority(SPI1_IRQn, INTERRUPT_PRI_SDO12, 0);
   \   00000088   0x2200             MOVS     R2,#+0
   \   0000008A   0x2100             MOVS     R1,#+0
   \   0000008C   0x2023             MOVS     R0,#+35
   \   0000008E   0x.... 0x....      BL       HAL_NVIC_SetPriority
   1017          		HAL_NVIC_EnableIRQ(SPI1_IRQn);
   \   00000092   0x2023             MOVS     R0,#+35
   \   00000094   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
   \   00000098   0xE295             B.N      ??HAL_SPI_MspInit_1
   1018          	  /* USER CODE BEGIN SPI1_MspInit 1 */
   1019          	  
   1020          	  /* USER CODE END SPI1_MspInit 1 */
   1021          
   1022            }
   1023            else if (hspi->Instance==SPI2)
   \                     ??HAL_SPI_MspInit_0: (+1)
   \   0000009A   0x6820             LDR      R0,[R4, #+0]
   \   0000009C   0x.... 0x....      LDR.W    R1,??DataTable17_8  ;; 0x40003800
   \   000000A0   0x4288             CMP      R0,R1
   \   000000A2   0xD163             BNE.N    ??HAL_SPI_MspInit_2
   1024            {
   1025          	  /* USER CODE BEGIN SPI2_MspInit 0 */
   1026          	  
   1027          	  /* USER CODE END SPI2_MspInit 0 */
   1028          		/* Peripheral clock enable */
   1029          		__SPI2_CLK_ENABLE();
   \   000000A4   0x.... 0x....      LDR.W    R0,??DataTable17_9  ;; 0x40023840
   \   000000A8   0x6800             LDR      R0,[R0, #+0]
   \   000000AA   0xF450 0x4080      ORRS     R0,R0,#0x4000
   \   000000AE   0x.... 0x....      LDR.W    R1,??DataTable17_9  ;; 0x40023840
   \   000000B2   0x6008             STR      R0,[R1, #+0]
   \   000000B4   0x.... 0x....      LDR.W    R0,??DataTable17_9  ;; 0x40023840
   \   000000B8   0x6800             LDR      R0,[R0, #+0]
   \   000000BA   0xF410 0x4080      ANDS     R0,R0,#0x4000
   \   000000BE   0x9000             STR      R0,[SP, #+0]
   \   000000C0   0x9800             LDR      R0,[SP, #+0]
   1030          		__GPIOI_CLK_ENABLE();
   \   000000C2   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   000000C6   0x6800             LDR      R0,[R0, #+0]
   \   000000C8   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   000000CC   0x.... 0x....      LDR.W    R1,??DataTable17_2  ;; 0x40023830
   \   000000D0   0x6008             STR      R0,[R1, #+0]
   \   000000D2   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   000000D6   0x6800             LDR      R0,[R0, #+0]
   \   000000D8   0xF410 0x7080      ANDS     R0,R0,#0x100
   \   000000DC   0x9000             STR      R0,[SP, #+0]
   \   000000DE   0x9800             LDR      R0,[SP, #+0]
   1031          		__GPIOB_CLK_ENABLE();
   \   000000E0   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   000000E4   0x6800             LDR      R0,[R0, #+0]
   \   000000E6   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   000000EA   0x.... 0x....      LDR.W    R1,??DataTable17_2  ;; 0x40023830
   \   000000EE   0x6008             STR      R0,[R1, #+0]
   \   000000F0   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   000000F4   0x6800             LDR      R0,[R0, #+0]
   \   000000F6   0xF010 0x0002      ANDS     R0,R0,#0x2
   \   000000FA   0x9000             STR      R0,[SP, #+0]
   \   000000FC   0x9800             LDR      R0,[SP, #+0]
   1032          		__GPIOC_CLK_ENABLE();
   \   000000FE   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   00000102   0x6800             LDR      R0,[R0, #+0]
   \   00000104   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000108   0x.... 0x....      LDR.W    R1,??DataTable17_2  ;; 0x40023830
   \   0000010C   0x6008             STR      R0,[R1, #+0]
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   00000112   0x6800             LDR      R0,[R0, #+0]
   \   00000114   0xF010 0x0004      ANDS     R0,R0,#0x4
   \   00000118   0x9000             STR      R0,[SP, #+0]
   \   0000011A   0x9800             LDR      R0,[SP, #+0]
   1033          	  
   1034          		/**I2S2 GPIO Configuration	   
   1035          		PC1 	------> I2S2_SD  : PI3 PC1 PC3 PB15 	
   1036          		PB13	 ------> I2S2_CK :PD3 PB10 PB13 PA9 PI1 
   1037          		PB12	 ------> I2S2_WS : PB12 PI0 PB4 PB9  
   1038          	  
   1039          	  
   1040          		*/
   1041          		GPIO_InitStruct.Pin = GPIO_PIN_1; //SD
   \   0000011C   0x2002             MOVS     R0,#+2
   \   0000011E   0x9001             STR      R0,[SP, #+4]
   1042          		GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   00000120   0x2002             MOVS     R0,#+2
   \   00000122   0x9002             STR      R0,[SP, #+8]
   1043          		GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   00000124   0x2000             MOVS     R0,#+0
   \   00000126   0x9003             STR      R0,[SP, #+12]
   1044          		GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
   \   00000128   0x2003             MOVS     R0,#+3
   \   0000012A   0x9004             STR      R0,[SP, #+16]
   1045          		GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
   \   0000012C   0x2005             MOVS     R0,#+5
   \   0000012E   0x9005             STR      R0,[SP, #+20]
   1046          		HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
   \   00000130   0xA901             ADD      R1,SP,#+4
   \   00000132   0x.... 0x....      LDR.W    R0,??DataTable17_10  ;; 0x40020800
   \   00000136   0x.... 0x....      BL       HAL_GPIO_Init
   1047          	  
   1048          		GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;//WS --> GPIO_PIN_12
   \   0000013A   0xF44F 0x5040      MOV      R0,#+12288
   \   0000013E   0x9001             STR      R0,[SP, #+4]
   1049          		GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   00000140   0x2002             MOVS     R0,#+2
   \   00000142   0x9002             STR      R0,[SP, #+8]
   1050          		GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   00000144   0x2000             MOVS     R0,#+0
   \   00000146   0x9003             STR      R0,[SP, #+12]
   1051          		GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
   \   00000148   0x2003             MOVS     R0,#+3
   \   0000014A   0x9004             STR      R0,[SP, #+16]
   1052          		GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
   \   0000014C   0x2005             MOVS     R0,#+5
   \   0000014E   0x9005             STR      R0,[SP, #+20]
   1053          		HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
   \   00000150   0xA901             ADD      R1,SP,#+4
   \   00000152   0x.... 0x....      LDR.W    R0,??DataTable17_11  ;; 0x40020400
   \   00000156   0x.... 0x....      BL       HAL_GPIO_Init
   1054          	  
   1055          	  
   1056          		/* Peripheral interrupt init*/
   1057          		HAL_NVIC_SetPriority(SPI2_IRQn, INTERRUPT_PRI_SDO34, 0);
   \   0000015A   0x2200             MOVS     R2,#+0
   \   0000015C   0x2101             MOVS     R1,#+1
   \   0000015E   0x2024             MOVS     R0,#+36
   \   00000160   0x.... 0x....      BL       HAL_NVIC_SetPriority
   1058          		HAL_NVIC_EnableIRQ(SPI2_IRQn);
   \   00000164   0x2024             MOVS     R0,#+36
   \   00000166   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
   \   0000016A   0xE22C             B.N      ??HAL_SPI_MspInit_1
   1059          		/* USER CODE BEGIN SPI2_MspInit 1 */
   1060          	  
   1061          	  /* USER CODE END SPI2_MspInit 1 */
   1062          
   1063          
   1064            }
   1065            else if (hspi->Instance==SPI3)
   \                     ??HAL_SPI_MspInit_2: (+1)
   \   0000016C   0x6820             LDR      R0,[R4, #+0]
   \   0000016E   0x.... 0x....      LDR.W    R1,??DataTable18  ;; 0x40003c00
   \   00000172   0x4288             CMP      R0,R1
   \   00000174   0xF040 0x80CF      BNE.W    ??HAL_SPI_MspInit_3
   1066            {
   1067          	  
   1068              /**I2S3 GPIO Configuration    
   1069                 PB2     ------> I2S3_SD
   1070                 PA15     ------> I2S3_WS (LRCK)
   1071                 PB3     ------> I2S3_CK 
   1072          	   PC7    ------> MCLK
   1073              */
   1074           
   1075            /* USER CODE BEGIN SPI3_MspInit 1 */
   1076            __SPI3_CLK_ENABLE();
   \   00000178   0x.... 0x....      LDR.W    R0,??DataTable17_9  ;; 0x40023840
   \   0000017C   0x6800             LDR      R0,[R0, #+0]
   \   0000017E   0xF450 0x4000      ORRS     R0,R0,#0x8000
   \   00000182   0x.... 0x....      LDR.W    R1,??DataTable17_9  ;; 0x40023840
   \   00000186   0x6008             STR      R0,[R1, #+0]
   \   00000188   0x.... 0x....      LDR.W    R0,??DataTable17_9  ;; 0x40023840
   \   0000018C   0x6800             LDR      R0,[R0, #+0]
   \   0000018E   0xF410 0x4000      ANDS     R0,R0,#0x8000
   \   00000192   0x9000             STR      R0,[SP, #+0]
   \   00000194   0x9800             LDR      R0,[SP, #+0]
   1077            __GPIOA_CLK_ENABLE();
   \   00000196   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   0000019A   0x6800             LDR      R0,[R0, #+0]
   \   0000019C   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000001A0   0x.... 0x....      LDR.W    R1,??DataTable17_2  ;; 0x40023830
   \   000001A4   0x6008             STR      R0,[R1, #+0]
   \   000001A6   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   000001AA   0x6800             LDR      R0,[R0, #+0]
   \   000001AC   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   000001B0   0x9000             STR      R0,[SP, #+0]
   \   000001B2   0x9800             LDR      R0,[SP, #+0]
   1078            __GPIOB_CLK_ENABLE();
   \   000001B4   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   000001B8   0x6800             LDR      R0,[R0, #+0]
   \   000001BA   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   000001BE   0x.... 0x....      LDR.W    R1,??DataTable17_2  ;; 0x40023830
   \   000001C2   0x6008             STR      R0,[R1, #+0]
   \   000001C4   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   000001C8   0x6800             LDR      R0,[R0, #+0]
   \   000001CA   0xF010 0x0002      ANDS     R0,R0,#0x2
   \   000001CE   0x9000             STR      R0,[SP, #+0]
   \   000001D0   0x9800             LDR      R0,[SP, #+0]
   1079          
   1080            GPIO_InitStruct.Pin = GPIO_PIN_3 | GPIO_PIN_2; 
   \   000001D2   0x200C             MOVS     R0,#+12
   \   000001D4   0x9001             STR      R0,[SP, #+4]
   1081            GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   000001D6   0x2002             MOVS     R0,#+2
   \   000001D8   0x9002             STR      R0,[SP, #+8]
   1082            GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
   \   000001DA   0x2003             MOVS     R0,#+3
   \   000001DC   0x9004             STR      R0,[SP, #+16]
   1083            GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   000001DE   0x2000             MOVS     R0,#+0
   \   000001E0   0x9003             STR      R0,[SP, #+12]
   1084            GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
   \   000001E2   0x2006             MOVS     R0,#+6
   \   000001E4   0x9005             STR      R0,[SP, #+20]
   1085            HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
   \   000001E6   0xA901             ADD      R1,SP,#+4
   \   000001E8   0x.... 0x....      LDR.W    R0,??DataTable17_11  ;; 0x40020400
   \   000001EC   0x.... 0x....      BL       HAL_GPIO_Init
   1086          
   1087          
   1088            GPIO_InitStruct.Pin = GPIO_PIN_15;
   \   000001F0   0xF44F 0x4000      MOV      R0,#+32768
   \   000001F4   0x9001             STR      R0,[SP, #+4]
   1089            GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   000001F6   0x2002             MOVS     R0,#+2
   \   000001F8   0x9002             STR      R0,[SP, #+8]
   1090            GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
   \   000001FA   0x2006             MOVS     R0,#+6
   \   000001FC   0x9005             STR      R0,[SP, #+20]
   1091            HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
   \   000001FE   0xA901             ADD      R1,SP,#+4
   \   00000200   0x.... 0x....      LDR.W    R0,??DataTable17_7  ;; 0x40020000
   \   00000204   0x.... 0x....      BL       HAL_GPIO_Init
   1092          
   1093          #ifdef CODEC_MCLK_ENABLED
   1094            __GPIOC_CLK_ENABLE();
   \   00000208   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   0000020C   0x6800             LDR      R0,[R0, #+0]
   \   0000020E   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000212   0x.... 0x....      LDR.W    R1,??DataTable17_2  ;; 0x40023830
   \   00000216   0x6008             STR      R0,[R1, #+0]
   \   00000218   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   0000021C   0x6800             LDR      R0,[R0, #+0]
   \   0000021E   0xF010 0x0004      ANDS     R0,R0,#0x4
   \   00000222   0x9000             STR      R0,[SP, #+0]
   \   00000224   0x9800             LDR      R0,[SP, #+0]
   1095            GPIO_InitStruct.Pin = GPIO_PIN_7; 
   \   00000226   0x2080             MOVS     R0,#+128
   \   00000228   0x9001             STR      R0,[SP, #+4]
   1096            GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   0000022A   0x2002             MOVS     R0,#+2
   \   0000022C   0x9002             STR      R0,[SP, #+8]
   1097            GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
   \   0000022E   0x2003             MOVS     R0,#+3
   \   00000230   0x9004             STR      R0,[SP, #+16]
   1098            GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   00000232   0x2000             MOVS     R0,#+0
   \   00000234   0x9003             STR      R0,[SP, #+12]
   1099            GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
   \   00000236   0x2006             MOVS     R0,#+6
   \   00000238   0x9005             STR      R0,[SP, #+20]
   1100            HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
   \   0000023A   0xA901             ADD      R1,SP,#+4
   \   0000023C   0x.... 0x....      LDR.W    R0,??DataTable17_10  ;; 0x40020800
   \   00000240   0x.... 0x....      BL       HAL_GPIO_Init
   1101          
   1102          #endif /* CODEC_MCLK_ENABLED */ 
   1103          
   1104          #ifdef I2S_INTERRUPT   
   1105               /* Enable and set Button EXTI Interrupt to the lowest priority */
   1106               //HAL_NVIC_SetPriority((IRQn_Type)SPI3_IRQn, 0x00, 0x01);
   1107               //HAL_NVIC_EnableIRQ((IRQn_Type)SPI3_IRQn);
   1108          
   1109               /* Enable the I2S DMA request */
   1110               //__HAL_I2S_ENABLE_IT(&hi2s3, SPI_I2S_DMAReq_Tx);
   1111               //__HAL_I2S_ENABLE(&hi2s3);
   1112            	    /* Peripheral interrupt init*/
   1113          		HAL_NVIC_SetPriority(SPI3_IRQn, 3, 0);
   1114          		HAL_NVIC_EnableIRQ(SPI3_IRQn);
   1115          #endif
   1116          
   1117                /* Enable the DMA clock */ 
   1118          	  __HAL_RCC_DMA1_CLK_ENABLE();
   \   00000244   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   00000248   0x6800             LDR      R0,[R0, #+0]
   \   0000024A   0xF450 0x1000      ORRS     R0,R0,#0x200000
   \   0000024E   0x.... 0x....      LDR.W    R1,??DataTable17_2  ;; 0x40023830
   \   00000252   0x6008             STR      R0,[R1, #+0]
   \   00000254   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   00000258   0x6800             LDR      R0,[R0, #+0]
   \   0000025A   0xF410 0x1000      ANDS     R0,R0,#0x200000
   \   0000025E   0x9000             STR      R0,[SP, #+0]
   \   00000260   0x9800             LDR      R0,[SP, #+0]
   1119          
   1120                /* Configure the DMA Stream */
   1121                //HAL_DMA_DeInit(&DmaHandle);
   1122          
   1123                /* Set the parameters to be configured */ 
   1124          	  DmaHandle.Instance = DMA1_Stream7;
   \   00000262   0x.... 0x....      LDR.W    R0,??DataTable18_1  ;; 0x400260b8
   \   00000266   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   0000026A   0x6008             STR      R0,[R1, #+0]
   1125                DmaHandle.Init.Channel = DMA_CHANNEL_0;
   \   0000026C   0x2000             MOVS     R0,#+0
   \   0000026E   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   00000272   0x6048             STR      R0,[R1, #+4]
   1126          	  DmaHandle.Init.Direction = DMA_MEMORY_TO_PERIPH;
   \   00000274   0x2040             MOVS     R0,#+64
   \   00000276   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   0000027A   0x6088             STR      R0,[R1, #+8]
   1127          	  DmaHandle.Init.PeriphInc = DMA_PINC_DISABLE;
   \   0000027C   0x2000             MOVS     R0,#+0
   \   0000027E   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   00000282   0x60C8             STR      R0,[R1, #+12]
   1128          	  DmaHandle.Init.MemInc = DMA_MINC_ENABLE;
   \   00000284   0xF44F 0x6080      MOV      R0,#+1024
   \   00000288   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   0000028C   0x6108             STR      R0,[R1, #+16]
   1129          	  DmaHandle.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
   \   0000028E   0xF44F 0x6000      MOV      R0,#+2048
   \   00000292   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   00000296   0x6148             STR      R0,[R1, #+20]
   1130                DmaHandle.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD; 
   \   00000298   0xF44F 0x5000      MOV      R0,#+8192
   \   0000029C   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   000002A0   0x6188             STR      R0,[R1, #+24]
   1131          	  DmaHandle.Init.Mode = DMA_NORMAL;
   \   000002A2   0x2000             MOVS     R0,#+0
   \   000002A4   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   000002A8   0x61C8             STR      R0,[R1, #+28]
   1132                DmaHandle.Init.Priority = DMA_PRIORITY_HIGH; 
   \   000002AA   0xF45F 0x3000      MOVS     R0,#+131072
   \   000002AE   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   000002B2   0x6208             STR      R0,[R1, #+32]
   1133          	  DmaHandle.Init.FIFOMode = DMA_FIFOMODE_ENABLE;//DMA_FIFOMODE_DISABLE
   \   000002B4   0x2004             MOVS     R0,#+4
   \   000002B6   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   000002BA   0x6248             STR      R0,[R1, #+36]
   1134                DmaHandle.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
   \   000002BC   0x2003             MOVS     R0,#+3
   \   000002BE   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   000002C2   0x6288             STR      R0,[R1, #+40]
   1135                DmaHandle.Init.MemBurst = DMA_MBURST_SINGLE;
   \   000002C4   0x2000             MOVS     R0,#+0
   \   000002C6   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   000002CA   0x62C8             STR      R0,[R1, #+44]
   1136                DmaHandle.Init.PeriphBurst = DMA_PBURST_SINGLE;	  
   \   000002CC   0x2000             MOVS     R0,#+0
   \   000002CE   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   000002D2   0x6308             STR      R0,[R1, #+48]
   1137                //DmaHandle.Instance->PAR =(uint32_t)&SPI3->DR;//CODEC_I2S_ADDRESS
   1138                //DmaHandle.Instance->M0AR = (uint32_t)0;
   1139                //DmaHandle.Instance->NDTR = (uint32_t)0xFFFE;
   1140                //DmaHandle.XferCpltCallback = &TC_Callback;
   1141           
   1142          
   1143                /* Associate the initialized DMA handle to the the SPI handle */
   1144                __HAL_LINKDMA(hspi, hdmatx, DmaHandle);
   \   000002D4   0x.... 0x....      LDR.W    R0,??DataTable18_2
   \   000002D8   0x6560             STR      R0,[R4, #+84]
   \   000002DA   0x.... 0x....      LDR.W    R0,??DataTable18_2
   \   000002DE   0x6384             STR      R4,[R0, #+56]
   1145                //__HAL_DMA_ENABLE_IT(&DmaHandle, DMA_IT_TC);
   1146          
   1147          	   /* Deinitialize the Stream for new transfer */
   1148                 HAL_DMA_DeInit(&DmaHandle);
   \   000002E0   0x.... 0x....      LDR.W    R0,??DataTable18_2
   \   000002E4   0x.... 0x....      BL       HAL_DMA_DeInit
   1149                 /* Configure the DMA Stream */
   1150          	   HAL_DMA_Init(&DmaHandle);
   \   000002E8   0x.... 0x....      LDR.W    R0,??DataTable18_2
   \   000002EC   0x.... 0x....      BL       HAL_DMA_Init
   1151          
   1152                /* Set Interrupt Group Priority */
   1153                HAL_NVIC_SetPriority(DMA1_Stream7_IRQn, INTERRUPT_PRI_DMA, 0);
   \   000002F0   0x2200             MOVS     R2,#+0
   \   000002F2   0x2105             MOVS     R1,#+5
   \   000002F4   0x202F             MOVS     R0,#+47
   \   000002F6   0x.... 0x....      BL       HAL_NVIC_SetPriority
   1154                /* Enable the DMA STREAM global Interrupt */
   1155                HAL_NVIC_EnableIRQ(DMA1_Stream7_IRQn);    
   \   000002FA   0x202F             MOVS     R0,#+47
   \   000002FC   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
   1156          
   1157          	  __HAL_DMA_ENABLE_IT(&DmaHandle, DMA_IT_TC);
   \   00000300   0x.... 0x....      LDR.W    R0,??DataTable18_2
   \   00000304   0x6800             LDR      R0,[R0, #+0]
   \   00000306   0x6800             LDR      R0,[R0, #+0]
   \   00000308   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   0000030C   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   00000310   0x6809             LDR      R1,[R1, #+0]
   \   00000312   0x6008             STR      R0,[R1, #+0]
   \   00000314   0xE157             B.N      ??HAL_SPI_MspInit_1
   1158          	    
   1159            }
   1160            else if(hspi->Instance==SPI4)
   \                     ??HAL_SPI_MspInit_3: (+1)
   \   00000316   0x6820             LDR      R0,[R4, #+0]
   \   00000318   0x.... 0x....      LDR.W    R1,??DataTable18_3  ;; 0x40013400
   \   0000031C   0x4288             CMP      R0,R1
   \   0000031E   0xD135             BNE.N    ??HAL_SPI_MspInit_4
   1161            {
   1162            /* USER CODE BEGIN SPI4_MspInit 0 */
   1163          
   1164            /* USER CODE END SPI4_MspInit 0 */
   1165              /* Peripheral clock enable */
   1166              __SPI4_CLK_ENABLE();
   \   00000320   0x.... 0x....      LDR.W    R0,??DataTable17_6  ;; 0x40023844
   \   00000324   0x6800             LDR      R0,[R0, #+0]
   \   00000326   0xF450 0x5000      ORRS     R0,R0,#0x2000
   \   0000032A   0x.... 0x....      LDR.W    R1,??DataTable17_6  ;; 0x40023844
   \   0000032E   0x6008             STR      R0,[R1, #+0]
   \   00000330   0x.... 0x....      LDR.W    R0,??DataTable17_6  ;; 0x40023844
   \   00000334   0x6800             LDR      R0,[R0, #+0]
   \   00000336   0xF410 0x5000      ANDS     R0,R0,#0x2000
   \   0000033A   0x9000             STR      R0,[SP, #+0]
   \   0000033C   0x9800             LDR      R0,[SP, #+0]
   1167              __HAL_RCC_GPIOE_CLK_ENABLE();
   \   0000033E   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   00000342   0x6800             LDR      R0,[R0, #+0]
   \   00000344   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000348   0x.... 0x....      LDR.W    R1,??DataTable17_2  ;; 0x40023830
   \   0000034C   0x6008             STR      R0,[R1, #+0]
   \   0000034E   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   00000352   0x6800             LDR      R0,[R0, #+0]
   \   00000354   0xF010 0x0010      ANDS     R0,R0,#0x10
   \   00000358   0x9000             STR      R0,[SP, #+0]
   \   0000035A   0x9800             LDR      R0,[SP, #+0]
   1168            
   1169            
   1170              /**SPI4 GPIO Configuration    
   1171              PE2     ------> SPI4_SCK
   1172              PE4     ------> SPI4_NSS
   1173              PE5     ------> SPI4_MISO
   1174              PE6     ------> SPI4_MOSI 
   1175              */
   1176              GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6;
   \   0000035C   0x2074             MOVS     R0,#+116
   \   0000035E   0x9001             STR      R0,[SP, #+4]
   1177              GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   00000360   0x2002             MOVS     R0,#+2
   \   00000362   0x9002             STR      R0,[SP, #+8]
   1178              GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   00000364   0x2000             MOVS     R0,#+0
   \   00000366   0x9003             STR      R0,[SP, #+12]
   1179              GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
   \   00000368   0x2003             MOVS     R0,#+3
   \   0000036A   0x9004             STR      R0,[SP, #+16]
   1180              GPIO_InitStruct.Alternate = GPIO_AF5_SPI4;
   \   0000036C   0x2005             MOVS     R0,#+5
   \   0000036E   0x9005             STR      R0,[SP, #+20]
   1181              HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
   \   00000370   0xA901             ADD      R1,SP,#+4
   \   00000372   0x.... 0x....      LDR.W    R0,??DataTable18_4  ;; 0x40021000
   \   00000376   0x.... 0x....      BL       HAL_GPIO_Init
   1182          
   1183          	/* Peripheral interrupt init*/
   1184              HAL_NVIC_SetPriority(SPI4_IRQn, INTERRUPT_PRI_SDO56, 0);
   \   0000037A   0x2200             MOVS     R2,#+0
   \   0000037C   0x2102             MOVS     R1,#+2
   \   0000037E   0x2054             MOVS     R0,#+84
   \   00000380   0x.... 0x....      BL       HAL_NVIC_SetPriority
   1185              HAL_NVIC_EnableIRQ(SPI4_IRQn);
   \   00000384   0x2054             MOVS     R0,#+84
   \   00000386   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
   \   0000038A   0xE11C             B.N      ??HAL_SPI_MspInit_1
   1186          
   1187            /* USER CODE BEGIN SPI4_MspInit 1 */
   1188          
   1189            /* USER CODE END SPI4_MspInit 1 */
   1190            }
   1191            else if(hspi->Instance==SPI5)
   \                     ??HAL_SPI_MspInit_4: (+1)
   \   0000038C   0x6820             LDR      R0,[R4, #+0]
   \   0000038E   0x....             LDR.N    R1,??DataTable13_2  ;; 0x40015000
   \   00000390   0x4288             CMP      R0,R1
   \   00000392   0xF040 0x808A      BNE.W    ??HAL_SPI_MspInit_5
   1192            {
   1193            /* USER CODE BEGIN SPI5_MspInit 0 */
   1194          
   1195            /* USER CODE END SPI5_MspInit 0 */
   1196              /* Peripheral clock enable */
   1197              __HAL_RCC_SPI5_CLK_ENABLE();
   \   00000396   0x.... 0x....      LDR.W    R0,??DataTable17_6  ;; 0x40023844
   \   0000039A   0x6800             LDR      R0,[R0, #+0]
   \   0000039C   0xF450 0x1080      ORRS     R0,R0,#0x100000
   \   000003A0   0x.... 0x....      LDR.W    R1,??DataTable17_6  ;; 0x40023844
   \   000003A4   0x6008             STR      R0,[R1, #+0]
   \   000003A6   0x.... 0x....      LDR.W    R0,??DataTable17_6  ;; 0x40023844
   \   000003AA   0x6800             LDR      R0,[R0, #+0]
   \   000003AC   0xF410 0x1080      ANDS     R0,R0,#0x100000
   \   000003B0   0x9000             STR      R0,[SP, #+0]
   \   000003B2   0x9800             LDR      R0,[SP, #+0]
   1198              __HAL_RCC_GPIOF_CLK_ENABLE();
   \   000003B4   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   000003B8   0x6800             LDR      R0,[R0, #+0]
   \   000003BA   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   000003BE   0x.... 0x....      LDR.W    R1,??DataTable17_2  ;; 0x40023830
   \   000003C2   0x6008             STR      R0,[R1, #+0]
   \   000003C4   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   000003C8   0x6800             LDR      R0,[R0, #+0]
   \   000003CA   0xF010 0x0020      ANDS     R0,R0,#0x20
   \   000003CE   0x9000             STR      R0,[SP, #+0]
   \   000003D0   0x9800             LDR      R0,[SP, #+0]
   1199            
   1200              /**SPI5 GPIO Configuration    
   1201              PF7     ------> SPI5_SCK  --> PF7
   1202              PF11     ------> SPI5_MOSI --> PF9
   1203                               SPI5_MISO --> PF8
   1204                                    NSS   -->  PF6
   1205              */
   1206              GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_9|GPIO_PIN_8;
   \   000003D2   0xF44F 0x7070      MOV      R0,#+960
   \   000003D6   0x9001             STR      R0,[SP, #+4]
   1207              GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
   \   000003D8   0x2012             MOVS     R0,#+18
   \   000003DA   0x9002             STR      R0,[SP, #+8]
   1208              GPIO_InitStruct.Pull = GPIO_PULLUP;
   \   000003DC   0x2001             MOVS     R0,#+1
   \   000003DE   0x9003             STR      R0,[SP, #+12]
   1209              GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
   \   000003E0   0x2003             MOVS     R0,#+3
   \   000003E2   0x9004             STR      R0,[SP, #+16]
   1210              GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
   \   000003E4   0x2005             MOVS     R0,#+5
   \   000003E6   0x9005             STR      R0,[SP, #+20]
   1211              HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
   \   000003E8   0xA901             ADD      R1,SP,#+4
   \   000003EA   0x.... 0x....      LDR.W    R0,??DataTable18_5  ;; 0x40021400
   \   000003EE   0x.... 0x....      BL       HAL_GPIO_Init
   1212          
   1213          #if 0
   1214            /* Peripheral interrupt init*/
   1215              HAL_NVIC_SetPriority(SPI5_IRQn, INTERRUPT_PRI_SDO7, 0);
   1216              HAL_NVIC_EnableIRQ(SPI5_IRQn);
   1217          
   1218          #else
   1219          	/* Peripheral DMA init*/
   1220              __HAL_RCC_DMA2_CLK_ENABLE();
   \   000003F2   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   000003F6   0x6800             LDR      R0,[R0, #+0]
   \   000003F8   0xF450 0x0080      ORRS     R0,R0,#0x400000
   \   000003FC   0x.... 0x....      LDR.W    R1,??DataTable17_2  ;; 0x40023830
   \   00000400   0x6008             STR      R0,[R1, #+0]
   \   00000402   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   00000406   0x6800             LDR      R0,[R0, #+0]
   \   00000408   0xF410 0x0080      ANDS     R0,R0,#0x400000
   \   0000040C   0x9000             STR      R0,[SP, #+0]
   \   0000040E   0x9800             LDR      R0,[SP, #+0]
   1221          	hdma_spi5_rx.Instance = DMA2_Stream5;
   \   00000410   0x.... 0x....      LDR.W    R0,??DataTable18_6  ;; 0x40026488
   \   00000414   0x.... 0x....      LDR.W    R1,??DataTable18_7
   \   00000418   0x6008             STR      R0,[R1, #+0]
   1222          	hdma_spi5_rx.Init.Channel = DMA_CHANNEL_7;
   \   0000041A   0xF05F 0x6060      MOVS     R0,#+234881024
   \   0000041E   0x.... 0x....      LDR.W    R1,??DataTable18_7
   \   00000422   0x6048             STR      R0,[R1, #+4]
   1223          	hdma_spi5_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
   \   00000424   0x2000             MOVS     R0,#+0
   \   00000426   0x.... 0x....      LDR.W    R1,??DataTable18_7
   \   0000042A   0x6088             STR      R0,[R1, #+8]
   1224          	hdma_spi5_rx.Init.PeriphInc = DMA_PINC_DISABLE;
   \   0000042C   0x2000             MOVS     R0,#+0
   \   0000042E   0x.... 0x....      LDR.W    R1,??DataTable18_7
   \   00000432   0x60C8             STR      R0,[R1, #+12]
   1225          	hdma_spi5_rx.Init.MemInc = DMA_MINC_ENABLE;
   \   00000434   0xF44F 0x6080      MOV      R0,#+1024
   \   00000438   0x.... 0x....      LDR.W    R1,??DataTable18_7
   \   0000043C   0x6108             STR      R0,[R1, #+16]
   1226          	hdma_spi5_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
   \   0000043E   0xF44F 0x6000      MOV      R0,#+2048
   \   00000442   0x.... 0x....      LDR.W    R1,??DataTable18_7
   \   00000446   0x6148             STR      R0,[R1, #+20]
   1227          	hdma_spi5_rx.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
   \   00000448   0xF44F 0x5000      MOV      R0,#+8192
   \   0000044C   0x.... 0x....      LDR.W    R1,??DataTable18_7
   \   00000450   0x6188             STR      R0,[R1, #+24]
   1228          	hdma_spi5_rx.Init.Mode = DMA_NORMAL;
   \   00000452   0x2000             MOVS     R0,#+0
   \   00000454   0x.... 0x....      LDR.W    R1,??DataTable18_7
   \   00000458   0x61C8             STR      R0,[R1, #+28]
   1229          	hdma_spi5_rx.Init.Priority = DMA_PRIORITY_HIGH;
   \   0000045A   0xF45F 0x3000      MOVS     R0,#+131072
   \   0000045E   0x.... 0x....      LDR.W    R1,??DataTable18_7
   \   00000462   0x6208             STR      R0,[R1, #+32]
   1230          	hdma_spi5_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
   \   00000464   0x2000             MOVS     R0,#+0
   \   00000466   0x.... 0x....      LDR.W    R1,??DataTable18_7
   \   0000046A   0x6248             STR      R0,[R1, #+36]
   1231          	hdma_spi5_rx.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
   \   0000046C   0x2003             MOVS     R0,#+3
   \   0000046E   0x.... 0x....      LDR.W    R1,??DataTable18_7
   \   00000472   0x6288             STR      R0,[R1, #+40]
   1232          	hdma_spi5_rx.Init.MemBurst = DMA_MBURST_SINGLE;
   \   00000474   0x2000             MOVS     R0,#+0
   \   00000476   0x.... 0x....      LDR.W    R1,??DataTable18_7
   \   0000047A   0x62C8             STR      R0,[R1, #+44]
   1233          	hdma_spi5_rx.Init.PeriphBurst = DMA_PBURST_SINGLE;
   \   0000047C   0x2000             MOVS     R0,#+0
   \   0000047E   0x.... 0x....      LDR.W    R1,??DataTable18_7
   \   00000482   0x6308             STR      R0,[R1, #+48]
   1234          	HAL_DMA_Init(&hdma_spi5_rx);
   \   00000484   0x.... 0x....      LDR.W    R0,??DataTable18_7
   \   00000488   0x.... 0x....      BL       HAL_DMA_Init
   1235          
   1236              __HAL_LINKDMA(hspi,hdmarx,hdma_spi5_rx);
   \   0000048C   0x.... 0x....      LDR.W    R0,??DataTable18_7
   \   00000490   0x65A0             STR      R0,[R4, #+88]
   \   00000492   0x.... 0x....      LDR.W    R0,??DataTable18_7
   \   00000496   0x6384             STR      R4,[R0, #+56]
   1237          
   1238          	HAL_NVIC_SetPriority(DMA2_Stream5_IRQn, INTERRUPT_PRI_SDO7, 0);
   \   00000498   0x2200             MOVS     R2,#+0
   \   0000049A   0x2104             MOVS     R1,#+4
   \   0000049C   0x2044             MOVS     R0,#+68
   \   0000049E   0x.... 0x....      BL       HAL_NVIC_SetPriority
   1239          	HAL_NVIC_EnableIRQ(DMA2_Stream5_IRQn);
   \   000004A2   0x2044             MOVS     R0,#+68
   \   000004A4   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
   \   000004A8   0xE08D             B.N      ??HAL_SPI_MspInit_1
   1240          
   1241          #endif
   1242            /* USER CODE END SPI5_MspInit 1 */
   1243            }
   1244            else if(hspi->Instance==SPI6)
   \                     ??HAL_SPI_MspInit_5: (+1)
   \   000004AA   0x6820             LDR      R0,[R4, #+0]
   \   000004AC   0x....             LDR.N    R1,??DataTable13_10  ;; 0x40015400
   \   000004AE   0x4288             CMP      R0,R1
   \   000004B0   0xF040 0x8089      BNE.W    ??HAL_SPI_MspInit_1
   1245            {
   1246            /* USER CODE BEGIN SPI6_MspInit 0 */
   1247          
   1248            /* USER CODE END SPI6_MspInit 0 */
   1249              /* Peripheral clock enable */
   1250              __SPI6_CLK_ENABLE();
   \   000004B4   0x.... 0x....      LDR.W    R0,??DataTable17_6  ;; 0x40023844
   \   000004B8   0x6800             LDR      R0,[R0, #+0]
   \   000004BA   0xF450 0x1000      ORRS     R0,R0,#0x200000
   \   000004BE   0x.... 0x....      LDR.W    R1,??DataTable17_6  ;; 0x40023844
   \   000004C2   0x6008             STR      R0,[R1, #+0]
   \   000004C4   0x.... 0x....      LDR.W    R0,??DataTable17_6  ;; 0x40023844
   \   000004C8   0x6800             LDR      R0,[R0, #+0]
   \   000004CA   0xF410 0x1000      ANDS     R0,R0,#0x200000
   \   000004CE   0x9000             STR      R0,[SP, #+0]
   \   000004D0   0x9800             LDR      R0,[SP, #+0]
   1251              __HAL_RCC_GPIOG_CLK_ENABLE();
   \   000004D2   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   000004D6   0x6800             LDR      R0,[R0, #+0]
   \   000004D8   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   000004DC   0x.... 0x....      LDR.W    R1,??DataTable17_2  ;; 0x40023830
   \   000004E0   0x6008             STR      R0,[R1, #+0]
   \   000004E2   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   000004E6   0x6800             LDR      R0,[R0, #+0]
   \   000004E8   0xF010 0x0040      ANDS     R0,R0,#0x40
   \   000004EC   0x9000             STR      R0,[SP, #+0]
   \   000004EE   0x9800             LDR      R0,[SP, #+0]
   1252            
   1253              /**SPI6 GPIO Configuration    
   1254              PG13     ------> SPI6_SCK
   1255              PG14     ------> SPI6_MOSI 
   1256              */
   1257              GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14;
   \   000004F0   0xF44F 0x40C0      MOV      R0,#+24576
   \   000004F4   0x9001             STR      R0,[SP, #+4]
   1258              GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   000004F6   0x2002             MOVS     R0,#+2
   \   000004F8   0x9002             STR      R0,[SP, #+8]
   1259              GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   000004FA   0x2000             MOVS     R0,#+0
   \   000004FC   0x9003             STR      R0,[SP, #+12]
   1260              GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
   \   000004FE   0x2003             MOVS     R0,#+3
   \   00000500   0x9004             STR      R0,[SP, #+16]
   1261              GPIO_InitStruct.Alternate = GPIO_AF5_SPI6;
   \   00000502   0x2005             MOVS     R0,#+5
   \   00000504   0x9005             STR      R0,[SP, #+20]
   1262              HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
   \   00000506   0xA901             ADD      R1,SP,#+4
   \   00000508   0x.... 0x....      LDR.W    R0,??DataTable18_8  ;; 0x40021800
   \   0000050C   0x.... 0x....      BL       HAL_GPIO_Init
   1263          
   1264          #if 0
   1265          	  /* Peripheral interrupt init*/
   1266              HAL_NVIC_SetPriority(SPI6_IRQn, INTERRUPT_PRI_SDO8, 1);
   1267              HAL_NVIC_EnableIRQ(SPI6_IRQn);
   1268          #else
   1269          	/* Peripheral DMA init*/
   1270          	__HAL_RCC_DMA2_CLK_ENABLE();
   \   00000510   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   00000514   0x6800             LDR      R0,[R0, #+0]
   \   00000516   0xF450 0x0080      ORRS     R0,R0,#0x400000
   \   0000051A   0x.... 0x....      LDR.W    R1,??DataTable17_2  ;; 0x40023830
   \   0000051E   0x6008             STR      R0,[R1, #+0]
   \   00000520   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40023830
   \   00000524   0x6800             LDR      R0,[R0, #+0]
   \   00000526   0xF410 0x0080      ANDS     R0,R0,#0x400000
   \   0000052A   0x9000             STR      R0,[SP, #+0]
   \   0000052C   0x9800             LDR      R0,[SP, #+0]
   1271          	hdma_spi6_rx.Instance = DMA2_Stream6;
   \   0000052E   0x.... 0x....      LDR.W    R0,??DataTable18_9  ;; 0x400264a0
   \   00000532   0x.... 0x....      LDR.W    R1,??DataTable18_10
   \   00000536   0x6008             STR      R0,[R1, #+0]
   1272          	hdma_spi6_rx.Init.Channel = DMA_CHANNEL_1;
   \   00000538   0xF05F 0x7000      MOVS     R0,#+33554432
   \   0000053C   0x.... 0x....      LDR.W    R1,??DataTable18_10
   \   00000540   0x6048             STR      R0,[R1, #+4]
   1273          	hdma_spi6_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
   \   00000542   0x2000             MOVS     R0,#+0
   \   00000544   0x.... 0x....      LDR.W    R1,??DataTable18_10
   \   00000548   0x6088             STR      R0,[R1, #+8]
   1274          	hdma_spi6_rx.Init.PeriphInc = DMA_PINC_DISABLE;
   \   0000054A   0x2000             MOVS     R0,#+0
   \   0000054C   0x.... 0x....      LDR.W    R1,??DataTable18_10
   \   00000550   0x60C8             STR      R0,[R1, #+12]
   1275          	hdma_spi6_rx.Init.MemInc = DMA_MINC_ENABLE;
   \   00000552   0xF44F 0x6080      MOV      R0,#+1024
   \   00000556   0x.... 0x....      LDR.W    R1,??DataTable18_10
   \   0000055A   0x6108             STR      R0,[R1, #+16]
   1276          	hdma_spi6_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
   \   0000055C   0xF44F 0x6000      MOV      R0,#+2048
   \   00000560   0x.... 0x....      LDR.W    R1,??DataTable18_10
   \   00000564   0x6148             STR      R0,[R1, #+20]
   1277          	hdma_spi6_rx.Init.MemDataAlignment = DMA_PDATAALIGN_HALFWORD;
   \   00000566   0xF44F 0x6000      MOV      R0,#+2048
   \   0000056A   0x.... 0x....      LDR.W    R1,??DataTable18_10
   \   0000056E   0x6188             STR      R0,[R1, #+24]
   1278          	hdma_spi6_rx.Init.Mode = DMA_NORMAL;
   \   00000570   0x2000             MOVS     R0,#+0
   \   00000572   0x.... 0x....      LDR.W    R1,??DataTable18_10
   \   00000576   0x61C8             STR      R0,[R1, #+28]
   1279          	hdma_spi6_rx.Init.Priority = DMA_PRIORITY_HIGH;
   \   00000578   0xF45F 0x3000      MOVS     R0,#+131072
   \   0000057C   0x.... 0x....      LDR.W    R1,??DataTable18_10
   \   00000580   0x6208             STR      R0,[R1, #+32]
   1280          	hdma_spi6_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
   \   00000582   0x2000             MOVS     R0,#+0
   \   00000584   0x.... 0x....      LDR.W    R1,??DataTable18_10
   \   00000588   0x6248             STR      R0,[R1, #+36]
   1281          	hdma_spi6_rx.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
   \   0000058A   0x2003             MOVS     R0,#+3
   \   0000058C   0x.... 0x....      LDR.W    R1,??DataTable18_10
   \   00000590   0x6288             STR      R0,[R1, #+40]
   1282          	hdma_spi6_rx.Init.MemBurst = DMA_MBURST_SINGLE;
   \   00000592   0x2000             MOVS     R0,#+0
   \   00000594   0x.... 0x....      LDR.W    R1,??DataTable18_10
   \   00000598   0x62C8             STR      R0,[R1, #+44]
   1283          	hdma_spi6_rx.Init.PeriphBurst = DMA_PBURST_SINGLE;
   \   0000059A   0x2000             MOVS     R0,#+0
   \   0000059C   0x.... 0x....      LDR.W    R1,??DataTable18_10
   \   000005A0   0x6308             STR      R0,[R1, #+48]
   1284          	HAL_DMA_Init(&hdma_spi6_rx);
   \   000005A2   0x.... 0x....      LDR.W    R0,??DataTable18_10
   \   000005A6   0x.... 0x....      BL       HAL_DMA_Init
   1285          
   1286          	__HAL_LINKDMA(hspi,hdmarx,hdma_spi6_rx);
   \   000005AA   0x.... 0x....      LDR.W    R0,??DataTable18_10
   \   000005AE   0x65A0             STR      R0,[R4, #+88]
   \   000005B0   0x.... 0x....      LDR.W    R0,??DataTable18_10
   \   000005B4   0x6384             STR      R4,[R0, #+56]
   1287          
   1288          	HAL_NVIC_SetPriority(DMA2_Stream6_IRQn, INTERRUPT_PRI_SDO8, 0);
   \   000005B6   0x2200             MOVS     R2,#+0
   \   000005B8   0x2104             MOVS     R1,#+4
   \   000005BA   0x2045             MOVS     R0,#+69
   \   000005BC   0x.... 0x....      BL       HAL_NVIC_SetPriority
   1289          	HAL_NVIC_EnableIRQ(DMA2_Stream6_IRQn);
   \   000005C0   0x2045             MOVS     R0,#+69
   \   000005C2   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
   1290          
   1291          #endif
   1292            }
   1293          
   1294          }
   \                     ??HAL_SPI_MspInit_1: (+1)
   \   000005C6   0xB006             ADD      SP,SP,#+24
   \   000005C8   0xBD10             POP      {R4,PC}          ;; return
   1295          
   1296          
   1297          
   1298          

   \                                 In section .text, align 2, keep-with-next
   1299          static void SPI_I2S_SendData(SPI_TypeDef* SPIx, uint16_t Data)
   1300          {
   1301            /* Check the parameters */
   1302            assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
   1303            
   1304            /* Write in the DR register the data to be sent */
   1305            SPIx->DR = Data;
   \                     SPI_I2S_SendData: (+1)
   \   00000000   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000002   0x60C1             STR      R1,[R0, #+12]
   1306          }
   \   00000004   0x4770             BX       LR               ;; return
   1307          
   1308          

   \                                 In section .text, align 2, keep-with-next
   1309          static uint16_t SPI_I2S_ReceiveData(SPI_TypeDef* SPIx)
   1310          {
   1311            /* Check the parameters */
   1312            assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
   1313            
   1314            /* Return the data in the DR register */
   1315            return SPIx->DR;
   \                     SPI_I2S_ReceiveData: (+1)
   \   00000000   0x68C0             LDR      R0,[R0, #+12]
   \   00000002   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000004   0x4770             BX       LR               ;; return
   1316          }
   1317          
   1318          

   \                                 In section .text, align 2, keep-with-next
   1319          void RecordUpdBuf(void)
   1320          {
   1321          
   1322               if (WaveRecord_flgInt==2)
   \                     RecordUpdBuf: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable18_11
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2802             CMP      R0,#+2
   \   00000008   0xF040 0x816C      BNE.W    ??RecordUpdBuf_0
   1323               {
   1324                  WaveRecord_flgInt=0;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable18_11
   \   00000012   0x7008             STRB     R0,[R1, #+0]
   1325          			if ((WaveRec_idxSens1 < (AUDIO_OUT_BUFFER_SIZE))&&(WaveRec_idxSens2 < (AUDIO_OUT_BUFFER_SIZE)))
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable18_12
   \   00000018   0x8800             LDRH     R0,[R0, #+0]
   \   0000001A   0xF5B0 0x6F80      CMP      R0,#+1024
   \   0000001E   0xF280 0x8161      BGE.W    ??RecordUpdBuf_0
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable18_13
   \   00000026   0x8800             LDRH     R0,[R0, #+0]
   \   00000028   0xF5B0 0x6F80      CMP      R0,#+1024
   \   0000002C   0xF280 0x815A      BGE.W    ??RecordUpdBuf_0
   1326          		//			  &&(stLR!=stLROld))
   1327          			{
   1328          		/*-------------------------------------------------------------------------------------------------------------
   1329          					  
   1330          			Sequence  Record Data					  Processing Data				  Player Data
   1331          					  
   1332          			1-------  Buffer1						  Buffer2						  Buffer3 BUF3_PLAY)
   1333          					  
   1334          			2-------  Buffer3						  Buffer1						  Buffer2 (BUF2_PLAY)		  
   1335          					  
   1336          			3-------  Buffer2						  Buffer3						  Buffer1 (BUF1_PLAY)
   1337          		 ---------------------------------------------------------------------------------------------------------------*/
   1338          					  /* Recording Audio Data */						 
   1339          					   switch (buffer_switch)
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable18_14
   \   00000034   0x7800             LDRB     R0,[R0, #+0]
   \   00000036   0x2800             CMP      R0,#+0
   \   00000038   0xD004             BEQ.N    ??RecordUpdBuf_1
   \   0000003A   0x2802             CMP      R0,#+2
   \   0000003C   0xF000 0x80E2      BEQ.W    ??RecordUpdBuf_2
   \   00000040   0xD370             BCC.N    ??RecordUpdBuf_3
   \   00000042   0xE14F             B.N      ??RecordUpdBuf_4
   1340          					   {
   1341          								case BUF1_PLAY:
   1342          
   1343          										Buffer2.bufMIC1[WaveRec_idxSens1++] = vRawSens1;
   \                     ??RecordUpdBuf_1: (+1)
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable18_12
   \   00000048   0x8800             LDRH     R0,[R0, #+0]
   \   0000004A   0x1C41             ADDS     R1,R0,#+1
   \   0000004C   0x.... 0x....      LDR.W    R2,??DataTable18_12
   \   00000050   0x8011             STRH     R1,[R2, #+0]
   \   00000052   0x.... 0x....      LDR.W    R1,??DataTable18_15
   \   00000056   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000005A   0x.... 0x....      LDR.W    R2,??DataTable18_16
   \   0000005E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000060   0xF822 0x1010      STRH     R1,[R2, R0, LSL #+1]
   1344          										Buffer2.bufMIC2[WaveRec_idxSens2++] = vRawSens2;
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable18_13
   \   00000068   0x8800             LDRH     R0,[R0, #+0]
   \   0000006A   0x1C41             ADDS     R1,R0,#+1
   \   0000006C   0x.... 0x....      LDR.W    R2,??DataTable18_13
   \   00000070   0x8011             STRH     R1,[R2, #+0]
   \   00000072   0x.... 0x....      LDR.W    R1,??DataTable18_17
   \   00000076   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000007A   0x.... 0x....      LDR.W    R2,??DataTable18_16
   \   0000007E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000080   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   00000084   0xF241 0x0214      MOVW     R2,#+4116
   \   00000088   0x5211             STRH     R1,[R2, R0]
   1345          										Buffer2.bufMIC3[WaveRec_idxSens3++] = vRawSens3;
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable18_18
   \   0000008E   0x8800             LDRH     R0,[R0, #+0]
   \   00000090   0x1C41             ADDS     R1,R0,#+1
   \   00000092   0x.... 0x....      LDR.W    R2,??DataTable18_18
   \   00000096   0x8011             STRH     R1,[R2, #+0]
   \   00000098   0x.... 0x....      LDR.W    R1,??DataTable18_19
   \   0000009C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000000A0   0x.... 0x....      LDR.W    R2,??DataTable18_16
   \   000000A4   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000A6   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000000AA   0xF242 0x0228      MOVW     R2,#+8232
   \   000000AE   0x5211             STRH     R1,[R2, R0]
   1346          										Buffer2.bufMIC4[WaveRec_idxSens4++] = vRawSens4;
   \   000000B0   0x.... 0x....      LDR.W    R0,??DataTable18_20
   \   000000B4   0x8800             LDRH     R0,[R0, #+0]
   \   000000B6   0x1C41             ADDS     R1,R0,#+1
   \   000000B8   0x.... 0x....      LDR.W    R2,??DataTable18_20
   \   000000BC   0x8011             STRH     R1,[R2, #+0]
   \   000000BE   0x.... 0x....      LDR.W    R1,??DataTable18_21
   \   000000C2   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000000C6   0x.... 0x....      LDR.W    R2,??DataTable18_16
   \   000000CA   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000CC   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000000D0   0xF243 0x023C      MOVW     R2,#+12348
   \   000000D4   0x5211             STRH     R1,[R2, R0]
   1347          										Buffer2.bufMIC5[WaveRec_idxSens5++] = vRawSens5;
   \   000000D6   0x.... 0x....      LDR.W    R0,??DataTable18_22
   \   000000DA   0x8800             LDRH     R0,[R0, #+0]
   \   000000DC   0x1C41             ADDS     R1,R0,#+1
   \   000000DE   0x.... 0x....      LDR.W    R2,??DataTable18_22
   \   000000E2   0x8011             STRH     R1,[R2, #+0]
   \   000000E4   0x.... 0x....      LDR.W    R1,??DataTable18_23
   \   000000E8   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000000EC   0x.... 0x....      LDR.W    R2,??DataTable18_16
   \   000000F0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000F2   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000000F6   0xF244 0x0250      MOVW     R2,#+16464
   \   000000FA   0x5211             STRH     R1,[R2, R0]
   1348          										Buffer2.bufMIC6[WaveRec_idxSens6++] = vRawSens6;
   \   000000FC   0x.... 0x....      LDR.W    R0,??DataTable18_24
   \   00000100   0x8800             LDRH     R0,[R0, #+0]
   \   00000102   0x1C41             ADDS     R1,R0,#+1
   \   00000104   0x.... 0x....      LDR.W    R2,??DataTable18_24
   \   00000108   0x8011             STRH     R1,[R2, #+0]
   \   0000010A   0x.... 0x....      LDR.W    R1,??DataTable18_25
   \   0000010E   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000112   0x.... 0x....      LDR.W    R2,??DataTable18_16
   \   00000116   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000118   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   0000011C   0xF245 0x0264      MOVW     R2,#+20580
   \   00000120   0x5211             STRH     R1,[R2, R0]
   1349          	
   1350          										break;
   \   00000122   0xE0DF             B.N      ??RecordUpdBuf_0
   1351          								case BUF2_PLAY:
   1352          
   1353          										Buffer3.bufMIC1[WaveRec_idxSens1++] = vRawSens1;
   \                     ??RecordUpdBuf_3: (+1)
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable18_12
   \   00000128   0x8800             LDRH     R0,[R0, #+0]
   \   0000012A   0x1C41             ADDS     R1,R0,#+1
   \   0000012C   0x.... 0x....      LDR.W    R2,??DataTable18_12
   \   00000130   0x8011             STRH     R1,[R2, #+0]
   \   00000132   0x.... 0x....      LDR.W    R1,??DataTable18_15
   \   00000136   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000013A   0x.... 0x....      LDR.W    R2,??DataTable18_26
   \   0000013E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000140   0xF822 0x1010      STRH     R1,[R2, R0, LSL #+1]
   1354          										Buffer3.bufMIC2[WaveRec_idxSens2++] = vRawSens2;
   \   00000144   0x.... 0x....      LDR.W    R0,??DataTable18_13
   \   00000148   0x8800             LDRH     R0,[R0, #+0]
   \   0000014A   0x1C41             ADDS     R1,R0,#+1
   \   0000014C   0x.... 0x....      LDR.W    R2,??DataTable18_13
   \   00000150   0x8011             STRH     R1,[R2, #+0]
   \   00000152   0x.... 0x....      LDR.W    R1,??DataTable18_17
   \   00000156   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000015A   0x.... 0x....      LDR.W    R2,??DataTable18_26
   \   0000015E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000160   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   00000164   0xF241 0x0214      MOVW     R2,#+4116
   \   00000168   0x5211             STRH     R1,[R2, R0]
   1355          										Buffer3.bufMIC3[WaveRec_idxSens3++] = vRawSens3;
   \   0000016A   0x.... 0x....      LDR.W    R0,??DataTable18_18
   \   0000016E   0x8800             LDRH     R0,[R0, #+0]
   \   00000170   0x1C41             ADDS     R1,R0,#+1
   \   00000172   0x.... 0x....      LDR.W    R2,??DataTable18_18
   \   00000176   0x8011             STRH     R1,[R2, #+0]
   \   00000178   0x.... 0x....      LDR.W    R1,??DataTable18_19
   \   0000017C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000180   0x.... 0x....      LDR.W    R2,??DataTable18_26
   \   00000184   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000186   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   0000018A   0xF242 0x0228      MOVW     R2,#+8232
   \   0000018E   0x5211             STRH     R1,[R2, R0]
   1356          										Buffer3.bufMIC4[WaveRec_idxSens4++] = vRawSens4;
   \   00000190   0x.... 0x....      LDR.W    R0,??DataTable18_20
   \   00000194   0x8800             LDRH     R0,[R0, #+0]
   \   00000196   0x1C41             ADDS     R1,R0,#+1
   \   00000198   0x.... 0x....      LDR.W    R2,??DataTable18_20
   \   0000019C   0x8011             STRH     R1,[R2, #+0]
   \   0000019E   0x.... 0x....      LDR.W    R1,??DataTable18_21
   \   000001A2   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000001A6   0x.... 0x....      LDR.W    R2,??DataTable18_26
   \   000001AA   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001AC   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000001B0   0xF243 0x023C      MOVW     R2,#+12348
   \   000001B4   0x5211             STRH     R1,[R2, R0]
   1357          										Buffer3.bufMIC5[WaveRec_idxSens5++] = vRawSens5;
   \   000001B6   0x.... 0x....      LDR.W    R0,??DataTable18_22
   \   000001BA   0x8800             LDRH     R0,[R0, #+0]
   \   000001BC   0x1C41             ADDS     R1,R0,#+1
   \   000001BE   0x.... 0x....      LDR.W    R2,??DataTable18_22
   \   000001C2   0x8011             STRH     R1,[R2, #+0]
   \   000001C4   0x.... 0x....      LDR.W    R1,??DataTable18_23
   \   000001C8   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000001CC   0x.... 0x....      LDR.W    R2,??DataTable18_26
   \   000001D0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001D2   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000001D6   0xF244 0x0250      MOVW     R2,#+16464
   \   000001DA   0x5211             STRH     R1,[R2, R0]
   1358          										Buffer3.bufMIC6[WaveRec_idxSens6++] = vRawSens6;
   \   000001DC   0x.... 0x....      LDR.W    R0,??DataTable18_24
   \   000001E0   0x8800             LDRH     R0,[R0, #+0]
   \   000001E2   0x1C41             ADDS     R1,R0,#+1
   \   000001E4   0x.... 0x....      LDR.W    R2,??DataTable18_24
   \   000001E8   0x8011             STRH     R1,[R2, #+0]
   \   000001EA   0x.... 0x....      LDR.W    R1,??DataTable18_25
   \   000001EE   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000001F2   0x.... 0x....      LDR.W    R2,??DataTable18_26
   \   000001F6   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001F8   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000001FC   0xF245 0x0264      MOVW     R2,#+20580
   \   00000200   0x5211             STRH     R1,[R2, R0]
   1359          		
   1360          
   1361          										break;
   \   00000202   0xE06F             B.N      ??RecordUpdBuf_0
   1362          								case BUF3_PLAY:
   1363          
   1364          										Buffer1.bufMIC1[WaveRec_idxSens1++] = vRawSens1;
   \                     ??RecordUpdBuf_2: (+1)
   \   00000204   0x.... 0x....      LDR.W    R0,??DataTable18_12
   \   00000208   0x8800             LDRH     R0,[R0, #+0]
   \   0000020A   0x1C41             ADDS     R1,R0,#+1
   \   0000020C   0x.... 0x....      LDR.W    R2,??DataTable18_12
   \   00000210   0x8011             STRH     R1,[R2, #+0]
   \   00000212   0x.... 0x....      LDR.W    R1,??DataTable18_15
   \   00000216   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000021A   0x.... 0x....      LDR.W    R2,??DataTable18_27
   \   0000021E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000220   0xF822 0x1010      STRH     R1,[R2, R0, LSL #+1]
   1365          										Buffer1.bufMIC2[ WaveRec_idxSens2++] = vRawSens2;
   \   00000224   0x.... 0x....      LDR.W    R0,??DataTable18_13
   \   00000228   0x8800             LDRH     R0,[R0, #+0]
   \   0000022A   0x1C41             ADDS     R1,R0,#+1
   \   0000022C   0x.... 0x....      LDR.W    R2,??DataTable18_13
   \   00000230   0x8011             STRH     R1,[R2, #+0]
   \   00000232   0x.... 0x....      LDR.W    R1,??DataTable18_17
   \   00000236   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000023A   0x.... 0x....      LDR.W    R2,??DataTable18_27
   \   0000023E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000240   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   00000244   0xF241 0x0214      MOVW     R2,#+4116
   \   00000248   0x5211             STRH     R1,[R2, R0]
   1366          										Buffer1.bufMIC3[WaveRec_idxSens3++] = vRawSens3;
   \   0000024A   0x.... 0x....      LDR.W    R0,??DataTable18_18
   \   0000024E   0x8800             LDRH     R0,[R0, #+0]
   \   00000250   0x1C41             ADDS     R1,R0,#+1
   \   00000252   0x.... 0x....      LDR.W    R2,??DataTable18_18
   \   00000256   0x8011             STRH     R1,[R2, #+0]
   \   00000258   0x.... 0x....      LDR.W    R1,??DataTable18_19
   \   0000025C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000260   0x.... 0x....      LDR.W    R2,??DataTable18_27
   \   00000264   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000266   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   0000026A   0xF242 0x0228      MOVW     R2,#+8232
   \   0000026E   0x5211             STRH     R1,[R2, R0]
   1367          										Buffer1.bufMIC4[ WaveRec_idxSens4++] = vRawSens4;
   \   00000270   0x.... 0x....      LDR.W    R0,??DataTable18_20
   \   00000274   0x8800             LDRH     R0,[R0, #+0]
   \   00000276   0x1C41             ADDS     R1,R0,#+1
   \   00000278   0x.... 0x....      LDR.W    R2,??DataTable18_20
   \   0000027C   0x8011             STRH     R1,[R2, #+0]
   \   0000027E   0x.... 0x....      LDR.W    R1,??DataTable18_21
   \   00000282   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000286   0x.... 0x....      LDR.W    R2,??DataTable18_27
   \   0000028A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000028C   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   00000290   0xF243 0x023C      MOVW     R2,#+12348
   \   00000294   0x5211             STRH     R1,[R2, R0]
   1368          										Buffer1.bufMIC5[WaveRec_idxSens5++] = vRawSens5;
   \   00000296   0x.... 0x....      LDR.W    R0,??DataTable18_22
   \   0000029A   0x8800             LDRH     R0,[R0, #+0]
   \   0000029C   0x1C41             ADDS     R1,R0,#+1
   \   0000029E   0x.... 0x....      LDR.W    R2,??DataTable18_22
   \   000002A2   0x8011             STRH     R1,[R2, #+0]
   \   000002A4   0x.... 0x....      LDR.W    R1,??DataTable18_23
   \   000002A8   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000002AC   0x.... 0x....      LDR.W    R2,??DataTable18_27
   \   000002B0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000002B2   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000002B6   0xF244 0x0250      MOVW     R2,#+16464
   \   000002BA   0x5211             STRH     R1,[R2, R0]
   1369          										Buffer1.bufMIC6[ WaveRec_idxSens6++] = vRawSens6;
   \   000002BC   0x.... 0x....      LDR.W    R0,??DataTable18_24
   \   000002C0   0x8800             LDRH     R0,[R0, #+0]
   \   000002C2   0x1C41             ADDS     R1,R0,#+1
   \   000002C4   0x.... 0x....      LDR.W    R2,??DataTable18_24
   \   000002C8   0x8011             STRH     R1,[R2, #+0]
   \   000002CA   0x.... 0x....      LDR.W    R1,??DataTable18_25
   \   000002CE   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000002D2   0x.... 0x....      LDR.W    R2,??DataTable18_27
   \   000002D6   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000002D8   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000002DC   0xF245 0x0264      MOVW     R2,#+20580
   \   000002E0   0x5211             STRH     R1,[R2, R0]
   1370          										break;
   \   000002E2   0xE7FF             B.N      ??RecordUpdBuf_0
   1371          								default:
   1372          										break; 
   1373          					   }
   1374          				
   1375          				}
   1376                               
   1377               	}
   1378          }
   \                     ??RecordUpdBuf_4: (+1)
   \                     ??RecordUpdBuf_0: (+1)
   \   000002E4   0x4770             BX       LR               ;; return
   1379          
   1380          

   \                                 In section .text, align 2, keep-with-next
   1381          void DMA2_Stream5_IRQHandler(void)
   1382          {
   \                     DMA2_Stream5_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1383            /* USER CODE BEGIN DMA2_Stream5_IRQn 0 */
   1384          
   1385            /* USER CODE END DMA2_Stream5_IRQn 0 */
   1386            HAL_DMA_IRQHandler(&hdma_spi5_rx);
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable18_7
   \   00000006   0x.... 0x....      BL       HAL_DMA_IRQHandler
   1387            /* USER CODE BEGIN DMA2_Stream5_IRQn 1 */
   1388          
   1389            /* USER CODE END DMA2_Stream5_IRQn 1 */
   1390          }
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return
   1391          
   1392          /**
   1393          * @brief This function handles DMA2 stream6 global interrupt.
   1394          */

   \                                 In section .text, align 2, keep-with-next
   1395          void DMA2_Stream6_IRQHandler(void)
   1396          {
   \                     DMA2_Stream6_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1397            /* USER CODE BEGIN DMA2_Stream6_IRQn 0 */
   1398          
   1399            /* USER CODE END DMA2_Stream6_IRQn 0 */
   1400            HAL_DMA_IRQHandler(&hdma_spi6_rx);
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable18_10
   \   00000006   0x.... 0x....      BL       HAL_DMA_IRQHandler
   1401            /* USER CODE BEGIN DMA2_Stream6_IRQn 1 */
   1402          
   1403            /* USER CODE END DMA2_Stream6_IRQn 1 */
   1404          }
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return
   1405          

   \                                 In section .text, align 2, keep-with-next
   1406          void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
   1407          {
   \                     HAL_SPI_RxCpltCallback: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   1408              if(hspi->Instance==SPI1)
   \   00000004   0x6820             LDR      R0,[R4, #+0]
   \   00000006   0x....             LDR.N    R1,??DataTable17_5  ;; 0x40013000
   \   00000008   0x4288             CMP      R0,R1
   \   0000000A   0xD054             BEQ.N    ??HAL_SPI_RxCpltCallback_0
   1409              {
   1410                  /* Copy Data to Record Buffer */
   1411          		//RecordUpdBuf();
   1412          		//XferCplt = 1;
   1413                  //Audio_Play_Out();
   1414              }
   1415          	else if (hspi->Instance==SPI2)
   \   0000000C   0x6820             LDR      R0,[R4, #+0]
   \   0000000E   0x....             LDR.N    R1,??DataTable17_8  ;; 0x40003800
   \   00000010   0x4288             CMP      R0,R1
   \   00000012   0xD050             BEQ.N    ??HAL_SPI_RxCpltCallback_0
   1416          	{
   1417          
   1418          	}
   1419          	else if (hspi->Instance==SPI4)
   \   00000014   0x6820             LDR      R0,[R4, #+0]
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable18_3  ;; 0x40013400
   \   0000001A   0x4288             CMP      R0,R1
   \   0000001C   0xD04B             BEQ.N    ??HAL_SPI_RxCpltCallback_0
   1420              {
   1421          
   1422          	}
   1423          	else if (hspi->Instance==SPI5)
   \   0000001E   0x6820             LDR      R0,[R4, #+0]
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable18_28  ;; 0x40015000
   \   00000024   0x4288             CMP      R0,R1
   \   00000026   0xD122             BNE.N    ??HAL_SPI_RxCpltCallback_1
   1424              {
   1425                  swtSDO7^=0x01;
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable18_29
   \   0000002C   0x7800             LDRB     R0,[R0, #+0]
   \   0000002E   0xF090 0x0001      EORS     R0,R0,#0x1
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable18_29
   \   00000036   0x7008             STRB     R0,[R1, #+0]
   1426          		WaveRecord_flgSDO7Finish = 1;
   \   00000038   0x2001             MOVS     R0,#+1
   \   0000003A   0x.... 0x....      LDR.W    R1,??DataTable18_30
   \   0000003E   0x7008             STRB     R0,[R1, #+0]
   1427          		if (swtSDO7==0x01)
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable18_29
   \   00000044   0x7800             LDRB     R0,[R0, #+0]
   \   00000046   0x2801             CMP      R0,#+1
   \   00000048   0xD108             BNE.N    ??HAL_SPI_RxCpltCallback_2
   1428          		{
   1429          		    HAL_SPI_Receive_DMA(&hspi5,( uint8_t *)TestSDO7_1,4*AUDIO_OUT_BUFFER_SIZE);
   \   0000004A   0xF44F 0x5280      MOV      R2,#+4096
   \   0000004E   0x.... 0x....      LDR.W    R1,??DataTable18_31
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable18_32
   \   00000056   0x.... 0x....      BL       HAL_SPI_Receive_DMA
   \   0000005A   0xE02C             B.N      ??HAL_SPI_RxCpltCallback_0
   1430          		}
   1431          	    else
   1432          	    {
   1433          			HAL_SPI_Receive_DMA(&hspi5,( uint8_t *)TestSDO7,4*AUDIO_OUT_BUFFER_SIZE);
   \                     ??HAL_SPI_RxCpltCallback_2: (+1)
   \   0000005C   0xF44F 0x5280      MOV      R2,#+4096
   \   00000060   0x.... 0x....      LDR.W    R1,??DataTable18_33
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable18_32
   \   00000068   0x.... 0x....      BL       HAL_SPI_Receive_DMA
   \   0000006C   0xE023             B.N      ??HAL_SPI_RxCpltCallback_0
   1434          
   1435          	    }
   1436          
   1437          	}
   1438          	else if (hspi->Instance==SPI6)
   \                     ??HAL_SPI_RxCpltCallback_1: (+1)
   \   0000006E   0x6820             LDR      R0,[R4, #+0]
   \   00000070   0x.... 0x....      LDR.W    R1,??DataTable18_34  ;; 0x40015400
   \   00000074   0x4288             CMP      R0,R1
   \   00000076   0xD11E             BNE.N    ??HAL_SPI_RxCpltCallback_0
   1439              {
   1440                  swtSDO8^=0x01;
   \   00000078   0x....             LDR.N    R0,??DataTable17_1
   \   0000007A   0x7800             LDRB     R0,[R0, #+0]
   \   0000007C   0xF090 0x0001      EORS     R0,R0,#0x1
   \   00000080   0x....             LDR.N    R1,??DataTable17_1
   \   00000082   0x7008             STRB     R0,[R1, #+0]
   1441          		WaveRecord_flgSDO8Finish = 1;
   \   00000084   0x2001             MOVS     R0,#+1
   \   00000086   0x.... 0x....      LDR.W    R1,??DataTable18_35
   \   0000008A   0x7008             STRB     R0,[R1, #+0]
   1442          		if (swtSDO8==0x01)
   \   0000008C   0x....             LDR.N    R0,??DataTable17_1
   \   0000008E   0x7800             LDRB     R0,[R0, #+0]
   \   00000090   0x2801             CMP      R0,#+1
   \   00000092   0xD108             BNE.N    ??HAL_SPI_RxCpltCallback_3
   1443          		{
   1444          		    HAL_SPI_Receive_DMA(&hspi6,( uint8_t *)TestSDO8_1,4*AUDIO_OUT_BUFFER_SIZE);
   \   00000094   0xF44F 0x5280      MOV      R2,#+4096
   \   00000098   0x.... 0x....      LDR.W    R1,??DataTable18_36
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable18_37
   \   000000A0   0x.... 0x....      BL       HAL_SPI_Receive_DMA
   \   000000A4   0xE007             B.N      ??HAL_SPI_RxCpltCallback_0
   1445          		}
   1446          		else
   1447          		{
   1448          		    HAL_SPI_Receive_DMA(&hspi6,( uint8_t *)TestSDO8,4*AUDIO_OUT_BUFFER_SIZE);
   \                     ??HAL_SPI_RxCpltCallback_3: (+1)
   \   000000A6   0xF44F 0x5280      MOV      R2,#+4096
   \   000000AA   0x.... 0x....      LDR.W    R1,??DataTable18_38
   \   000000AE   0x.... 0x....      LDR.W    R0,??DataTable18_37
   \   000000B2   0x.... 0x....      BL       HAL_SPI_Receive_DMA
   1449          
   1450          		}
   1451          
   1452          	}
   1453          	else
   1454          	{
   1455          	
   1456          	}
   1457              
   1458          }
   \                     ??HAL_SPI_RxCpltCallback_0: (+1)
   \   000000B6   0xBD10             POP      {R4,PC}          ;; return
   1459          

   \                                 In section .text, align 2, keep-with-next
   1460          void PDM2PCMSDO78(void)
   1461          {
   \                     PDM2PCMSDO78: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1462          /*-------------------------------------------------------------------------------------------------------------
   1463          			  
   1464          	Sequence  Record Data					  Processing Data				  Player Data
   1465          			  
   1466          	1-------  Buffer1						  Buffer2						  Buffer3 BUF3_PLAY)
   1467          			  
   1468          	2-------  Buffer3						  Buffer1						  Buffer2 (BUF2_PLAY)		  
   1469          			  
   1470          	3-------  Buffer2						  Buffer3						  Buffer1 (BUF1_PLAY)
   1471           ---------------------------------------------------------------------------------------------------------------*/
   1472          
   1473              /* Data in Mic7 finished recording */
   1474              if (WaveRecord_flgSDO7Finish==1)
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable18_30
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x2801             CMP      R0,#+1
   \   0000000A   0xF040 0x80ED      BNE.W    ??PDM2PCMSDO78_0
   1475              {
   1476                  WaveRecord_flgSDO7Finish=0;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x.... 0x....      LDR.W    R1,??DataTable18_30
   \   00000014   0x7008             STRB     R0,[R1, #+0]
   1477          
   1478          		for (uint16_t i=0; i< 4*AUDIO_OUT_BUFFER_SIZE;i++)
   \   00000016   0x2400             MOVS     R4,#+0
   \                     ??PDM2PCMSDO78_1: (+1)
   \   00000018   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000001A   0xF5B4 0x5F80      CMP      R4,#+4096
   \   0000001E   0xDA7D             BGE.N    ??PDM2PCMSDO78_2
   1479          		{
   1480                      if(swtSDO7==0x01)
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable18_29
   \   00000024   0x7800             LDRB     R0,[R0, #+0]
   \   00000026   0x2801             CMP      R0,#+1
   \   00000028   0xD118             BNE.N    ??PDM2PCMSDO78_3
   1481                      {
   1482                        pDataMic7[i%64] =	HTONS(TestSDO7[i]);
                               ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable18_33
   \   0000002E   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000030   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   00000034   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable18_33
   \   0000003A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000003C   0xF831 0x1014      LDRH     R1,[R1, R4, LSL #+1]
   \   00000040   0x0209             LSLS     R1,R1,#+8
   \   00000042   0xEA51 0x2010      ORRS     R0,R1,R0, LSR #+8
   \   00000046   0x.... 0x....      LDR.W    R1,??DataTable18_39
   \   0000004A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000004C   0x2240             MOVS     R2,#+64
   \   0000004E   0xFB94 0xF3F2      SDIV     R3,R4,R2
   \   00000052   0xFB03 0x4312      MLS      R3,R3,R2,R4
   \   00000056   0xF821 0x0013      STRH     R0,[R1, R3, LSL #+1]
   \   0000005A   0xE017             B.N      ??PDM2PCMSDO78_4
   1483                      }
   1484          			else
   1485          			{
   1486          			   pDataMic7[i%64] = HTONS(TestSDO7_1[i]);
                 			   ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??PDM2PCMSDO78_3: (+1)
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable18_31
   \   00000060   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000062   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   00000066   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000068   0x.... 0x....      LDR.W    R1,??DataTable18_31
   \   0000006C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000006E   0xF831 0x1014      LDRH     R1,[R1, R4, LSL #+1]
   \   00000072   0x0209             LSLS     R1,R1,#+8
   \   00000074   0xEA51 0x2010      ORRS     R0,R1,R0, LSR #+8
   \   00000078   0x.... 0x....      LDR.W    R1,??DataTable18_39
   \   0000007C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000007E   0x2240             MOVS     R2,#+64
   \   00000080   0xFB94 0xF3F2      SDIV     R3,R4,R2
   \   00000084   0xFB03 0x4312      MLS      R3,R3,R2,R4
   \   00000088   0xF821 0x0013      STRH     R0,[R1, R3, LSL #+1]
   1487          
   1488          			}
   1489          
   1490          			/* PDM conversion for frame of 64 inputs, 16 outputs */
   1491          			if (i%64==63)
   \                     ??PDM2PCMSDO78_4: (+1)
   \   0000008C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000008E   0x2040             MOVS     R0,#+64
   \   00000090   0xFB94 0xF1F0      SDIV     R1,R4,R0
   \   00000094   0xFB01 0x4110      MLS      R1,R1,R0,R4
   \   00000098   0x293F             CMP      R1,#+63
   \   0000009A   0xD13D             BNE.N    ??PDM2PCMSDO78_5
   1492          			{
   1493          				/* Recording Audio Data */						 
   1494          				switch (buffer_switch)
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable18_14
   \   000000A0   0x7800             LDRB     R0,[R0, #+0]
   \   000000A2   0x2800             CMP      R0,#+0
   \   000000A4   0xD003             BEQ.N    ??PDM2PCMSDO78_6
   \   000000A6   0x2802             CMP      R0,#+2
   \   000000A8   0xD025             BEQ.N    ??PDM2PCMSDO78_7
   \   000000AA   0xD312             BCC.N    ??PDM2PCMSDO78_8
   \   000000AC   0xE034             B.N      ??PDM2PCMSDO78_9
   1495          				{
   1496          					case BUF1_PLAY:								
   1497          						PDM_Filter_64_LSB((uint8_t *)pDataMic7,(uint16_t *)(Buffer2.bufMIC7 + (i/64)*16), 64 ,
   1498          						(PDMFilter_InitStruct *)&Filter[0]);
   \                     ??PDM2PCMSDO78_6: (+1)
   \   000000AE   0x.... 0x....      LDR.W    R3,??DataTable18_40
   \   000000B2   0x2240             MOVS     R2,#+64
   \   000000B4   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000B6   0x2040             MOVS     R0,#+64
   \   000000B8   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   000000BC   0x....             LDR.N    R1,??DataTable18_16
   \   000000BE   0xEB11 0x1040      ADDS     R0,R1,R0, LSL #+5
   \   000000C2   0xF500 0x41C0      ADD      R1,R0,#+24576
   \   000000C6   0x3178             ADDS     R1,R1,#+120
   \   000000C8   0x.... 0x....      LDR.W    R0,??DataTable18_39
   \   000000CC   0x.... 0x....      BL       PDM_Filter_64_LSB
   1499          						break;
   \   000000D0   0xE022             B.N      ??PDM2PCMSDO78_5
   1500          					case BUF2_PLAY:
   1501          						PDM_Filter_64_LSB((uint8_t *)pDataMic7,(uint16_t *)(Buffer3.bufMIC7 + (i/64)*16), 64 ,
   1502          						(PDMFilter_InitStruct *)&Filter[0]);	
   \                     ??PDM2PCMSDO78_8: (+1)
   \   000000D2   0x.... 0x....      LDR.W    R3,??DataTable18_40
   \   000000D6   0x2240             MOVS     R2,#+64
   \   000000D8   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000DA   0x2040             MOVS     R0,#+64
   \   000000DC   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   000000E0   0x....             LDR.N    R1,??DataTable18_26
   \   000000E2   0xEB11 0x1040      ADDS     R0,R1,R0, LSL #+5
   \   000000E6   0xF500 0x41C0      ADD      R1,R0,#+24576
   \   000000EA   0x3178             ADDS     R1,R1,#+120
   \   000000EC   0x.... 0x....      LDR.W    R0,??DataTable18_39
   \   000000F0   0x.... 0x....      BL       PDM_Filter_64_LSB
   1503          						break;
   \   000000F4   0xE010             B.N      ??PDM2PCMSDO78_5
   1504          					case BUF3_PLAY:
   1505          						PDM_Filter_64_LSB((uint8_t *)pDataMic7,(uint16_t *)(Buffer1.bufMIC7 + (i/64)*16), 64 ,
   1506          						(PDMFilter_InitStruct *)&Filter[0]);									
   \                     ??PDM2PCMSDO78_7: (+1)
   \   000000F6   0x.... 0x....      LDR.W    R3,??DataTable18_40
   \   000000FA   0x2240             MOVS     R2,#+64
   \   000000FC   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000FE   0x2040             MOVS     R0,#+64
   \   00000100   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   00000104   0x....             LDR.N    R1,??DataTable18_27
   \   00000106   0xEB11 0x1040      ADDS     R0,R1,R0, LSL #+5
   \   0000010A   0xF500 0x41C0      ADD      R1,R0,#+24576
   \   0000010E   0x3178             ADDS     R1,R1,#+120
   \   00000110   0x....             LDR.N    R0,??DataTable18_39
   \   00000112   0x.... 0x....      BL       PDM_Filter_64_LSB
   1507          						 break;
   \   00000116   0xE7FF             B.N      ??PDM2PCMSDO78_5
   1508          					default:
   1509          						 break; 
   1510          			    }
   1511          
   1512          			}
   1513          
   1514                  }
   \                     ??PDM2PCMSDO78_9: (+1)
   \                     ??PDM2PCMSDO78_5: (+1)
   \   00000118   0x1C64             ADDS     R4,R4,#+1
   \   0000011A   0xE77D             B.N      ??PDM2PCMSDO78_1
   1515          
   1516          		/* Update for left-right channel */
   1517          		for (int16_t i=AUDIO_OUT_BUFFER_SIZE-1; i>=0;i--)
   \                     ??PDM2PCMSDO78_2: (+1)
   \   0000011C   0xF240 0x30FF      MOVW     R0,#+1023
   \                     ??PDM2PCMSDO78_10: (+1)
   \   00000120   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000122   0x2800             CMP      R0,#+0
   \   00000124   0xD460             BMI.N    ??PDM2PCMSDO78_0
   1518          		{
   1519                         /* Recording Audio Data */						 
   1520          				switch (buffer_switch)
   \   00000126   0x....             LDR.N    R1,??DataTable18_14
   \   00000128   0x7809             LDRB     R1,[R1, #+0]
   \   0000012A   0x2900             CMP      R1,#+0
   \   0000012C   0xD003             BEQ.N    ??PDM2PCMSDO78_11
   \   0000012E   0x2902             CMP      R1,#+2
   \   00000130   0xD03B             BEQ.N    ??PDM2PCMSDO78_12
   \   00000132   0xD31D             BCC.N    ??PDM2PCMSDO78_13
   \   00000134   0xE056             B.N      ??PDM2PCMSDO78_14
   1521          				{
   1522          					case BUF1_PLAY:								
   1523                                  Buffer2.bufMIC7[2*i+1]=  Buffer2.bufMIC7[i];
   \                     ??PDM2PCMSDO78_11: (+1)
   \   00000136   0x....             LDR.N    R1,??DataTable18_16
   \   00000138   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000013A   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   0000013E   0xF246 0x0278      MOVW     R2,#+24696
   \   00000142   0x5A51             LDRH     R1,[R2, R1]
   \   00000144   0x....             LDR.N    R2,??DataTable18_16
   \   00000146   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000148   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   0000014C   0xF246 0x037A      MOVW     R3,#+24698
   \   00000150   0x5299             STRH     R1,[R3, R2]
   1524          						Buffer2.bufMIC7[2*i] = Buffer2.bufMIC7[i];
   \   00000152   0x....             LDR.N    R1,??DataTable18_16
   \   00000154   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000156   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   0000015A   0xF246 0x0278      MOVW     R2,#+24696
   \   0000015E   0x5A51             LDRH     R1,[R2, R1]
   \   00000160   0x....             LDR.N    R2,??DataTable18_16
   \   00000162   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000164   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000168   0xF246 0x0378      MOVW     R3,#+24696
   \   0000016C   0x5299             STRH     R1,[R3, R2]
   1525          						break;
   \   0000016E   0xE039             B.N      ??PDM2PCMSDO78_15
   1526          					case BUF2_PLAY:
   1527          	                    Buffer3.bufMIC7[2*i+1]= Buffer3.bufMIC7[i];
   \                     ??PDM2PCMSDO78_13: (+1)
   \   00000170   0x....             LDR.N    R1,??DataTable18_26
   \   00000172   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000174   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000178   0xF246 0x0278      MOVW     R2,#+24696
   \   0000017C   0x5A51             LDRH     R1,[R2, R1]
   \   0000017E   0x....             LDR.N    R2,??DataTable18_26
   \   00000180   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000182   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000186   0xF246 0x037A      MOVW     R3,#+24698
   \   0000018A   0x5299             STRH     R1,[R3, R2]
   1528          						Buffer3.bufMIC7[2*i]= Buffer3.bufMIC7[i];;	
   \   0000018C   0x....             LDR.N    R1,??DataTable18_26
   \   0000018E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000190   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000194   0xF246 0x0278      MOVW     R2,#+24696
   \   00000198   0x5A51             LDRH     R1,[R2, R1]
   \   0000019A   0x....             LDR.N    R2,??DataTable18_26
   \   0000019C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000019E   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   000001A2   0xF246 0x0378      MOVW     R3,#+24696
   \   000001A6   0x5299             STRH     R1,[R3, R2]
   1529          						break;
   \   000001A8   0xE01C             B.N      ??PDM2PCMSDO78_15
   1530          					case BUF3_PLAY:
   1531          						Buffer1.bufMIC7[2*i+1]= Buffer1.bufMIC7[i];
   \                     ??PDM2PCMSDO78_12: (+1)
   \   000001AA   0x....             LDR.N    R1,??DataTable18_27
   \   000001AC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001AE   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   000001B2   0xF246 0x0278      MOVW     R2,#+24696
   \   000001B6   0x5A51             LDRH     R1,[R2, R1]
   \   000001B8   0x....             LDR.N    R2,??DataTable18_27
   \   000001BA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001BC   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   000001C0   0xF246 0x037A      MOVW     R3,#+24698
   \   000001C4   0x5299             STRH     R1,[R3, R2]
   1532          						Buffer1.bufMIC7[2*i]= Buffer1.bufMIC7[i];;	
   \   000001C6   0x....             LDR.N    R1,??DataTable18_27
   \   000001C8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001CA   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   000001CE   0xF246 0x0278      MOVW     R2,#+24696
   \   000001D2   0x5A51             LDRH     R1,[R2, R1]
   \   000001D4   0x....             LDR.N    R2,??DataTable18_27
   \   000001D6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001D8   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   000001DC   0xF246 0x0378      MOVW     R3,#+24696
   \   000001E0   0x5299             STRH     R1,[R3, R2]
   1533          						break;
   \   000001E2   0xE7FF             B.N      ??PDM2PCMSDO78_15
   1534          					default:
   1535          						 break; 
   1536          			    }
   1537          		}
   \                     ??PDM2PCMSDO78_14: (+1)
   \                     ??PDM2PCMSDO78_15: (+1)
   \   000001E4   0x1E40             SUBS     R0,R0,#+1
   \   000001E6   0xE79B             B.N      ??PDM2PCMSDO78_10
   1538          
   1539          	}
   1540              
   1541          
   1542          	/* Data in Mic8 finished recording */
   1543          	if (WaveRecord_flgSDO8Finish==1)
   \                     ??PDM2PCMSDO78_0: (+1)
   \   000001E8   0x....             LDR.N    R0,??DataTable18_35
   \   000001EA   0x7800             LDRB     R0,[R0, #+0]
   \   000001EC   0x2801             CMP      R0,#+1
   \   000001EE   0xF040 0x80DF      BNE.W    ??PDM2PCMSDO78_16
   1544          	{
   1545          		WaveRecord_flgSDO8Finish=0;
   \   000001F2   0x2000             MOVS     R0,#+0
   \   000001F4   0x....             LDR.N    R1,??DataTable18_35
   \   000001F6   0x7008             STRB     R0,[R1, #+0]
   1546          		
   1547          		for (uint16_t i=0; i< 4*AUDIO_OUT_BUFFER_SIZE;i++)
   \   000001F8   0x2400             MOVS     R4,#+0
   \                     ??PDM2PCMSDO78_17: (+1)
   \   000001FA   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000001FC   0xF5B4 0x5F80      CMP      R4,#+4096
   \   00000200   0xDA70             BGE.N    ??PDM2PCMSDO78_18
   1548          		{
   1549          					if(swtSDO8==0x01)
   \   00000202   0x....             LDR.N    R0,??DataTable18_41
   \   00000204   0x7800             LDRB     R0,[R0, #+0]
   \   00000206   0x2801             CMP      R0,#+1
   \   00000208   0xD115             BNE.N    ??PDM2PCMSDO78_19
   1550          					{
   1551          					  pDataMic8[i%64] = HTONS(TestSDO8[i]);
                 					  ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \   0000020A   0x....             LDR.N    R0,??DataTable18_38
   \   0000020C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000020E   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   00000212   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000214   0x....             LDR.N    R1,??DataTable18_38
   \   00000216   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000218   0xF831 0x1014      LDRH     R1,[R1, R4, LSL #+1]
   \   0000021C   0x0209             LSLS     R1,R1,#+8
   \   0000021E   0xEA51 0x2010      ORRS     R0,R1,R0, LSR #+8
   \   00000222   0x....             LDR.N    R1,??DataTable18_42
   \   00000224   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000226   0x2240             MOVS     R2,#+64
   \   00000228   0xFB94 0xF3F2      SDIV     R3,R4,R2
   \   0000022C   0xFB03 0x4312      MLS      R3,R3,R2,R4
   \   00000230   0xF821 0x0013      STRH     R0,[R1, R3, LSL #+1]
   \   00000234   0xE014             B.N      ??PDM2PCMSDO78_20
   1552          					}
   1553          					else
   1554          					{
   1555          					   pDataMic8[i%64] = HTONS(TestSDO8_1[i]);
                 					   ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??PDM2PCMSDO78_19: (+1)
   \   00000236   0x....             LDR.N    R0,??DataTable18_36
   \   00000238   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000023A   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   0000023E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000240   0x....             LDR.N    R1,??DataTable18_36
   \   00000242   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000244   0xF831 0x1014      LDRH     R1,[R1, R4, LSL #+1]
   \   00000248   0x0209             LSLS     R1,R1,#+8
   \   0000024A   0xEA51 0x2010      ORRS     R0,R1,R0, LSR #+8
   \   0000024E   0x....             LDR.N    R1,??DataTable18_42
   \   00000250   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000252   0x2240             MOVS     R2,#+64
   \   00000254   0xFB94 0xF3F2      SDIV     R3,R4,R2
   \   00000258   0xFB03 0x4312      MLS      R3,R3,R2,R4
   \   0000025C   0xF821 0x0013      STRH     R0,[R1, R3, LSL #+1]
   1556          		
   1557          					}
   1558          		
   1559          					/* PDM conversion for frame of 64 inputs, 16 outputs */
   1560          				  if (i%64==63)
   \                     ??PDM2PCMSDO78_20: (+1)
   \   00000260   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000262   0x2040             MOVS     R0,#+64
   \   00000264   0xFB94 0xF1F0      SDIV     R1,R4,R0
   \   00000268   0xFB01 0x4110      MLS      R1,R1,R0,R4
   \   0000026C   0x293F             CMP      R1,#+63
   \   0000026E   0xD137             BNE.N    ??PDM2PCMSDO78_21
   1561          				  {
   1562          						/* Recording Audio Data */						 
   1563          						switch (buffer_switch)
   \   00000270   0x....             LDR.N    R0,??DataTable18_14
   \   00000272   0x7800             LDRB     R0,[R0, #+0]
   \   00000274   0x2800             CMP      R0,#+0
   \   00000276   0xD003             BEQ.N    ??PDM2PCMSDO78_22
   \   00000278   0x2802             CMP      R0,#+2
   \   0000027A   0xD021             BEQ.N    ??PDM2PCMSDO78_23
   \   0000027C   0xD310             BCC.N    ??PDM2PCMSDO78_24
   \   0000027E   0xE02F             B.N      ??PDM2PCMSDO78_25
   1564          						{
   1565          							case BUF1_PLAY: 							
   1566          								PDM_Filter_64_LSB((uint8_t *)pDataMic8,(uint16_t *)(Buffer2.bufMIC8 + (i/64)*16), 64 ,
   1567          								(PDMFilter_InitStruct *)&Filter[1]);
   \                     ??PDM2PCMSDO78_22: (+1)
   \   00000280   0x....             LDR.N    R3,??DataTable18_43
   \   00000282   0x2240             MOVS     R2,#+64
   \   00000284   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000286   0x2040             MOVS     R0,#+64
   \   00000288   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   0000028C   0x....             LDR.N    R1,??DataTable18_16
   \   0000028E   0xEB11 0x1040      ADDS     R0,R1,R0, LSL #+5
   \   00000292   0xF500 0x41E0      ADD      R1,R0,#+28672
   \   00000296   0x318C             ADDS     R1,R1,#+140
   \   00000298   0x....             LDR.N    R0,??DataTable18_42
   \   0000029A   0x.... 0x....      BL       PDM_Filter_64_LSB
   1568          								break;
   \   0000029E   0xE01F             B.N      ??PDM2PCMSDO78_21
   1569          							case BUF2_PLAY:
   1570          								PDM_Filter_64_LSB((uint8_t *)pDataMic8,(uint16_t *)(Buffer3.bufMIC8 + (i/64)*16), 64 ,
   1571          								(PDMFilter_InitStruct *)&Filter[1]);	
   \                     ??PDM2PCMSDO78_24: (+1)
   \   000002A0   0x....             LDR.N    R3,??DataTable18_43
   \   000002A2   0x2240             MOVS     R2,#+64
   \   000002A4   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000002A6   0x2040             MOVS     R0,#+64
   \   000002A8   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   000002AC   0x....             LDR.N    R1,??DataTable18_26
   \   000002AE   0xEB11 0x1040      ADDS     R0,R1,R0, LSL #+5
   \   000002B2   0xF500 0x41E0      ADD      R1,R0,#+28672
   \   000002B6   0x318C             ADDS     R1,R1,#+140
   \   000002B8   0x....             LDR.N    R0,??DataTable18_42
   \   000002BA   0x.... 0x....      BL       PDM_Filter_64_LSB
   1572          								break;
   \   000002BE   0xE00F             B.N      ??PDM2PCMSDO78_21
   1573          							case BUF3_PLAY:
   1574          								PDM_Filter_64_LSB((uint8_t *)pDataMic8,(uint16_t *)(Buffer1.bufMIC8 + (i/64)*16), 64 ,
   1575          								(PDMFilter_InitStruct *)&Filter[1]);									
   \                     ??PDM2PCMSDO78_23: (+1)
   \   000002C0   0x....             LDR.N    R3,??DataTable18_43
   \   000002C2   0x2240             MOVS     R2,#+64
   \   000002C4   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000002C6   0x2040             MOVS     R0,#+64
   \   000002C8   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   000002CC   0x....             LDR.N    R1,??DataTable18_27
   \   000002CE   0xEB11 0x1040      ADDS     R0,R1,R0, LSL #+5
   \   000002D2   0xF500 0x41E0      ADD      R1,R0,#+28672
   \   000002D6   0x318C             ADDS     R1,R1,#+140
   \   000002D8   0x....             LDR.N    R0,??DataTable18_42
   \   000002DA   0x.... 0x....      BL       PDM_Filter_64_LSB
   1576          								 break;
   \   000002DE   0xE7FF             B.N      ??PDM2PCMSDO78_21
   1577          							default:
   1578          								 break; 
   1579          						}
   1580          		
   1581          					}
   1582          					 
   1583          		}
   \                     ??PDM2PCMSDO78_25: (+1)
   \                     ??PDM2PCMSDO78_21: (+1)
   \   000002E0   0x1C64             ADDS     R4,R4,#+1
   \   000002E2   0xE78A             B.N      ??PDM2PCMSDO78_17
   1584          
   1585          		/* Update for left-right channel */
   1586          		for (int16_t i=AUDIO_OUT_BUFFER_SIZE-1; i>=0;i--)
   \                     ??PDM2PCMSDO78_18: (+1)
   \   000002E4   0xF240 0x30FF      MOVW     R0,#+1023
   \                     ??PDM2PCMSDO78_26: (+1)
   \   000002E8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000002EA   0x2800             CMP      R0,#+0
   \   000002EC   0xD460             BMI.N    ??PDM2PCMSDO78_16
   1587          		{
   1588          			   /* Recording Audio Data */						 
   1589          				switch (buffer_switch)
   \   000002EE   0x....             LDR.N    R1,??DataTable18_14
   \   000002F0   0x7809             LDRB     R1,[R1, #+0]
   \   000002F2   0x2900             CMP      R1,#+0
   \   000002F4   0xD003             BEQ.N    ??PDM2PCMSDO78_27
   \   000002F6   0x2902             CMP      R1,#+2
   \   000002F8   0xD03B             BEQ.N    ??PDM2PCMSDO78_28
   \   000002FA   0xD31D             BCC.N    ??PDM2PCMSDO78_29
   \   000002FC   0xE056             B.N      ??PDM2PCMSDO78_30
   1590          				{
   1591          					case BUF1_PLAY: 							
   1592          						Buffer2.bufMIC8[2*i+1]=  Buffer2.bufMIC8[i];
   \                     ??PDM2PCMSDO78_27: (+1)
   \   000002FE   0x....             LDR.N    R1,??DataTable18_16
   \   00000300   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000302   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000306   0xF247 0x028C      MOVW     R2,#+28812
   \   0000030A   0x5A51             LDRH     R1,[R2, R1]
   \   0000030C   0x....             LDR.N    R2,??DataTable18_16
   \   0000030E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000310   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000314   0xF247 0x038E      MOVW     R3,#+28814
   \   00000318   0x5299             STRH     R1,[R3, R2]
   1593          						Buffer2.bufMIC8[2*i] = Buffer2.bufMIC8[i];
   \   0000031A   0x....             LDR.N    R1,??DataTable18_16
   \   0000031C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000031E   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000322   0xF247 0x028C      MOVW     R2,#+28812
   \   00000326   0x5A51             LDRH     R1,[R2, R1]
   \   00000328   0x....             LDR.N    R2,??DataTable18_16
   \   0000032A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000032C   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000330   0xF247 0x038C      MOVW     R3,#+28812
   \   00000334   0x5299             STRH     R1,[R3, R2]
   1594          						break;
   \   00000336   0xE039             B.N      ??PDM2PCMSDO78_31
   1595          					case BUF2_PLAY:
   1596          						Buffer3.bufMIC8[2*i+1]= Buffer3.bufMIC8[i];
   \                     ??PDM2PCMSDO78_29: (+1)
   \   00000338   0x....             LDR.N    R1,??DataTable18_26
   \   0000033A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000033C   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000340   0xF247 0x028C      MOVW     R2,#+28812
   \   00000344   0x5A51             LDRH     R1,[R2, R1]
   \   00000346   0x....             LDR.N    R2,??DataTable18_26
   \   00000348   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000034A   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   0000034E   0xF247 0x038E      MOVW     R3,#+28814
   \   00000352   0x5299             STRH     R1,[R3, R2]
   1597          						Buffer3.bufMIC8[2*i]= Buffer3.bufMIC8[i];;	
   \   00000354   0x....             LDR.N    R1,??DataTable18_26
   \   00000356   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000358   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   0000035C   0xF247 0x028C      MOVW     R2,#+28812
   \   00000360   0x5A51             LDRH     R1,[R2, R1]
   \   00000362   0x....             LDR.N    R2,??DataTable18_26
   \   00000364   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000366   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   0000036A   0xF247 0x038C      MOVW     R3,#+28812
   \   0000036E   0x5299             STRH     R1,[R3, R2]
   1598          						break;
   \   00000370   0xE01C             B.N      ??PDM2PCMSDO78_31
   1599          					case BUF3_PLAY:
   1600          						Buffer1.bufMIC8[2*i+1]= Buffer1.bufMIC8[i];
   \                     ??PDM2PCMSDO78_28: (+1)
   \   00000372   0x....             LDR.N    R1,??DataTable18_27
   \   00000374   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000376   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   0000037A   0xF247 0x028C      MOVW     R2,#+28812
   \   0000037E   0x5A51             LDRH     R1,[R2, R1]
   \   00000380   0x....             LDR.N    R2,??DataTable18_27
   \   00000382   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000384   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000388   0xF247 0x038E      MOVW     R3,#+28814
   \   0000038C   0x5299             STRH     R1,[R3, R2]
   1601          						Buffer1.bufMIC8[2*i]= Buffer1.bufMIC8[i];;	
   \   0000038E   0x....             LDR.N    R1,??DataTable18_27
   \   00000390   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000392   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000396   0xF247 0x028C      MOVW     R2,#+28812
   \   0000039A   0x5A51             LDRH     R1,[R2, R1]
   \   0000039C   0x....             LDR.N    R2,??DataTable18_27
   \   0000039E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000003A0   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   000003A4   0xF247 0x038C      MOVW     R3,#+28812
   \   000003A8   0x5299             STRH     R1,[R3, R2]
   1602          						break;
   \   000003AA   0xE7FF             B.N      ??PDM2PCMSDO78_31
   1603          					default:
   1604          						 break; 
   1605          				}
   1606          		}
   \                     ??PDM2PCMSDO78_30: (+1)
   \                     ??PDM2PCMSDO78_31: (+1)
   \   000003AC   0x1E40             SUBS     R0,R0,#+1
   \   000003AE   0xE79B             B.N      ??PDM2PCMSDO78_26
   1607          
   1608          
   1609          	}
   1610          
   1611          
   1612          }
   \                     ??PDM2PCMSDO78_16: (+1)
   \   000003B0   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x40023844         DC32     0x40023844

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x40023830         DC32     0x40023830

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   0x40020000         DC32     0x40020000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x........         DC32     spi1_ins

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \   00000000   0x40013000         DC32     0x40013000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_2:
   \   00000000   0x........         DC32     hi2s1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x........         DC32     ??stLR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x........         DC32     SPI1_stNipple

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \   00000000   0x........         DC32     I2S1_stPosShft

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \   00000000   0x........         DC32     vRawSens1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x40021000         DC32     0x40021000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \   00000000   0x........         DC32     ??stLROld

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \   00000000   0x........         DC32     vRawSens2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_3:
   \   00000000   0x........         DC32     iSDO12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_4:
   \   00000000   0x........         DC32     TestSDO12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_5:
   \   00000000   0x........         DC32     WaveRec_idxSens1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_6:
   \   00000000   0x........         DC32     WaveRec_idxSens2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_7:
   \   00000000   0x........         DC32     buffer_switch

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_8:
   \   00000000   0x........         DC32     Buffer2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_9:
   \   00000000   0x........         DC32     Buffer3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_10:
   \   00000000   0x........         DC32     Buffer1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_11:
   \   00000000   0x........         DC32     hi2s2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_12:
   \   00000000   0x40003800         DC32     0x40003800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_13:
   \   00000000   0x........         DC32     ??I2S2_stLR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_14:
   \   00000000   0x........         DC32     ??I2S2_stLROld

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_15:
   \   00000000   0x........         DC32     I2S2_stNipple

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_16:
   \   00000000   0x........         DC32     I2S2_stPosShft

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_17:
   \   00000000   0x........         DC32     vRawSens3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_18:
   \   00000000   0x........         DC32     vRawSens4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_19:
   \   00000000   0x........         DC32     iSDO34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_20:
   \   00000000   0x........         DC32     TestSDO34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_21:
   \   00000000   0x........         DC32     WaveRec_idxSens3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_22:
   \   00000000   0x........         DC32     WaveRec_idxSens4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_23:
   \   00000000   0x........         DC32     hspi4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_24:
   \   00000000   0x40013400         DC32     0x40013400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_25:
   \   00000000   0x........         DC32     ??Main_stLR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_26:
   \   00000000   0x........         DC32     I2S1_stNipple

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_27:
   \   00000000   0x........         DC32     SPI4_stPosShft

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_28:
   \   00000000   0x........         DC32     vRawSens5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_29:
   \   00000000   0x........         DC32     vRawSens6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_30:
   \   00000000   0x........         DC32     iSDO56

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_31:
   \   00000000   0x........         DC32     TestSDO56

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_32:
   \   00000000   0x........         DC32     WaveRec_idxSens5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_33:
   \   00000000   0x........         DC32     WaveRec_idxSens6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   0x........         DC32     ??Main_stLROld

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_1:
   \   00000000   0x........         DC32     hspi5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_2:
   \   00000000   0x40015000         DC32     0x40015000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_3:
   \   00000000   0x4001500C         DC32     0x4001500c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_4:
   \   00000000   0x........         DC32     pDataMic8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_5:
   \   00000000   0x........         DC32     idxMic8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_6:
   \   00000000   0x........         DC32     volume

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_7:
   \   00000000   0x........         DC32     Filter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_8:
   \   00000000   0x........         DC32     bufPCMSens8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_9:
   \   00000000   0x........         DC32     hspi6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_10:
   \   00000000   0x40015400         DC32     0x40015400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_11:
   \   00000000   0x4001540C         DC32     0x4001540c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_12:
   \   00000000   0x........         DC32     pDataMic7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_13:
   \   00000000   0x........         DC32     idxMic7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_14:
   \   00000000   0x........         DC32     Filter+0x34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_15:
   \   00000000   0x........         DC32     bufPCMSens7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   0x........         DC32     cntPos

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_1:
   \   00000000   0x........         DC32     TestSDO7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_2:
   \   00000000   0x........         DC32     TestSDO8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_3:
   \   00000000   0x........         DC32     swtSDO7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   0x........         DC32     cntPos7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_1:
   \   00000000   0x........         DC32     swtSDO8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_2:
   \   00000000   0x40023830         DC32     0x40023830

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_3:
   \   00000000   0x45FA0000         DC32     0x45fa0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_4:
   \   00000000   0x41200000         DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_5:
   \   00000000   0x40013000         DC32     0x40013000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_6:
   \   00000000   0x40023844         DC32     0x40023844

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_7:
   \   00000000   0x40020000         DC32     0x40020000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_8:
   \   00000000   0x40003800         DC32     0x40003800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_9:
   \   00000000   0x40023840         DC32     0x40023840

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_10:
   \   00000000   0x40020800         DC32     0x40020800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_11:
   \   00000000   0x40020400         DC32     0x40020400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   0x40003C00         DC32     0x40003c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_1:
   \   00000000   0x400260B8         DC32     0x400260b8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_2:
   \   00000000   0x........         DC32     DmaHandle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_3:
   \   00000000   0x40013400         DC32     0x40013400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_4:
   \   00000000   0x40021000         DC32     0x40021000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_5:
   \   00000000   0x40021400         DC32     0x40021400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_6:
   \   00000000   0x40026488         DC32     0x40026488

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_7:
   \   00000000   0x........         DC32     hdma_spi5_rx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_8:
   \   00000000   0x40021800         DC32     0x40021800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_9:
   \   00000000   0x400264A0         DC32     0x400264a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_10:
   \   00000000   0x........         DC32     hdma_spi6_rx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_11:
   \   00000000   0x........         DC32     WaveRecord_flgInt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_12:
   \   00000000   0x........         DC32     WaveRec_idxSens1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_13:
   \   00000000   0x........         DC32     WaveRec_idxSens2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_14:
   \   00000000   0x........         DC32     buffer_switch

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_15:
   \   00000000   0x........         DC32     vRawSens1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_16:
   \   00000000   0x........         DC32     Buffer2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_17:
   \   00000000   0x........         DC32     vRawSens2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_18:
   \   00000000   0x........         DC32     WaveRec_idxSens3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_19:
   \   00000000   0x........         DC32     vRawSens3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_20:
   \   00000000   0x........         DC32     WaveRec_idxSens4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_21:
   \   00000000   0x........         DC32     vRawSens4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_22:
   \   00000000   0x........         DC32     WaveRec_idxSens5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_23:
   \   00000000   0x........         DC32     vRawSens5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_24:
   \   00000000   0x........         DC32     WaveRec_idxSens6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_25:
   \   00000000   0x........         DC32     vRawSens6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_26:
   \   00000000   0x........         DC32     Buffer3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_27:
   \   00000000   0x........         DC32     Buffer1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_28:
   \   00000000   0x40015000         DC32     0x40015000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_29:
   \   00000000   0x........         DC32     swtSDO7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_30:
   \   00000000   0x........         DC32     WaveRecord_flgSDO7Finish

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_31:
   \   00000000   0x........         DC32     TestSDO7_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_32:
   \   00000000   0x........         DC32     hspi5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_33:
   \   00000000   0x........         DC32     TestSDO7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_34:
   \   00000000   0x40015400         DC32     0x40015400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_35:
   \   00000000   0x........         DC32     WaveRecord_flgSDO8Finish

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_36:
   \   00000000   0x........         DC32     TestSDO8_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_37:
   \   00000000   0x........         DC32     hspi6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_38:
   \   00000000   0x........         DC32     TestSDO8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_39:
   \   00000000   0x........         DC32     pDataMic7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_40:
   \   00000000   0x........         DC32     Filter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_41:
   \   00000000   0x........         DC32     swtSDO8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_42:
   \   00000000   0x........         DC32     pDataMic8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_43:
   \   00000000   0x........         DC32     Filter+0x34
   1613          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   DMA2_Stream5_IRQHandler
         8   -> HAL_DMA_IRQHandler
       8   DMA2_Stream6_IRQHandler
         8   -> HAL_DMA_IRQHandler
      32   HAL_SPI_MspInit
        32   -> HAL_DMA_DeInit
        32   -> HAL_DMA_Init
        32   -> HAL_GPIO_Init
        32   -> HAL_NVIC_EnableIRQ
        32   -> HAL_NVIC_SetPriority
       8   HAL_SPI_RxCpltCallback
         8   -> HAL_SPI_Receive_DMA
       8   I2S1_Init
         8   -> HAL_I2S_Init
       8   I2S2_Init
         8   -> HAL_I2S_Init
       8   MIC1TO6_Init
         8   -> HAL_GPIO_ReadPin
         8   -> HAL_SPI_Receive_DMA
         8   -> I2S1_Init
         8   -> I2S2_Init
         8   -> SPI4_Init
         8   -> SPI5_Init
         8   -> SPI6_Init
       8   Mic7Rec
         8   -> SPI5_Init
       8   Mic8Rec
         8   -> SPI6_Init
       8   PDM2PCMSDO78
         8   -> PDM_Filter_64_LSB
       0   RecordUpdBuf
       8   SPI1_IRQHandler
         8   -> HAL_GPIO_ReadPin
         8   -> SPI_I2S_ReceiveData
      32   SPI1_Ini
        32   -> HAL_GPIO_Init
        32   -> HAL_GPIO_WritePin
        32   -> HAL_NVIC_EnableIRQ
        32   -> HAL_NVIC_SetPriority
        32   -> HAL_SPI_Init
       8   SPI2_IRQHandler
         8   -> HAL_GPIO_ReadPin
         8   -> SPI_I2S_ReceiveData
       8   SPI4_IRQHandler
         8   -> HAL_GPIO_ReadPin
         8   -> SPI_I2S_ReceiveData
       8   SPI4_Init
         8   -> HAL_SPI_Init
       8   SPI5_IRQHandler
         8   -> PDM_Filter_64_LSB
         8   -> SPI_I2S_ReceiveData
       8   SPI5_Init
         8   -> HAL_SPI_Init
         8   -> PDM_Filter_Init
       8   SPI6_IRQHandler
         8   -> PDM_Filter_64_LSB
         8   -> SPI_I2S_ReceiveData
       8   SPI6_Init
         8   -> HAL_SPI_Init
       0   SPI_I2S_ReceiveData
       0   SPI_I2S_SendData
      16   mySPI_SendData
        16   -> SPI_I2S_ReceiveData
        16   -> SPI_I2S_SendData


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable10_2
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_2
       4  ??DataTable11_3
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_10
       4  ??DataTable12_11
       4  ??DataTable12_12
       4  ??DataTable12_13
       4  ??DataTable12_14
       4  ??DataTable12_15
       4  ??DataTable12_16
       4  ??DataTable12_17
       4  ??DataTable12_18
       4  ??DataTable12_19
       4  ??DataTable12_2
       4  ??DataTable12_20
       4  ??DataTable12_21
       4  ??DataTable12_22
       4  ??DataTable12_23
       4  ??DataTable12_24
       4  ??DataTable12_25
       4  ??DataTable12_26
       4  ??DataTable12_27
       4  ??DataTable12_28
       4  ??DataTable12_29
       4  ??DataTable12_3
       4  ??DataTable12_30
       4  ??DataTable12_31
       4  ??DataTable12_32
       4  ??DataTable12_33
       4  ??DataTable12_4
       4  ??DataTable12_5
       4  ??DataTable12_6
       4  ??DataTable12_7
       4  ??DataTable12_8
       4  ??DataTable12_9
       4  ??DataTable13
       4  ??DataTable13_1
       4  ??DataTable13_10
       4  ??DataTable13_11
       4  ??DataTable13_12
       4  ??DataTable13_13
       4  ??DataTable13_14
       4  ??DataTable13_15
       4  ??DataTable13_2
       4  ??DataTable13_3
       4  ??DataTable13_4
       4  ??DataTable13_5
       4  ??DataTable13_6
       4  ??DataTable13_7
       4  ??DataTable13_8
       4  ??DataTable13_9
       4  ??DataTable16
       4  ??DataTable16_1
       4  ??DataTable16_2
       4  ??DataTable16_3
       4  ??DataTable17
       4  ??DataTable17_1
       4  ??DataTable17_10
       4  ??DataTable17_11
       4  ??DataTable17_2
       4  ??DataTable17_3
       4  ??DataTable17_4
       4  ??DataTable17_5
       4  ??DataTable17_6
       4  ??DataTable17_7
       4  ??DataTable17_8
       4  ??DataTable17_9
       4  ??DataTable18
       4  ??DataTable18_1
       4  ??DataTable18_10
       4  ??DataTable18_11
       4  ??DataTable18_12
       4  ??DataTable18_13
       4  ??DataTable18_14
       4  ??DataTable18_15
       4  ??DataTable18_16
       4  ??DataTable18_17
       4  ??DataTable18_18
       4  ??DataTable18_19
       4  ??DataTable18_2
       4  ??DataTable18_20
       4  ??DataTable18_21
       4  ??DataTable18_22
       4  ??DataTable18_23
       4  ??DataTable18_24
       4  ??DataTable18_25
       4  ??DataTable18_26
       4  ??DataTable18_27
       4  ??DataTable18_28
       4  ??DataTable18_29
       4  ??DataTable18_3
       4  ??DataTable18_30
       4  ??DataTable18_31
       4  ??DataTable18_32
       4  ??DataTable18_33
       4  ??DataTable18_34
       4  ??DataTable18_35
       4  ??DataTable18_36
       4  ??DataTable18_37
       4  ??DataTable18_38
       4  ??DataTable18_39
       4  ??DataTable18_4
       4  ??DataTable18_40
       4  ??DataTable18_41
       4  ??DataTable18_42
       4  ??DataTable18_43
       4  ??DataTable18_5
       4  ??DataTable18_6
       4  ??DataTable18_7
       4  ??DataTable18_8
       4  ??DataTable18_9
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_2
   32928  Buffer1
   32928  Buffer2
   32928  Buffer3
      12  DMA2_Stream5_IRQHandler
      12  DMA2_Stream6_IRQHandler
     104  Filter
    1482  HAL_SPI_MspInit
     184  HAL_SPI_RxCpltCallback
      94  I2S1_Init
       2  I2S1_stNipple
       1  I2S1_stPosShft
      94  I2S2_Init
       1  I2S2_stLR
       1  I2S2_stLROld
       2  I2S2_stNipple
       1  I2S2_stPosShft
     144  MIC1TO6_Init
       1  Main_stLR
       1  Main_stLROld
       8  Mic7Rec
       8  Mic8Rec
     946  PDM2PCMSDO78
     742  RecordUpdBuf
     564  SPI1_IRQHandler
     274  SPI1_Ini
       2  SPI1_stNipple
     582  SPI2_IRQHandler
     582  SPI4_IRQHandler
     124  SPI4_Init
       1  SPI4_stPosShft
     236  SPI5_IRQHandler
     254  SPI5_Init
     224  SPI6_IRQHandler
     124  SPI6_Init
       6  SPI_I2S_ReceiveData
       6  SPI_I2S_SendData
    8192  TestSDO12
    8192  TestSDO34
    8192  TestSDO56
    8192  TestSDO7
    8192  TestSDO7_1
    8192  TestSDO8
    8192  TestSDO8_1
       1  WaveRecord_flgIni
       1  WaveRecord_flgInt
       1  WaveRecord_flgSDO7Finish
       1  WaveRecord_flgSDO8Finish
       4  bufPCMSens7
       4  bufPCMSens8
       2  cntPos
       2  cntPos7
       2  cntStrt
       2  cntTransFinish
      80  hdma_spi2_tx
      80  hdma_spi3_tx
      80  hdma_spi5_rx
      80  hdma_spi6_rx
      64  hi2s1
      64  hi2s2
     100  hspi1
     100  hspi2
     100  hspi5
     100  hspi6
       2  iSDO12
       2  iSDO34
       2  iSDO56
       2  idxMic7
       2  idxMic8
     100  mySPI_SendData
     128  pDataMic7
     128  pDataMic8
      44  pHeaderBuff
     100  spi1_ins
     100  spi2_ins
       1  stLR
       1  stLROld
       1  swtSDO7
       1  swtSDO8
       2  vRawSens1
       2  vRawSens2
       2  vRawSens3
       2  vRawSens4
       2  vRawSens5
       2  vRawSens6

 
 157 639 bytes in section .bss
   7 282 bytes in section .text
 
   7 282 bytes of CODE memory
 157 639 bytes of DATA memory

Errors: none
Warnings: 23
