###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       23/Feb/2016  17:00:05
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\Src\waverecorder.c
#    Command line =  
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\Src\waverecorder.c
#        -D USE_HAL_DRIVER -D STM32F746xx -D USE_STM32746G_DISCO -D
#        USE_IOEXPANDER -D USE_USB_FS -lC
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List
#        -lA
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List
#        -o
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_sp --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.3\arm\INC\c\DLib_Config_Full.h"
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\CMSIS\Device\ST\STM32F7xx\Include\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\STM32F7xx_HAL_Driver\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\BSP\STM32746G-Discovery\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\BSP\Components\Common\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\Log\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\Fonts\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\CPU\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_Device_Library\Core\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_HOST_Library\Core\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_HOST_Library\Class\MSC\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\Third_Party\FatFs\src\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\Third_Party\FatFs\src\drivers\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_Audio\Addons\PDM\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_Device_Library\Class\AUDIO\Inc\
#        -On --use_c++_inline --require_prototypes -I "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.3\arm\CMSIS\Include\" -D
#        ARM_MATH_CM7
#    List file    =  
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List\waverecorder.lst
#    Object file  =  
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\Obj\waverecorder.o
#
###############################################################################

D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\Src\waverecorder.c
      1          
      2          /* Includes ------------------------------------------------------------------*/
      3          #include "waverecorder.h" 

    
   ^
"D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\Inc\waverecorder.h",2  Warning[Pa050]: 
          non-native end of line sequence detected (this diagnostic is only
          issued once)
      4          #include "string.h"
      5          //#include "stm32f7xx_hal_spi.h"
      6          #include "stm32f7xx_hal.h"
      7          #include "pdm_filter.h"
      8          
      9          
     10          /* Private typedef -----------------------------------------------------------*/
     11          /* Private define ------------------------------------------------------------*/
     12          #define TOUCH_RECORD_XMIN       300
     13          #define TOUCH_RECORD_XMAX       340
     14          #define TOUCH_RECORD_YMIN       212
     15          #define TOUCH_RECORD_YMAX       252
     16          
     17          #define TOUCH_STOP_XMIN         205
     18          #define TOUCH_STOP_XMAX         245
     19          #define TOUCH_STOP_YMIN         212
     20          #define TOUCH_STOP_YMAX         252
     21          
     22          #define TOUCH_PAUSE_XMIN        125
     23          #define TOUCH_PAUSE_XMAX        149
     24          #define TOUCH_PAUSE_YMIN        212
     25          #define TOUCH_PAUSE_YMAX        252
     26          
     27          #define TOUCH_VOL_MINUS_XMIN    20
     28          #define TOUCH_VOL_MINUS_XMAX    70
     29          #define TOUCH_VOL_MINUS_YMIN    212
     30          #define TOUCH_VOL_MINUS_YMAX    252
     31          
     32          #define TOUCH_VOL_PLUS_XMIN     402
     33          #define TOUCH_VOL_PLUS_XMAX     452
     34          #define TOUCH_VOL_PLUS_YMIN     212
     35          #define TOUCH_VOL_PLUS_YMAX     252
     36          
     37          
     38          
     39          /* SPI Configuration defines */
     40          #define SPI_SCK_PIN                       GPIO_PIN_10
     41          #define SPI_SCK_GPIO_PORT                 GPIOB
     42          #define SPI_SCK_GPIO_CLK                  1
     43          #define SPI_SCK_SOURCE                    1
     44          #define SPI_SCK_AF                        GPIO_AF5_SPI2
     45          
     46          #define SPI_MOSI_PIN                      GPIO_PIN_3
     47          #define SPI_MOSI_GPIO_PORT                GPIOC
     48          #define SPI_MOSI_GPIO_CLK                 1
     49          #define SPI_MOSI_SOURCE                   1
     50          #define SPI_MOSI_AF                       GPIO_AF5_SPI2
     51          
     52          
     53          /* sop1hc */
     54          #define SPI1_SCK_PIN                       GPIO_PIN_5
     55          #define SPI1_SCK_GPIO_PORT                 GPIOA
     56          #define SPI1_SCK_GPIO_CLK                  1
     57          #define SPI1_SCK_SOURCE                    1
     58          #define SPI1_SCK_AF                        GPIO_AF5_SPI1
     59          
     60          #define SPI1_MOSI_PIN                      GPIO_PIN_7
     61          #define SPI1_MOSI_GPIO_PORT                GPIOA
     62          #define SPI1_MOSI_GPIO_CLK                 1
     63          #define SPI1_MOSI_SOURCE                   1
     64          #define SPI1_MOSI_AF                       GPIO_AF5_SPI1
     65          
     66          #define SPI1_MISO_PIN                      GPIO_PIN_6
     67          #define SPI1_MISO_GPIO_PORT                GPIOA
     68          #define SPI1_MISO_GPIO_CLK                 1
     69          #define SPI1_MISO_SOURCE                   1
     70          #define SPI1_MISO_AF                       GPIO_AF5_SPI1
     71          
     72          
     73          
     74          

   \                                 In section .bss, align 2
     75          uint16_t idxMic8=0;
   \                     idxMic8:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     76          uint16_t idxMic7=0;
   \                     idxMic7:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
     77          uint8_t pHeaderBuff[44];
   \                     pHeaderBuff:
   \   00000000                      DS8 44
     78          //uint16_t Buffer1[AUDIO_IN_PCM_BUFFER_SIZE];

   \                                 In section .bss, align 2
     79          uint16_t volatile cntTransFinish;
   \                     cntTransFinish:
   \   00000000                      DS8 2
     80          
     81          /* Private macro -------------------------------------------------------------*/
     82          /* Private variables ---------------------------------------------------------*/
     83          extern  AUDIO_IN_BufferTypeDef  stkBufferCtlRecIn,stkBuffer1, stkBuffer2;
     84          extern AUDIO_OUT_BufferTypeDef  BufferCtlPlayOut;
     85          extern uint16_t __IO idxSPI5DataBuf1, idxSPI5DataBuf2;
     86          extern WAVE_FormatTypeDef WaveFormat;
     87          extern FIL WavFile;
     88          extern AUDIO_DEMO_StateMachine AudioDemo;
     89          extern AUDIO_PLAYBACK_StateTypeDef AudioState;
     90          extern __IO uint8_t buffer_switch;
     91          extern __IO uint8_t volume;
     92          extern SPI_HandleTypeDef hspi4,hspi1;
     93          extern __IO uint16_t  WaveRec_idxSens1,WaveRec_idxSens2;
     94          extern __IO uint16_t  WaveRec_idxSens3,WaveRec_idxSens4;
     95          extern __IO uint16_t  WaveRec_idxSens5,WaveRec_idxSens6;
     96          extern __IO uint16_t  I2S2_idxTmp;
     97          extern SPI_HandleTypeDef     hspi4;
     98          extern DMA_HandleTypeDef     DmaHandle;
     99          
    100          #ifndef CS43L22_PLAY
    101          extern __IO uint8_t flgDlyUpd; 
    102          extern __IO uint32_t XferCplt;
    103          extern __IO uint16_t  idxSPI5DataBuf3;
    104          #endif
    105          

   \                                 In section .bss, align 4
    106          __IO int16_t TestSDO12[4*AUDIO_OUT_BUFFER_SIZE];
   \                     TestSDO12:
   \   00000000                      DS8 8192

   \                                 In section .bss, align 4
    107          __IO int16_t TestSDO34[4*AUDIO_OUT_BUFFER_SIZE];
   \                     TestSDO34:
   \   00000000                      DS8 8192

   \                                 In section .bss, align 4
    108          __IO int16_t TestSDO56[4*AUDIO_OUT_BUFFER_SIZE];
   \                     TestSDO56:
   \   00000000                      DS8 8192

   \                                 In section .bss, align 4
    109          __IO uint16_t TestSDO7[4*AUDIO_OUT_BUFFER_SIZE];
   \                     TestSDO7:
   \   00000000                      DS8 8192

   \                                 In section .bss, align 4
    110          __IO uint16_t TestSDO8[4*AUDIO_OUT_BUFFER_SIZE];
   \                     TestSDO8:
   \   00000000                      DS8 8192

   \                                 In section .bss, align 4
    111          __IO uint16_t TestSDO7_1[4*AUDIO_OUT_BUFFER_SIZE];
   \                     TestSDO7_1:
   \   00000000                      DS8 8192

   \                                 In section .bss, align 4
    112          __IO uint16_t TestSDO8_1[4*AUDIO_OUT_BUFFER_SIZE];
   \                     TestSDO8_1:
   \   00000000                      DS8 8192
    113          
    114          

   \                                 In section .bss, align 4
    115          SPI_HandleTypeDef hspi1,hspi2;
   \                     hspi1:
   \   00000000                      DS8 100

   \                                 In section .bss, align 4
   \                     hspi2:
   \   00000000                      DS8 100

   \                                 In section .bss, align 4
    116          SPI_HandleTypeDef spi1_ins,spi2_ins;
   \                     spi1_ins:
   \   00000000                      DS8 100

   \                                 In section .bss, align 4
   \                     spi2_ins:
   \   00000000                      DS8 100

   \                                 In section .bss, align 4
    117          I2S_HandleTypeDef hi2s1;
   \                     hi2s1:
   \   00000000                      DS8 64

   \                                 In section .bss, align 4
    118          I2S_HandleTypeDef hi2s2;
   \                     hi2s2:
   \   00000000                      DS8 64

   \                                 In section .bss, align 4
    119          SPI_HandleTypeDef hspi5,hspi6;
   \                     hspi5:
   \   00000000                      DS8 100

   \                                 In section .bss, align 4
   \                     hspi6:
   \   00000000                      DS8 100

   \                                 In section .bss, align 4
    120          DMA_HandleTypeDef hdma_spi2_tx;
   \                     hdma_spi2_tx:
   \   00000000                      DS8 80

   \                                 In section .bss, align 4
    121          DMA_HandleTypeDef hdma_spi3_tx;
   \                     hdma_spi3_tx:
   \   00000000                      DS8 80

   \                                 In section .bss, align 4
    122          DMA_HandleTypeDef     hdma_spi5_rx,hdma_spi6_rx;
   \                     hdma_spi5_rx:
   \   00000000                      DS8 80

   \                                 In section .bss, align 4
   \                     hdma_spi6_rx:
   \   00000000                      DS8 80
    123          
    124          #if USB_STREAMING

   \                                 In section .bss, align 2
    125          __IO uint16_t idxFrmPDMMic8;
   \                     idxFrmPDMMic8:
   \   00000000                      DS8 2
    126          #endif
    127          

   \                                 In section .bss, align 4
    128          uint16_t *bufPCMSens7;
   \                     bufPCMSens7:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    129          uint16_t *bufPCMSens8;
   \                     bufPCMSens8:
   \   00000000                      DS8 4

   \                                 In section .bss, align 2
    130          __IO uint16_t cntPos;
   \                     cntPos:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    131          __IO uint16_t cntPos7;
   \                     cntPos7:
   \   00000000                      DS8 2
    132          __IO static uint16_t iBuff;
    133          __IO static uint32_t uwVolume = 70;

   \                                 In section .bss, align 4
    134          __IO PDMFilter_InitStruct Filter[2];
   \                     Filter:
   \   00000000                      DS8 104

   \                                 In section .bss, align 4
    135          __IO uint16_t  pDataMic8[64];//INTERNAL_BUFF_SIZE
   \                     pDataMic8:
   \   00000000                      DS8 128

   \                                 In section .bss, align 4
    136          __IO uint16_t  pDataMic7[64];//INTERNAL_BUFF_SIZE
   \                     pDataMic7:
   \   00000000                      DS8 128

   \                                 In section .bss, align 4
    137          __IO int16_t   pPDM2PCM[16];
   \                     pPDM2PCM:
   \   00000000                      DS8 32

   \                                 In section .bss, align 2
    138          __IO uint16_t cntStrt;
   \                     cntStrt:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
    139          __IO uint8_t WaveRecord_flgInt;
   \                     WaveRecord_flgInt:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    140          uint8_t WaveRecord_flgIni;
   \                     WaveRecord_flgIni:
   \   00000000                      DS8 1
    141          

   \                                 In section .bss, align 2
    142          uint16_t vRawSens1,vRawSens2,vRawSens4,vRawSens3,vRawSens5,vRawSens6;  
   \                     vRawSens1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     vRawSens2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     vRawSens4:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     vRawSens3:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     vRawSens5:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     vRawSens6:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    143          __IO int16_t SPI1_stNipple,I2S1_stNipple, I2S2_stNipple,SPI4_stNipple;
   \                     SPI1_stNipple:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     I2S1_stNipple:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     I2S2_stNipple:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     SPI4_stNipple:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    144          __IO uint16_t iSDO12,iSDO34,iSDO56;
   \                     iSDO12:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     iSDO34:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     iSDO56:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
    145          __IO uint8_t swtSDO7,swtSDO8;
   \                     swtSDO7:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     swtSDO8:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    146          __IO uint8_t WaveRecord_flgSDO7Finish,WaveRecord_flgSDO8Finish;
   \                     WaveRecord_flgSDO7Finish:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     WaveRecord_flgSDO8Finish:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    147          __IO uint8_t I2S1_stPosShft,I2S2_stPosShft,SPI4_stPosShft;
   \                     I2S1_stPosShft:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     I2S2_stPosShft:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     SPI4_stPosShft:
   \   00000000                      DS8 1
    148          
    149          /* Private function prototypes -----------------------------------------------*/
    150          static void SPI_I2S_SendData(SPI_TypeDef* SPIx, uint16_t Data);
    151          static uint16_t SPI_I2S_ReceiveData(SPI_TypeDef* SPIx);
    152          static void I2S1_Init(void);
    153          static void I2S2_Init(void);
    154          
    155          #pragma location=SDRAM_BANK_ADDR

   \                                 In section .bss, at 0xc0000000
    156          Mic_Array_Data Buffer1;
   \                     Buffer1:
   \   00000000                      DS8 32928
    157          #pragma location= (SDRAM_BANK_ADDR+ BUFFER_SIZE_BYTE)

   \                                 In section .bss, at 0xc00080a0
    158          Mic_Array_Data Buffer2;
   \                     Buffer2:
   \   00000000                      DS8 32928
    159          #pragma location= (SDRAM_BANK_ADDR+ BUFFER_SIZE_BYTE + BUFFER_SIZE_BYTE)

   \                                 In section .bss, at 0xc0010140
    160          Mic_Array_Data Buffer3;
   \                     Buffer3:
   \   00000000                      DS8 32928
    161          

   \                                 In section .text, align 2, keep-with-next
    162          void SPI1_Ini(void)
    163          {
   \                     SPI1_Ini: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
    164            GPIO_InitTypeDef GPIO_InitStructure;
    165          
    166           
    167             	 
    168            /* Enable SCK, MOSI and MISO GPIO clocks */
    169            __HAL_RCC_SPI1_CLK_ENABLE();
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x40023844
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF450 0x5080      ORRS     R0,R0,#0x1000
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x40023844
   \   00000012   0x6008             STR      R0,[R1, #+0]
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x40023844
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0xF410 0x5080      ANDS     R0,R0,#0x1000
   \   0000001E   0x9000             STR      R0,[SP, #+0]
   \   00000020   0x9800             LDR      R0,[SP, #+0]
    170            __HAL_RCC_GPIOA_CLK_ENABLE();
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable8_1  ;; 0x40023830
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable8_1  ;; 0x40023830
   \   00000030   0x6008             STR      R0,[R1, #+0]
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable8_1  ;; 0x40023830
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   0000003C   0x9000             STR      R0,[SP, #+0]
   \   0000003E   0x9800             LDR      R0,[SP, #+0]
    171          
    172            
    173            GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
   \   00000040   0x2002             MOVS     R0,#+2
   \   00000042   0x9002             STR      R0,[SP, #+8]
    174            GPIO_InitStructure.Pull  = GPIO_PULLDOWN;
   \   00000044   0x2002             MOVS     R0,#+2
   \   00000046   0x9003             STR      R0,[SP, #+12]
    175            GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
   \   00000048   0x2003             MOVS     R0,#+3
   \   0000004A   0x9004             STR      R0,[SP, #+16]
    176          
    177            /* SPI SCK pin configuration */
    178            GPIO_InitStructure.Alternate = SPI1_SCK_AF;
   \   0000004C   0x2005             MOVS     R0,#+5
   \   0000004E   0x9005             STR      R0,[SP, #+20]
    179            GPIO_InitStructure.Pin = SPI1_SCK_PIN;
   \   00000050   0x2020             MOVS     R0,#+32
   \   00000052   0x9001             STR      R0,[SP, #+4]
    180            HAL_GPIO_Init(SPI1_SCK_GPIO_PORT,&GPIO_InitStructure);
   \   00000054   0xA901             ADD      R1,SP,#+4
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x40020000
   \   0000005A   0x.... 0x....      BL       HAL_GPIO_Init
    181          
    182            /* SPI  MOSI pin configuration */
    183            GPIO_InitStructure.Alternate = SPI1_MOSI_SOURCE;
   \   0000005E   0x2001             MOVS     R0,#+1
   \   00000060   0x9005             STR      R0,[SP, #+20]
    184            GPIO_InitStructure.Pin =  SPI1_MOSI_PIN;
   \   00000062   0x2080             MOVS     R0,#+128
   \   00000064   0x9001             STR      R0,[SP, #+4]
    185            HAL_GPIO_Init(SPI1_MOSI_GPIO_PORT, &GPIO_InitStructure);
   \   00000066   0xA901             ADD      R1,SP,#+4
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x40020000
   \   0000006C   0x.... 0x....      BL       HAL_GPIO_Init
    186          
    187            /* SPI MISO pin configuration */
    188            GPIO_InitStructure.Alternate = SPI1_MISO_SOURCE;
   \   00000070   0x2001             MOVS     R0,#+1
   \   00000072   0x9005             STR      R0,[SP, #+20]
    189            GPIO_InitStructure.Pin = SPI1_MISO_PIN;
   \   00000074   0x2040             MOVS     R0,#+64
   \   00000076   0x9001             STR      R0,[SP, #+4]
    190            HAL_GPIO_Init(SPI1_MISO_GPIO_PORT, &GPIO_InitStructure);
   \   00000078   0xA901             ADD      R1,SP,#+4
   \   0000007A   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x40020000
   \   0000007E   0x.... 0x....      BL       HAL_GPIO_Init
    191          
    192            /* SPI configuration -------------------------------------------------------*/
    193            //SPI_I2S_DeInit(SPI1);
    194            
    195            spi1_ins.Init.Direction = SPI_DIRECTION_2LINES_RXONLY;
   \   00000082   0xF44F 0x6080      MOV      R0,#+1024
   \   00000086   0x.... 0x....      LDR.W    R1,??DataTable9_1
   \   0000008A   0x6088             STR      R0,[R1, #+8]
    196            spi1_ins.Init.DataSize = SPI_DATASIZE_16BIT;
   \   0000008C   0xF44F 0x6070      MOV      R0,#+3840
   \   00000090   0x.... 0x....      LDR.W    R1,??DataTable9_1
   \   00000094   0x60C8             STR      R0,[R1, #+12]
    197            spi1_ins.Init.CLKPolarity = SPI_POLARITY_LOW;
   \   00000096   0x2000             MOVS     R0,#+0
   \   00000098   0x.... 0x....      LDR.W    R1,??DataTable9_1
   \   0000009C   0x6108             STR      R0,[R1, #+16]
    198            spi1_ins.Init.CLKPhase = SPI_PHASE_1EDGE;
   \   0000009E   0x2000             MOVS     R0,#+0
   \   000000A0   0x.... 0x....      LDR.W    R1,??DataTable9_1
   \   000000A4   0x6148             STR      R0,[R1, #+20]
    199            spi1_ins.Init.NSS = SPI_NSS_SOFT;
   \   000000A6   0xF44F 0x7000      MOV      R0,#+512
   \   000000AA   0x.... 0x....      LDR.W    R1,??DataTable9_1
   \   000000AE   0x6188             STR      R0,[R1, #+24]
    200            spi1_ins.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_64;
   \   000000B0   0x2028             MOVS     R0,#+40
   \   000000B2   0x.... 0x....      LDR.W    R1,??DataTable9_1
   \   000000B6   0x61C8             STR      R0,[R1, #+28]
    201            spi1_ins.Init.FirstBit = SPI_FIRSTBIT_MSB;
   \   000000B8   0x2000             MOVS     R0,#+0
   \   000000BA   0x.... 0x....      LDR.W    R1,??DataTable9_1
   \   000000BE   0x6208             STR      R0,[R1, #+32]
    202            spi1_ins.Init.CRCPolynomial = 7;
   \   000000C0   0x2007             MOVS     R0,#+7
   \   000000C2   0x.... 0x....      LDR.W    R1,??DataTable9_1
   \   000000C6   0x62C8             STR      R0,[R1, #+44]
    203            spi1_ins.Init.Mode = SPI_MODE_SLAVE;
   \   000000C8   0x2000             MOVS     R0,#+0
   \   000000CA   0x.... 0x....      LDR.W    R1,??DataTable9_1
   \   000000CE   0x6048             STR      R0,[R1, #+4]
    204            if(HAL_SPI_Init(&spi1_ins) != HAL_OK)
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable9_1
   \   000000D4   0x.... 0x....      BL       HAL_SPI_Init
    205            {
    206              /* Initialization Error */
    207              //Error_Handler();
    208            }
    209            
    210           
    211            GPIO_InitStructure.Pin = GPIO_PIN_3;
   \   000000D8   0x2008             MOVS     R0,#+8
   \   000000DA   0x9001             STR      R0,[SP, #+4]
    212            GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;
   \   000000DC   0x2001             MOVS     R0,#+1
   \   000000DE   0x9002             STR      R0,[SP, #+8]
    213            GPIO_InitStructure.Speed = GPIO_SPEED_FAST;
   \   000000E0   0x2002             MOVS     R0,#+2
   \   000000E2   0x9004             STR      R0,[SP, #+16]
    214            GPIO_InitStructure.Pull = GPIO_PULLUP;
   \   000000E4   0x2001             MOVS     R0,#+1
   \   000000E6   0x9003             STR      R0,[SP, #+12]
    215            //GPIO_InitStructure.Alternate 
    216            HAL_GPIO_Init(GPIOE, &GPIO_InitStructure);
   \   000000E8   0xA901             ADD      R1,SP,#+4
   \   000000EA   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x40021000
   \   000000EE   0x.... 0x....      BL       HAL_GPIO_Init
    217          
    218            /* Deselect : Chip Select high */
    219            HAL_GPIO_WritePin(GPIOE,GPIO_PIN_3,GPIO_PIN_SET);
   \   000000F2   0x2201             MOVS     R2,#+1
   \   000000F4   0x2108             MOVS     R1,#+8
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable12  ;; 0x40021000
   \   000000FA   0x.... 0x....      BL       HAL_GPIO_WritePin
    220             /* sop1hc */
    221            /* Configure the SPI interrupt priority */
    222            HAL_NVIC_SetPriority(SPI1_IRQn, INTERRUPT_PRI_SDO12, 0);
   \   000000FE   0x2200             MOVS     R2,#+0
   \   00000100   0x2100             MOVS     R1,#+0
   \   00000102   0x2023             MOVS     R0,#+35
   \   00000104   0x.... 0x....      BL       HAL_NVIC_SetPriority
    223          
    224            HAL_NVIC_EnableIRQ(SPI1_IRQn);
   \   00000108   0x2023             MOVS     R0,#+35
   \   0000010A   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
    225            //SPI_I2S_ITConfig(SPI1, SPI_I2S_IT_RXNE, ENABLE);
    226            //__HAL_SPI_ENABLE_IT(SPI1,SPI_IT_TXE);
    227          
    228            /* Enable SPI1  */
    229            //__HAL_SPI_ENABLE(SPI1);
    230          
    231          }
   \   0000010E   0xB007             ADD      SP,SP,#+28
   \   00000110   0xBD00             POP      {PC}             ;; return
    232          

   \                                 In section .text, align 2, keep-with-next
    233          void mySPI_SendData(uint8_t adress, uint8_t data)
    234          {
   \                     mySPI_SendData: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    235           
    236          while(!__HAL_SPI_GET_FLAG(&spi1_ins, SPI_FLAG_TXE)); 
   \                     ??mySPI_SendData_0: (+1)
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable9_1
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0x6880             LDR      R0,[R0, #+8]
   \   0000000E   0x0780             LSLS     R0,R0,#+30
   \   00000010   0xD5F9             BPL.N    ??mySPI_SendData_0
    237          SPI_I2S_SendData(SPI1, adress);
   \   00000012   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000014   0x0021             MOVS     R1,R4
   \   00000016   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable10  ;; 0x40013000
   \   0000001C   0x.... 0x....      BL       SPI_I2S_SendData
    238          
    239          while(!__HAL_SPI_GET_FLAG(&spi1_ins, SPI_FLAG_RXNE));
   \                     ??mySPI_SendData_1: (+1)
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable9_1
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0x6880             LDR      R0,[R0, #+8]
   \   00000028   0x07C0             LSLS     R0,R0,#+31
   \   0000002A   0xD5F9             BPL.N    ??mySPI_SendData_1
    240          SPI_I2S_ReceiveData(SPI1);
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable10  ;; 0x40013000
   \   00000030   0x.... 0x....      BL       SPI_I2S_ReceiveData
    241          
    242          while(!!__HAL_SPI_GET_FLAG(&spi1_ins, SPI_FLAG_TXE)); 
   \                     ??mySPI_SendData_2: (+1)
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable9_1
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x6880             LDR      R0,[R0, #+8]
   \   0000003C   0x0780             LSLS     R0,R0,#+30
   \   0000003E   0xD4F9             BMI.N    ??mySPI_SendData_2
    243          SPI_I2S_SendData(SPI1, data);
   \   00000040   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000042   0x0029             MOVS     R1,R5
   \   00000044   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable10  ;; 0x40013000
   \   0000004A   0x.... 0x....      BL       SPI_I2S_SendData
    244          
    245          while(!!__HAL_SPI_GET_FLAG(&spi1_ins, SPI_FLAG_RXNE));
   \                     ??mySPI_SendData_3: (+1)
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable9_1
   \   00000052   0x6800             LDR      R0,[R0, #+0]
   \   00000054   0x6880             LDR      R0,[R0, #+8]
   \   00000056   0x07C0             LSLS     R0,R0,#+31
   \   00000058   0xD4F9             BMI.N    ??mySPI_SendData_3
    246          SPI_I2S_ReceiveData(SPI1);
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable10  ;; 0x40013000
   \   0000005E   0x.... 0x....      BL       SPI_I2S_ReceiveData
    247           
    248          }
   \   00000062   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    249          
    250          /**
    251            * @brief  This function handles AUDIO_REC_SPI global interrupt request.
    252            * @param  None
    253            * @retval None
    254          */
    255          

   \                                 In section .text, align 2, keep-with-next
    256          void SPI1_IRQHandler(void)
    257          {  
   \                     SPI1_IRQHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    258                uint16_t tmpTest;
    259          	  static uint8_t stLR,stLROld;
    260          
    261          	  /* USER CODE BEGIN SPI5_IRQn 0 */
    262          	
    263          	  /* USER CODE END SPI5_IRQn 0 */
    264          	  //HAL_SPI_IRQHandler(&hspi5);
    265          	  /* USER CODE BEGIN SPI5_IRQn 1 */
    266          	
    267          	  /* USER CODE END SPI5_IRQn 1 */
    268          		/* Check if data are available in SPI Data register */
    269          	  /* SPI in mode Receiver ----------------------------------------------------*/
    270          	  if(
    271          //	     (__HAL_SPI_GET_FLAG(&hi2s1, SPI_FLAG_OVR) == RESET)&&
    272          //	     (__HAL_SPI_GET_FLAG(&hi2s1, SPI_FLAG_RXNE) != RESET)&&
    273          		 (__HAL_I2S_GET_IT_SOURCE(&hi2s1, SPI_IT_RXNE) != RESET))
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable10_1
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x6840             LDR      R0,[R0, #+4]
   \   0000000A   0x0640             LSLS     R0,R0,#+25
   \   0000000C   0xF140 0x8111      BPL.W    ??SPI1_IRQHandler_0
    274          	  {
    275          	
    276          
    277          	   tmpTest =  SPI_I2S_ReceiveData(SPI1);
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable10  ;; 0x40013000
   \   00000014   0x.... 0x....      BL       SPI_I2S_ReceiveData
   \   00000018   0x0004             MOVS     R4,R0
    278          	
    279          	   /* Left-Right Mic data */
    280          	   stLR= HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4);
   \   0000001A   0x2110             MOVS     R1,#+16
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x40020000
   \   00000020   0x.... 0x....      BL       HAL_GPIO_ReadPin
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable10_2
   \   00000028   0x7008             STRB     R0,[R1, #+0]
    281          	
    282          		if (stLR==GPIO_PIN_SET)
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable10_2
   \   0000002E   0x7800             LDRB     R0,[R0, #+0]
   \   00000030   0x2801             CMP      R0,#+1
   \   00000032   0xD11F             BNE.N    ??SPI1_IRQHandler_1
    283          		{
    284          				if (stLROld==GPIO_PIN_RESET)
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable10_3
   \   00000038   0x7800             LDRB     R0,[R0, #+0]
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD103             BNE.N    ??SPI1_IRQHandler_2
    285          				{
    286          					SPI1_stNipple = (tmpTest);
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   00000042   0x8004             STRH     R4,[R0, #+0]
   \   00000044   0xE035             B.N      ??SPI1_IRQHandler_3
    287          
    288          				}
    289          				else
    290          				{
    291          					 vRawSens1 =((tmpTest>>I2S1_stPosShft)|(SPI1_stNipple<<(SDOLEN-I2S1_stPosShft)));	
                 					 ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI1_IRQHandler_2: (+1)
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable10_5
   \   0000004A   0x7800             LDRB     R0,[R0, #+0]
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable10_4
   \   00000050   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000054   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000056   0x0022             MOVS     R2,R4
   \   00000058   0x4102             ASRS     R2,R2,R0
   \   0000005A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable10_5
   \   00000060   0x7800             LDRB     R0,[R0, #+0]
   \   00000062   0xF1D0 0x0010      RSBS     R0,R0,#+16
   \   00000066   0xFA11 0xF000      LSLS     R0,R1,R0
   \   0000006A   0x4310             ORRS     R0,R0,R2
   \   0000006C   0x.... 0x....      LDR.W    R1,??DataTable11
   \   00000070   0x8008             STRH     R0,[R1, #+0]
   \   00000072   0xE01E             B.N      ??SPI1_IRQHandler_3
    292          				   
    293          				}
    294          		}
    295          		else
    296          		{
    297          			  if (stLROld==GPIO_PIN_SET)
   \                     ??SPI1_IRQHandler_1: (+1)
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable10_3
   \   00000078   0x7800             LDRB     R0,[R0, #+0]
   \   0000007A   0x2801             CMP      R0,#+1
   \   0000007C   0xD103             BNE.N    ??SPI1_IRQHandler_4
    298          			  {
    299          				  SPI1_stNipple = (tmpTest);  
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   00000082   0x8004             STRH     R4,[R0, #+0]
   \   00000084   0xE015             B.N      ??SPI1_IRQHandler_3
    300          
    301          			  }
    302          			  else
    303          			  {
    304          				  vRawSens2 =((tmpTest>>I2S1_stPosShft)|(SPI1_stNipple<<(SDOLEN-I2S1_stPosShft)));
                 				  ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI1_IRQHandler_4: (+1)
   \   00000086   0x.... 0x....      LDR.W    R0,??DataTable10_5
   \   0000008A   0x7800             LDRB     R0,[R0, #+0]
   \   0000008C   0x.... 0x....      LDR.W    R1,??DataTable10_4
   \   00000090   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000094   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000096   0x0022             MOVS     R2,R4
   \   00000098   0x4102             ASRS     R2,R2,R0
   \   0000009A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable10_5
   \   000000A0   0x7800             LDRB     R0,[R0, #+0]
   \   000000A2   0xF1D0 0x0010      RSBS     R0,R0,#+16
   \   000000A6   0xFA11 0xF000      LSLS     R0,R1,R0
   \   000000AA   0x4310             ORRS     R0,R0,R2
   \   000000AC   0x.... 0x....      LDR.W    R1,??DataTable11_1
   \   000000B0   0x8008             STRH     R0,[R1, #+0]
    305          
    306          			  } 	
    307          		}
    308          	   
    309          	   if (iSDO12<4*AUDIO_OUT_BUFFER_SIZE)
   \                     ??SPI1_IRQHandler_3: (+1)
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   000000B6   0x8800             LDRH     R0,[R0, #+0]
   \   000000B8   0xF5B0 0x5F80      CMP      R0,#+4096
   \   000000BC   0xDA0C             BGE.N    ??SPI1_IRQHandler_5
    310          	   {
    311                     TestSDO12[iSDO12++]=tmpTest;
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   000000C2   0x8800             LDRH     R0,[R0, #+0]
   \   000000C4   0x1C41             ADDS     R1,R0,#+1
   \   000000C6   0x.... 0x....      LDR.W    R2,??DataTable11_2
   \   000000CA   0x8011             STRH     R1,[R2, #+0]
   \   000000CC   0x.... 0x....      LDR.W    R1,??DataTable11_3
   \   000000D0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000D2   0xF821 0x4010      STRH     R4,[R1, R0, LSL #+1]
   \   000000D6   0xE003             B.N      ??SPI1_IRQHandler_6
    312          	   }
    313          	   else
    314          	   {
    315                     iSDO12=0;
   \                     ??SPI1_IRQHandler_5: (+1)
   \   000000D8   0x2000             MOVS     R0,#+0
   \   000000DA   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   000000DE   0x8008             STRH     R0,[R1, #+0]
    316          	   }
    317          #if 1
    318          		if ((WaveRec_idxSens1 < (2*AUDIO_OUT_BUFFER_SIZE+1))&&(WaveRec_idxSens2 < (2*AUDIO_OUT_BUFFER_SIZE+1)))
   \                     ??SPI1_IRQHandler_6: (+1)
   \   000000E0   0x.... 0x....      LDR.W    R0,??DataTable12_1
   \   000000E4   0x8800             LDRH     R0,[R0, #+0]
   \   000000E6   0xF5B0 0x6F00      CMP      R0,#+2048
   \   000000EA   0xF300 0x8099      BGT.W    ??SPI1_IRQHandler_7
   \   000000EE   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   000000F2   0x8800             LDRH     R0,[R0, #+0]
   \   000000F4   0xF5B0 0x6F00      CMP      R0,#+2048
   \   000000F8   0xF300 0x8092      BGT.W    ??SPI1_IRQHandler_7
    319          	//			  &&(stLR!=stLROld))
    320          		{
    321          	/*-------------------------------------------------------------------------------------------------------------
    322          				  
    323          		Sequence  Record Data					  Processing Data				  Player Data
    324          				  
    325          		1-------  Buffer1						  Buffer2						  Buffer3 BUF3_PLAY)
    326          				  
    327          		2-------  Buffer3						  Buffer1						  Buffer2 (BUF2_PLAY)		  
    328          				  
    329          		3-------  Buffer2						  Buffer3						  Buffer1 (BUF1_PLAY)
    330          	 ---------------------------------------------------------------------------------------------------------------*/
    331          				  /* Recording Audio Data */						 
    332          				   switch (buffer_switch)
   \   000000FC   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   00000100   0x7800             LDRB     R0,[R0, #+0]
   \   00000102   0x2800             CMP      R0,#+0
   \   00000104   0xD003             BEQ.N    ??SPI1_IRQHandler_8
   \   00000106   0x2802             CMP      R0,#+2
   \   00000108   0xD05D             BEQ.N    ??SPI1_IRQHandler_9
   \   0000010A   0xD32E             BCC.N    ??SPI1_IRQHandler_10
   \   0000010C   0xE088             B.N      ??SPI1_IRQHandler_11
    333          				   {
    334          							case BUF1_PLAY:
    335          #if MAIN_FFT
    336          									//Data is updated to Buffer2
    337          									if ((stLR==GPIO_PIN_SET)&&(stLROld==GPIO_PIN_RESET))
    338          										Buffer2.bufMIC1[WaveRec_idxSens1++] = vRawSens1;
    339          									if ((stLR==GPIO_PIN_RESET)&&(stLROld==GPIO_PIN_SET))
    340          										Buffer2.bufMIC2[WaveRec_idxSens2++] = vRawSens2;
    341          	
    342          #else
    343                                          if (WaveRec_idxSens1<=WaveRec_idxSens2)
                                                 ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI1_IRQHandler_8: (+1)
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   00000112   0x8800             LDRH     R0,[R0, #+0]
   \   00000114   0x.... 0x....      LDR.W    R1,??DataTable12_1
   \   00000118   0x8809             LDRH     R1,[R1, #+0]
   \   0000011A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000011C   0x4288             CMP      R0,R1
   \   0000011E   0xD310             BCC.N    ??SPI1_IRQHandler_12
    344          									Buffer2.bufMIC1[WaveRec_idxSens1++] = vRawSens1;
   \   00000120   0x.... 0x....      LDR.W    R0,??DataTable12_1
   \   00000124   0x8800             LDRH     R0,[R0, #+0]
   \   00000126   0x1C41             ADDS     R1,R0,#+1
   \   00000128   0x.... 0x....      LDR.W    R2,??DataTable12_1
   \   0000012C   0x8011             STRH     R1,[R2, #+0]
   \   0000012E   0x.... 0x....      LDR.W    R1,??DataTable11
   \   00000132   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000136   0x.... 0x....      LDR.W    R2,??DataTable12_4  ;; 0xc00080a0
   \   0000013A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000013C   0xF822 0x1010      STRH     R1,[R2, R0, LSL #+1]
   \   00000140   0xE012             B.N      ??SPI1_IRQHandler_13
    345          							    else
    346          									Buffer2.bufMIC2[WaveRec_idxSens2++] = vRawSens2;									
   \                     ??SPI1_IRQHandler_12: (+1)
   \   00000142   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   00000146   0x8800             LDRH     R0,[R0, #+0]
   \   00000148   0x1C41             ADDS     R1,R0,#+1
   \   0000014A   0x.... 0x....      LDR.W    R2,??DataTable12_2
   \   0000014E   0x8011             STRH     R1,[R2, #+0]
   \   00000150   0x.... 0x....      LDR.W    R1,??DataTable11_1
   \   00000154   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000158   0x.... 0x....      LDR.W    R2,??DataTable12_4  ;; 0xc00080a0
   \   0000015C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000015E   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   00000162   0xF241 0x0214      MOVW     R2,#+4116
   \   00000166   0x5211             STRH     R1,[R2, R0]
    347          #endif
    348          	
    349          									break;
   \                     ??SPI1_IRQHandler_13: (+1)
   \   00000168   0xE05A             B.N      ??SPI1_IRQHandler_7
    350          							case BUF2_PLAY:
    351          #if MAIN_FFT
    352          									//Data is updated to Buffer3				 
    353          									if ((stLR==GPIO_PIN_SET)&&(stLROld==GPIO_PIN_RESET))
    354          										Buffer3.bufMIC1[WaveRec_idxSens1++] = vRawSens1;
    355          									if ((stLR==GPIO_PIN_RESET)&&(stLROld==GPIO_PIN_SET))
    356          										Buffer3.bufMIC2[WaveRec_idxSens2++] = vRawSens2;
    357          #else
    358                                          if (WaveRec_idxSens1<=WaveRec_idxSens2)
                                                 ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI1_IRQHandler_10: (+1)
   \   0000016A   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   0000016E   0x8800             LDRH     R0,[R0, #+0]
   \   00000170   0x.... 0x....      LDR.W    R1,??DataTable12_1
   \   00000174   0x8809             LDRH     R1,[R1, #+0]
   \   00000176   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000178   0x4288             CMP      R0,R1
   \   0000017A   0xD310             BCC.N    ??SPI1_IRQHandler_14
    359          									Buffer3.bufMIC1[WaveRec_idxSens1++] = vRawSens1;
   \   0000017C   0x.... 0x....      LDR.W    R0,??DataTable12_1
   \   00000180   0x8800             LDRH     R0,[R0, #+0]
   \   00000182   0x1C41             ADDS     R1,R0,#+1
   \   00000184   0x.... 0x....      LDR.W    R2,??DataTable12_1
   \   00000188   0x8011             STRH     R1,[R2, #+0]
   \   0000018A   0x.... 0x....      LDR.W    R1,??DataTable11
   \   0000018E   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000192   0x.... 0x....      LDR.W    R2,??DataTable12_5  ;; 0xc0010140
   \   00000196   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000198   0xF822 0x1010      STRH     R1,[R2, R0, LSL #+1]
   \   0000019C   0xE012             B.N      ??SPI1_IRQHandler_15
    360          							    else
    361          									Buffer3.bufMIC2[WaveRec_idxSens2++] = vRawSens2;	
   \                     ??SPI1_IRQHandler_14: (+1)
   \   0000019E   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   000001A2   0x8800             LDRH     R0,[R0, #+0]
   \   000001A4   0x1C41             ADDS     R1,R0,#+1
   \   000001A6   0x.... 0x....      LDR.W    R2,??DataTable12_2
   \   000001AA   0x8011             STRH     R1,[R2, #+0]
   \   000001AC   0x.... 0x....      LDR.W    R1,??DataTable11_1
   \   000001B0   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000001B4   0x.... 0x....      LDR.W    R2,??DataTable12_5  ;; 0xc0010140
   \   000001B8   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001BA   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000001BE   0xF241 0x0214      MOVW     R2,#+4116
   \   000001C2   0x5211             STRH     R1,[R2, R0]
    362          #endif
    363          									break;
   \                     ??SPI1_IRQHandler_15: (+1)
   \   000001C4   0xE02C             B.N      ??SPI1_IRQHandler_7
    364          							case BUF3_PLAY:
    365          #if MAIN_FFT
    366          	
    367          									//Data is update to Buffer1 	 
    368          									if ((stLR==GPIO_PIN_SET)&&(stLROld==GPIO_PIN_RESET))
    369          										Buffer1.bufMIC1[WaveRec_idxSens1++] = vRawSens1;
    370          									if ((stLR==GPIO_PIN_RESET)&&(stLROld==GPIO_PIN_SET))
    371          										Buffer1.bufMIC2[ WaveRec_idxSens2++] = vRawSens2;
    372          #else
    373                                          if (WaveRec_idxSens1<=WaveRec_idxSens2)
                                                 ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI1_IRQHandler_9: (+1)
   \   000001C6   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   000001CA   0x8800             LDRH     R0,[R0, #+0]
   \   000001CC   0x.... 0x....      LDR.W    R1,??DataTable12_1
   \   000001D0   0x8809             LDRH     R1,[R1, #+0]
   \   000001D2   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001D4   0x4288             CMP      R0,R1
   \   000001D6   0xD310             BCC.N    ??SPI1_IRQHandler_16
    374          									Buffer1.bufMIC1[WaveRec_idxSens1++] = vRawSens1;
   \   000001D8   0x.... 0x....      LDR.W    R0,??DataTable12_1
   \   000001DC   0x8800             LDRH     R0,[R0, #+0]
   \   000001DE   0x1C41             ADDS     R1,R0,#+1
   \   000001E0   0x.... 0x....      LDR.W    R2,??DataTable12_1
   \   000001E4   0x8011             STRH     R1,[R2, #+0]
   \   000001E6   0x.... 0x....      LDR.W    R1,??DataTable11
   \   000001EA   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000001EE   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001F0   0x0040             LSLS     R0,R0,#+1
   \   000001F2   0xF1B0 0x4080      SUBS     R0,R0,#+1073741824
   \   000001F6   0x8001             STRH     R1,[R0, #+0]
   \   000001F8   0xE011             B.N      ??SPI1_IRQHandler_17
    375          							    else
    376          									Buffer1.bufMIC2[WaveRec_idxSens2++] = vRawSens2;									
   \                     ??SPI1_IRQHandler_16: (+1)
   \   000001FA   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   000001FE   0x8800             LDRH     R0,[R0, #+0]
   \   00000200   0x1C41             ADDS     R1,R0,#+1
   \   00000202   0x.... 0x....      LDR.W    R2,??DataTable12_2
   \   00000206   0x8011             STRH     R1,[R2, #+0]
   \   00000208   0x.... 0x....      LDR.W    R1,??DataTable11_1
   \   0000020C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000210   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000212   0x0040             LSLS     R0,R0,#+1
   \   00000214   0xF1B0 0x4080      SUBS     R0,R0,#+1073741824
   \   00000218   0xF241 0x0214      MOVW     R2,#+4116
   \   0000021C   0x5211             STRH     R1,[R2, R0]
    377          #endif
    378          									break;
   \                     ??SPI1_IRQHandler_17: (+1)
   \   0000021E   0xE7FF             B.N      ??SPI1_IRQHandler_7
    379          							default:
    380          									break; 
    381          				   }
    382          			
    383          		 } 
    384          #endif		
    385          		/* Update Old value */	  
    386          		stLROld=stLR;
   \                     ??SPI1_IRQHandler_11: (+1)
   \                     ??SPI1_IRQHandler_7: (+1)
   \   00000220   0x.... 0x....      LDR.W    R0,??DataTable10_2
   \   00000224   0x7800             LDRB     R0,[R0, #+0]
   \   00000226   0x.... 0x....      LDR.W    R1,??DataTable10_3
   \   0000022A   0x7008             STRB     R0,[R1, #+0]
    387          		if(WaveRec_idxSens1 >= (2*AUDIO_OUT_BUFFER_SIZE-1))
   \   0000022C   0x.... 0x....      LDR.W    R0,??DataTable12_1
   \   00000230   0x8800             LDRH     R0,[R0, #+0]
    388          		{
    389          #ifndef CS43L22_PLAY	
    390          
    391          			
    392          #endif
    393                     }
    394          	  	}
    395          				 
    396          } 	 
   \                     ??SPI1_IRQHandler_0: (+1)
   \   00000232   0xBD10             POP      {R4,PC}          ;; return
   \   00000234                      REQUIRE Buffer2
   \   00000234                      REQUIRE Buffer3
   \   00000234                      REQUIRE Buffer1

   \                                 In section .bss, align 1
   \                     ??stLR:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??stLROld:
   \   00000000                      DS8 1
    397          
    398          
    399          
    400          
    401          /**
    402            * @brief  This function handles AUDIO_REC_SPI global interrupt request.
    403            * @param  None
    404            * @retval None
    405          */
    406          

   \                                 In section .text, align 2, keep-with-next
    407          void SPI2_IRQHandler(void)
    408          {      
   \                     SPI2_IRQHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    409              uint16_t app;
    410              static uint8_t I2S2_stLR, I2S2_stLROld;
    411          
    412            /* Check if data are available in SPI Data register */
    413             if (
    414          //	   (__HAL_SPI_GET_FLAG(&hi2s2, SPI_FLAG_OVR) == RESET)&&
    415          //   	    (__HAL_SPI_GET_FLAG(&hi2s2, SPI_FLAG_RXNE) != RESET)&&
    416             	    (__HAL_I2S_GET_IT_SOURCE(&hi2s2, SPI_IT_RXNE)!=RESET)
    417             	  )
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x6840             LDR      R0,[R0, #+4]
   \   0000000A   0x0640             LSLS     R0,R0,#+25
   \   0000000C   0xF140 0x8116      BPL.W    ??SPI2_IRQHandler_0
    418             {
    419              
    420               app = SPI_I2S_ReceiveData(SPI2);   
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable12_7  ;; 0x40003800
   \   00000014   0x.... 0x....      BL       SPI_I2S_ReceiveData
   \   00000018   0x0004             MOVS     R4,R0
    421               //SPI_I2S_SendData(SPI2, 3333);
    422          
    423          	 I2S2_stLR= HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4);
   \   0000001A   0x2110             MOVS     R1,#+16
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x40020000
   \   00000020   0x.... 0x....      BL       HAL_GPIO_ReadPin
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable12_8
   \   00000028   0x7008             STRB     R0,[R1, #+0]
    424          
    425          	 if (I2S2_stLR==GPIO_PIN_SET)
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   0000002E   0x7800             LDRB     R0,[R0, #+0]
   \   00000030   0x2801             CMP      R0,#+1
   \   00000032   0xD11F             BNE.N    ??SPI2_IRQHandler_1
    426          	 {
    427                  if (I2S2_stLROld==GPIO_PIN_SET)
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable12_9
   \   00000038   0x7800             LDRB     R0,[R0, #+0]
   \   0000003A   0x2801             CMP      R0,#+1
   \   0000003C   0xD103             BNE.N    ??SPI2_IRQHandler_2
    428                  {
    429                      I2S2_stNipple = app;           
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   00000042   0x8004             STRH     R4,[R0, #+0]
   \   00000044   0xE035             B.N      ??SPI2_IRQHandler_3
    430                  }
    431          		else
    432          		{
    433          
    434          			 vRawSens3 = ((app>>I2S2_stPosShft)|(I2S2_stNipple<<(SDOLEN-I2S2_stPosShft)));
                 			 ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI2_IRQHandler_2: (+1)
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable12_11
   \   0000004A   0x7800             LDRB     R0,[R0, #+0]
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   00000050   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000054   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000056   0x0022             MOVS     R2,R4
   \   00000058   0x4102             ASRS     R2,R2,R0
   \   0000005A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable12_11
   \   00000060   0x7800             LDRB     R0,[R0, #+0]
   \   00000062   0xF1D0 0x0010      RSBS     R0,R0,#+16
   \   00000066   0xFA11 0xF000      LSLS     R0,R1,R0
   \   0000006A   0x4310             ORRS     R0,R0,R2
   \   0000006C   0x.... 0x....      LDR.W    R1,??DataTable12_12
   \   00000070   0x8008             STRH     R0,[R1, #+0]
   \   00000072   0xE01E             B.N      ??SPI2_IRQHandler_3
    435          
    436          		}
    437          	 }
    438          	 else
    439          	 {
    440                  if (I2S2_stLROld==GPIO_PIN_RESET)
   \                     ??SPI2_IRQHandler_1: (+1)
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable12_9
   \   00000078   0x7800             LDRB     R0,[R0, #+0]
   \   0000007A   0x2800             CMP      R0,#+0
   \   0000007C   0xD103             BNE.N    ??SPI2_IRQHandler_4
    441                  {
    442                      I2S2_stNipple = app;
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   00000082   0x8004             STRH     R4,[R0, #+0]
   \   00000084   0xE015             B.N      ??SPI2_IRQHandler_3
    443          
    444                  }
    445          		else
    446          		{
    447                      vRawSens4 =((app>>I2S2_stPosShft)|(I2S2_stNipple<<(SDOLEN-I2S2_stPosShft)));
                             ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI2_IRQHandler_4: (+1)
   \   00000086   0x.... 0x....      LDR.W    R0,??DataTable12_11
   \   0000008A   0x7800             LDRB     R0,[R0, #+0]
   \   0000008C   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   00000090   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000094   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000096   0x0022             MOVS     R2,R4
   \   00000098   0x4102             ASRS     R2,R2,R0
   \   0000009A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable12_11
   \   000000A0   0x7800             LDRB     R0,[R0, #+0]
   \   000000A2   0xF1D0 0x0010      RSBS     R0,R0,#+16
   \   000000A6   0xFA11 0xF000      LSLS     R0,R1,R0
   \   000000AA   0x4310             ORRS     R0,R0,R2
   \   000000AC   0x.... 0x....      LDR.W    R1,??DataTable12_13
   \   000000B0   0x8008             STRH     R0,[R1, #+0]
    448          		
    449          		}
    450          	 }
    451          
    452          	 	if (iSDO34<4*AUDIO_OUT_BUFFER_SIZE)
   \                     ??SPI2_IRQHandler_3: (+1)
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable12_14
   \   000000B6   0x8800             LDRH     R0,[R0, #+0]
   \   000000B8   0xF5B0 0x5F80      CMP      R0,#+4096
   \   000000BC   0xDA0C             BGE.N    ??SPI2_IRQHandler_5
    453          	   {
    454                     TestSDO34[iSDO34++]=app;
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable12_14
   \   000000C2   0x8800             LDRH     R0,[R0, #+0]
   \   000000C4   0x1C41             ADDS     R1,R0,#+1
   \   000000C6   0x.... 0x....      LDR.W    R2,??DataTable12_14
   \   000000CA   0x8011             STRH     R1,[R2, #+0]
   \   000000CC   0x.... 0x....      LDR.W    R1,??DataTable12_15
   \   000000D0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000D2   0xF821 0x4010      STRH     R4,[R1, R0, LSL #+1]
   \   000000D6   0xE003             B.N      ??SPI2_IRQHandler_6
    455          	   }
    456          	   else
    457          	   {
    458                     iSDO34=0;
   \                     ??SPI2_IRQHandler_5: (+1)
   \   000000D8   0x2000             MOVS     R0,#+0
   \   000000DA   0x.... 0x....      LDR.W    R1,??DataTable12_14
   \   000000DE   0x8008             STRH     R0,[R1, #+0]
    459          	   }
    460          	 
    461          #if 1
    462          	 if ((WaveRec_idxSens3 < (2*AUDIO_OUT_BUFFER_SIZE+1))&&(WaveRec_idxSens4 < (2*AUDIO_OUT_BUFFER_SIZE+1)))
   \                     ??SPI2_IRQHandler_6: (+1)
   \   000000E0   0x.... 0x....      LDR.W    R0,??DataTable12_16
   \   000000E4   0x8800             LDRH     R0,[R0, #+0]
   \   000000E6   0xF5B0 0x6F00      CMP      R0,#+2048
   \   000000EA   0xF300 0x80A1      BGT.W    ??SPI2_IRQHandler_7
   \   000000EE   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   000000F2   0x8800             LDRH     R0,[R0, #+0]
   \   000000F4   0xF5B0 0x6F00      CMP      R0,#+2048
   \   000000F8   0xF300 0x809A      BGT.W    ??SPI2_IRQHandler_7
    463          //             &&(I2S2_stLR!=I2S2_stLROld))
    464          	 {
    465          /*-------------------------------------------------------------------------------------------------------------
    466          			  
    467          	Sequence  Record Data                     Processing Data                 Player Data
    468          			  
    469          	1-------  Buffer1                         Buffer2                         Buffer3 (BUF3_PLAY)
    470          			  
    471          	2-------  Buffer3                         Buffer1                         Buffer2 (BUF2_PLAY)		  
    472          			  
    473          	3-------  Buffer2                         Buffer3                         Buffer1 (BUF1_PLAY)
    474           ---------------------------------------------------------------------------------------------------------------*/
    475          		/* Recording Audio Data */			             
    476          		 switch (buffer_switch)
   \   000000FC   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   00000100   0x7800             LDRB     R0,[R0, #+0]
   \   00000102   0x2800             CMP      R0,#+0
   \   00000104   0xD003             BEQ.N    ??SPI2_IRQHandler_8
   \   00000106   0x2802             CMP      R0,#+2
   \   00000108   0xD063             BEQ.N    ??SPI2_IRQHandler_9
   \   0000010A   0xD331             BCC.N    ??SPI2_IRQHandler_10
   \   0000010C   0xE090             B.N      ??SPI2_IRQHandler_11
    477          		 {
    478          			  case BUF1_PLAY:
    479          				  //Data is updated to Buffer2
    480          				  //PDM_Filter_64_LSB((uint8_t *)InternalBuffer, (uint16_t *)(buffer2+cntPos*PCM_OUT_SIZE), volume , (PDMFilter_InitStruct *)&Filter[0]);
    481          #if MAIN_FFT
    482          				  if ((I2S2_stLR==GPIO_PIN_SET)&&(I2S2_stLROld==GPIO_PIN_RESET))
    483          				      Buffer2.bufMIC3[WaveRec_idxSens3++] = vRawSens3;
    484          				  if ((I2S2_stLR==GPIO_PIN_RESET)&&(I2S2_stLROld==GPIO_PIN_SET))
    485          				      Buffer2.bufMIC4[WaveRec_idxSens4++] = vRawSens4;
    486          #else
    487                            if (WaveRec_idxSens3<=WaveRec_idxSens4) 
                                   ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI2_IRQHandler_8: (+1)
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   00000112   0x8800             LDRH     R0,[R0, #+0]
   \   00000114   0x.... 0x....      LDR.W    R1,??DataTable12_16
   \   00000118   0x8809             LDRH     R1,[R1, #+0]
   \   0000011A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000011C   0x4288             CMP      R0,R1
   \   0000011E   0xD313             BCC.N    ??SPI2_IRQHandler_12
    488                                Buffer2.bufMIC3[WaveRec_idxSens3++] = vRawSens3;
   \   00000120   0x.... 0x....      LDR.W    R0,??DataTable12_16
   \   00000124   0x8800             LDRH     R0,[R0, #+0]
   \   00000126   0x1C41             ADDS     R1,R0,#+1
   \   00000128   0x.... 0x....      LDR.W    R2,??DataTable12_16
   \   0000012C   0x8011             STRH     R1,[R2, #+0]
   \   0000012E   0x.... 0x....      LDR.W    R1,??DataTable12_12
   \   00000132   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000136   0x.... 0x....      LDR.W    R2,??DataTable12_4  ;; 0xc00080a0
   \   0000013A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000013C   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   00000140   0xF242 0x0228      MOVW     R2,#+8232
   \   00000144   0x5211             STRH     R1,[R2, R0]
   \   00000146   0xE012             B.N      ??SPI2_IRQHandler_13
    489          				  else
    490                                Buffer2.bufMIC4[WaveRec_idxSens4++] = vRawSens4;			  
   \                     ??SPI2_IRQHandler_12: (+1)
   \   00000148   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   0000014C   0x8800             LDRH     R0,[R0, #+0]
   \   0000014E   0x1C41             ADDS     R1,R0,#+1
   \   00000150   0x.... 0x....      LDR.W    R2,??DataTable12_17
   \   00000154   0x8011             STRH     R1,[R2, #+0]
   \   00000156   0x.... 0x....      LDR.W    R1,??DataTable12_13
   \   0000015A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000015E   0x.... 0x....      LDR.W    R2,??DataTable12_4  ;; 0xc00080a0
   \   00000162   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000164   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   00000168   0xF243 0x023C      MOVW     R2,#+12348
   \   0000016C   0x5211             STRH     R1,[R2, R0]
    491          #endif 
    492          				  break;
   \                     ??SPI2_IRQHandler_13: (+1)
   \   0000016E   0xE05F             B.N      ??SPI2_IRQHandler_7
    493          			  case BUF2_PLAY:
    494          				  //Data is updated to Buffer3
    495          				  //PDM_Filter_64_LSB((uint8_t *)InternalBuffer, (uint16_t *)(buffer3+cntPos*PCM_OUT_SIZE), volume , (PDMFilter_InitStruct *)&Filter[0]);
    496          #if MAIN_FFT
    497          				  if ((I2S2_stLR==GPIO_PIN_SET)&&(I2S2_stLROld==GPIO_PIN_RESET))
    498          				      Buffer3.bufMIC3[WaveRec_idxSens3++] = vRawSens3;
    499          				  if ((I2S2_stLR==GPIO_PIN_RESET)&&(I2S2_stLROld==GPIO_PIN_SET))
    500          				      Buffer3.bufMIC4[WaveRec_idxSens4++] = vRawSens4;
    501          #else
    502                            if (WaveRec_idxSens3<=WaveRec_idxSens4) 
                                   ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI2_IRQHandler_10: (+1)
   \   00000170   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   00000174   0x8800             LDRH     R0,[R0, #+0]
   \   00000176   0x.... 0x....      LDR.W    R1,??DataTable12_16
   \   0000017A   0x8809             LDRH     R1,[R1, #+0]
   \   0000017C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000017E   0x4288             CMP      R0,R1
   \   00000180   0xD313             BCC.N    ??SPI2_IRQHandler_14
    503                                Buffer3.bufMIC3[WaveRec_idxSens3++] = vRawSens3;
   \   00000182   0x.... 0x....      LDR.W    R0,??DataTable12_16
   \   00000186   0x8800             LDRH     R0,[R0, #+0]
   \   00000188   0x1C41             ADDS     R1,R0,#+1
   \   0000018A   0x.... 0x....      LDR.W    R2,??DataTable12_16
   \   0000018E   0x8011             STRH     R1,[R2, #+0]
   \   00000190   0x.... 0x....      LDR.W    R1,??DataTable12_12
   \   00000194   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000198   0x.... 0x....      LDR.W    R2,??DataTable12_5  ;; 0xc0010140
   \   0000019C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000019E   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000001A2   0xF242 0x0228      MOVW     R2,#+8232
   \   000001A6   0x5211             STRH     R1,[R2, R0]
   \   000001A8   0xE012             B.N      ??SPI2_IRQHandler_15
    504          				  else
    505                                Buffer3.bufMIC4[WaveRec_idxSens4++] = vRawSens4;			   
   \                     ??SPI2_IRQHandler_14: (+1)
   \   000001AA   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   000001AE   0x8800             LDRH     R0,[R0, #+0]
   \   000001B0   0x1C41             ADDS     R1,R0,#+1
   \   000001B2   0x.... 0x....      LDR.W    R2,??DataTable12_17
   \   000001B6   0x8011             STRH     R1,[R2, #+0]
   \   000001B8   0x.... 0x....      LDR.W    R1,??DataTable12_13
   \   000001BC   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000001C0   0x.... 0x....      LDR.W    R2,??DataTable12_5  ;; 0xc0010140
   \   000001C4   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001C6   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000001CA   0xF243 0x023C      MOVW     R2,#+12348
   \   000001CE   0x5211             STRH     R1,[R2, R0]
    506          #endif
    507          				  break;
   \                     ??SPI2_IRQHandler_15: (+1)
   \   000001D0   0xE02E             B.N      ??SPI2_IRQHandler_7
    508          			  case BUF3_PLAY:
    509          				  //Data is update to Buffer1
    510          				  //PDM_Filter_64_LSB((uint8_t *)InternalBuffer, (uint16_t *)(buffer1+cntPos*PCM_OUT_SIZE), volume , (PDMFilter_InitStruct *)&Filter[0]);
    511          #if MAIN_FFT
    512          				  if ((I2S2_stLR==GPIO_PIN_SET)&&(I2S2_stLROld==GPIO_PIN_RESET))
    513               				  Buffer1.bufMIC3[WaveRec_idxSens3++] = vRawSens3;
    514            				  if ((I2S2_stLR==GPIO_PIN_RESET)&&(I2S2_stLROld==GPIO_PIN_SET))
    515               				  Buffer1.bufMIC4[ WaveRec_idxSens4++] = vRawSens4;
    516          #else
    517                            if (WaveRec_idxSens3<=WaveRec_idxSens4) 
                                   ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI2_IRQHandler_9: (+1)
   \   000001D2   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   000001D6   0x8800             LDRH     R0,[R0, #+0]
   \   000001D8   0x.... 0x....      LDR.W    R1,??DataTable12_16
   \   000001DC   0x8809             LDRH     R1,[R1, #+0]
   \   000001DE   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001E0   0x4288             CMP      R0,R1
   \   000001E2   0xD312             BCC.N    ??SPI2_IRQHandler_16
    518                                Buffer1.bufMIC3[WaveRec_idxSens3++] = vRawSens3;
   \   000001E4   0x.... 0x....      LDR.W    R0,??DataTable12_16
   \   000001E8   0x8800             LDRH     R0,[R0, #+0]
   \   000001EA   0x1C41             ADDS     R1,R0,#+1
   \   000001EC   0x.... 0x....      LDR.W    R2,??DataTable12_16
   \   000001F0   0x8011             STRH     R1,[R2, #+0]
   \   000001F2   0x.... 0x....      LDR.W    R1,??DataTable12_12
   \   000001F6   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000001FA   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001FC   0x0040             LSLS     R0,R0,#+1
   \   000001FE   0xF1B0 0x4080      SUBS     R0,R0,#+1073741824
   \   00000202   0xF242 0x0228      MOVW     R2,#+8232
   \   00000206   0x5211             STRH     R1,[R2, R0]
   \   00000208   0xE011             B.N      ??SPI2_IRQHandler_17
    519          				  else
    520                                Buffer1.bufMIC4[WaveRec_idxSens4++] = vRawSens4;
   \                     ??SPI2_IRQHandler_16: (+1)
   \   0000020A   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   0000020E   0x8800             LDRH     R0,[R0, #+0]
   \   00000210   0x1C41             ADDS     R1,R0,#+1
   \   00000212   0x.... 0x....      LDR.W    R2,??DataTable12_17
   \   00000216   0x8011             STRH     R1,[R2, #+0]
   \   00000218   0x.... 0x....      LDR.W    R1,??DataTable12_13
   \   0000021C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000220   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000222   0x0040             LSLS     R0,R0,#+1
   \   00000224   0xF1B0 0x4080      SUBS     R0,R0,#+1073741824
   \   00000228   0xF243 0x023C      MOVW     R2,#+12348
   \   0000022C   0x5211             STRH     R1,[R2, R0]
    521          
    522          
    523          #endif
    524          				  break;
   \                     ??SPI2_IRQHandler_17: (+1)
   \   0000022E   0xE7FF             B.N      ??SPI2_IRQHandler_7
    525          			  default:
    526          				  break; 
    527          		 }
    528          		
    529          	 }          
    530          #endif		  
    531          	 I2S2_stLROld = I2S2_stLR;
   \                     ??SPI2_IRQHandler_11: (+1)
   \                     ??SPI2_IRQHandler_7: (+1)
   \   00000230   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   00000234   0x7800             LDRB     R0,[R0, #+0]
   \   00000236   0x.... 0x....      LDR.W    R1,??DataTable12_9
   \   0000023A   0x7008             STRB     R0,[R1, #+0]
    532          
    533             }
    534          
    535          }
   \                     ??SPI2_IRQHandler_0: (+1)
   \   0000023C   0xBD10             POP      {R4,PC}          ;; return
   \   0000023E                      REQUIRE Buffer2
   \   0000023E                      REQUIRE Buffer3
   \   0000023E                      REQUIRE Buffer1

   \                                 In section .bss, align 1
   \                     ??I2S2_stLR:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??I2S2_stLROld:
   \   00000000                      DS8 1
    536          
    537          

   \                                 In section .text, align 2, keep-with-next
    538          void SPI4_IRQHandler(void)
    539          {
   \                     SPI4_IRQHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    540            static uint8_t Main_stLR, Main_stLROld;
    541          
    542          
    543          
    544            /* USER CODE BEGIN SPI5_IRQn 0 */
    545          
    546            /* USER CODE END SPI5_IRQn 0 */
    547            //HAL_SPI_IRQHandler(&hspi5);
    548            /* USER CODE BEGIN SPI5_IRQn 1 */
    549          
    550            /* USER CODE END SPI5_IRQn 1 */
    551              /* Check if data are available in SPI Data register */
    552            /* SPI in mode Receiver ----------------------------------------------------*/
    553            if(
    554          //    (__HAL_SPI_GET_FLAG(&hspi4, SPI_FLAG_OVR) == RESET)&&
    555          //    (__HAL_SPI_GET_FLAG(&hspi4, SPI_FLAG_RXNE) != RESET)&&
    556               (__HAL_SPI_GET_IT_SOURCE(&hspi4, SPI_IT_RXNE) != RESET))
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable12_18
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x6840             LDR      R0,[R0, #+4]
   \   0000000A   0x0640             LSLS     R0,R0,#+25
   \   0000000C   0xF140 0x8176      BPL.W    ??SPI4_IRQHandler_0
    557            {
    558          
    559                  uint16_t test;
    560                  test =  SPI_I2S_ReceiveData(SPI4);
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable12_19  ;; 0x40013400
   \   00000014   0x.... 0x....      BL       SPI_I2S_ReceiveData
   \   00000018   0x0004             MOVS     R4,R0
    561          
    562                  /* Left-Right Mic data */
    563                  Main_stLR= HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4);
   \   0000001A   0x2110             MOVS     R1,#+16
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x40020000
   \   00000020   0x.... 0x....      BL       HAL_GPIO_ReadPin
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable12_20
   \   00000028   0x7008             STRB     R0,[R1, #+0]
    564          
    565                  /* STM32F746 read data from STA321MP, the data is shifted few bit     */
    566                  /* Data from STA321MP is 32bit formart                                */
    567                  /* SPI is just able to read 16 bit format                             */
    568                  /* Therefore, it needs to correct                                     */
    569                  
    570                  /* ---------------------------+++++++++++++++++++++++++++++++---------*/
    571                  /*                  ______DATAL_____              ______DATAR_____    */
    572                  /*                  _____vRawSens5__              ______vRawSens6_    */       
    573          	if (Main_stLR==GPIO_PIN_SET)
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable12_20
   \   0000002E   0x7800             LDRB     R0,[R0, #+0]
   \   00000030   0x2801             CMP      R0,#+1
   \   00000032   0xF040 0x80A4      BNE.W    ??SPI4_IRQHandler_1
    574          	{
    575                      if (Main_stLROld==GPIO_PIN_SET)
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable12_21
   \   0000003A   0x7800             LDRB     R0,[R0, #+0]
   \   0000003C   0x2801             CMP      R0,#+1
   \   0000003E   0xD103             BNE.N    ??SPI4_IRQHandler_2
    576                      {
    577                         SPI4_stNipple = (test);    
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable12_22
   \   00000044   0x8004             STRH     R4,[R0, #+0]
   \   00000046   0xE13C             B.N      ??SPI4_IRQHandler_3
    578                      }
    579                      else
    580                      {
    581                         vRawSens5 =((test>>SPI4_stPosShft)|(SPI4_stNipple<<(SDOLEN-SPI4_stPosShft)));	
                                ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI4_IRQHandler_2: (+1)
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable12_23
   \   0000004C   0x7800             LDRB     R0,[R0, #+0]
   \   0000004E   0x.... 0x....      LDR.W    R1,??DataTable12_22
   \   00000052   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000056   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000058   0x0022             MOVS     R2,R4
   \   0000005A   0x4102             ASRS     R2,R2,R0
   \   0000005C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable12_23
   \   00000062   0x7800             LDRB     R0,[R0, #+0]
   \   00000064   0xF1D0 0x0010      RSBS     R0,R0,#+16
   \   00000068   0xFA11 0xF000      LSLS     R0,R1,R0
   \   0000006C   0x4310             ORRS     R0,R0,R2
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable12_24
   \   00000072   0x8008             STRH     R0,[R1, #+0]
    582                         if (WaveRec_idxSens5 < (2*AUDIO_OUT_BUFFER_SIZE+2))
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable12_25
   \   00000078   0x8800             LDRH     R0,[R0, #+0]
   \   0000007A   0xF640 0x0102      MOVW     R1,#+2050
   \   0000007E   0x4288             CMP      R0,R1
   \   00000080   0xF280 0x811F      BGE.W    ??SPI4_IRQHandler_3
    583                         {
    584                              /*-------------------------------------------------------------------------------------------------------------                                             
    585                              Sequence  Record Data                     Processing Data                 Player Data
    586                                                
    587                              1-------  Buffer1                         Buffer2                         Buffer3 BUF3_PLAY)
    588                                                
    589                              2-------  Buffer3                         Buffer1                         Buffer2 (BUF2_PLAY)		  
    590                                                
    591                              3-------  Buffer2                         Buffer3                         Buffer1 (BUF1_PLAY)
    592                               ---------------------------------------------------------------------------------------------------------------*/                     
    593                               /* Recording Audio Data */			             
    594                               switch (buffer_switch)
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   00000088   0x7800             LDRB     R0,[R0, #+0]
   \   0000008A   0x2800             CMP      R0,#+0
   \   0000008C   0xD003             BEQ.N    ??SPI4_IRQHandler_4
   \   0000008E   0x2802             CMP      R0,#+2
   \   00000090   0xD04F             BEQ.N    ??SPI4_IRQHandler_5
   \   00000092   0xD327             BCC.N    ??SPI4_IRQHandler_6
   \   00000094   0xE072             B.N      ??SPI4_IRQHandler_7
    595                               {
    596                                   case BUF1_PLAY:
    597                                       Buffer2.bufMIC5[WaveRec_idxSens5++] = vRawSens5;
   \                     ??SPI4_IRQHandler_4: (+1)
   \   00000096   0x.... 0x....      LDR.W    R0,??DataTable12_25
   \   0000009A   0x8800             LDRH     R0,[R0, #+0]
   \   0000009C   0x1C41             ADDS     R1,R0,#+1
   \   0000009E   0x.... 0x....      LDR.W    R2,??DataTable12_25
   \   000000A2   0x8011             STRH     R1,[R2, #+0]
   \   000000A4   0x.... 0x....      LDR.W    R1,??DataTable12_24
   \   000000A8   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000000AC   0x.... 0x....      LDR.W    R2,??DataTable12_4  ;; 0xc00080a0
   \   000000B0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000B2   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000000B6   0xF244 0x0250      MOVW     R2,#+16464
   \   000000BA   0x5211             STRH     R1,[R2, R0]
    598                                       Buffer2.bufMIC5[WaveRec_idxSens5++] = vRawSens5;
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable12_25
   \   000000C0   0x8800             LDRH     R0,[R0, #+0]
   \   000000C2   0x1C41             ADDS     R1,R0,#+1
   \   000000C4   0x.... 0x....      LDR.W    R2,??DataTable12_25
   \   000000C8   0x8011             STRH     R1,[R2, #+0]
   \   000000CA   0x.... 0x....      LDR.W    R1,??DataTable12_24
   \   000000CE   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000000D2   0x.... 0x....      LDR.W    R2,??DataTable12_4  ;; 0xc00080a0
   \   000000D6   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000D8   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000000DC   0xF244 0x0250      MOVW     R2,#+16464
   \   000000E0   0x5211             STRH     R1,[R2, R0]
    599                                       break;
   \   000000E2   0xE0EE             B.N      ??SPI4_IRQHandler_3
    600                                   case BUF2_PLAY:
    601                                       Buffer3.bufMIC5[WaveRec_idxSens5++] = vRawSens5;
   \                     ??SPI4_IRQHandler_6: (+1)
   \   000000E4   0x.... 0x....      LDR.W    R0,??DataTable12_25
   \   000000E8   0x8800             LDRH     R0,[R0, #+0]
   \   000000EA   0x1C41             ADDS     R1,R0,#+1
   \   000000EC   0x.... 0x....      LDR.W    R2,??DataTable12_25
   \   000000F0   0x8011             STRH     R1,[R2, #+0]
   \   000000F2   0x.... 0x....      LDR.W    R1,??DataTable12_24
   \   000000F6   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000000FA   0x.... 0x....      LDR.W    R2,??DataTable12_5  ;; 0xc0010140
   \   000000FE   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000100   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   00000104   0xF244 0x0250      MOVW     R2,#+16464
   \   00000108   0x5211             STRH     R1,[R2, R0]
    602                                       Buffer3.bufMIC5[WaveRec_idxSens5++] = vRawSens5;
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable12_25
   \   0000010E   0x8800             LDRH     R0,[R0, #+0]
   \   00000110   0x1C41             ADDS     R1,R0,#+1
   \   00000112   0x.... 0x....      LDR.W    R2,??DataTable12_25
   \   00000116   0x8011             STRH     R1,[R2, #+0]
   \   00000118   0x.... 0x....      LDR.W    R1,??DataTable12_24
   \   0000011C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000120   0x.... 0x....      LDR.W    R2,??DataTable12_5  ;; 0xc0010140
   \   00000124   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000126   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   0000012A   0xF244 0x0250      MOVW     R2,#+16464
   \   0000012E   0x5211             STRH     R1,[R2, R0]
    603                                       break;
   \   00000130   0xE0C7             B.N      ??SPI4_IRQHandler_3
    604                                   case BUF3_PLAY:
    605                                       Buffer1.bufMIC5[WaveRec_idxSens5++] = vRawSens5;
   \                     ??SPI4_IRQHandler_5: (+1)
   \   00000132   0x.... 0x....      LDR.W    R0,??DataTable12_25
   \   00000136   0x8800             LDRH     R0,[R0, #+0]
   \   00000138   0x1C41             ADDS     R1,R0,#+1
   \   0000013A   0x.... 0x....      LDR.W    R2,??DataTable12_25
   \   0000013E   0x8011             STRH     R1,[R2, #+0]
   \   00000140   0x.... 0x....      LDR.W    R1,??DataTable12_24
   \   00000144   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000148   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000014A   0x0040             LSLS     R0,R0,#+1
   \   0000014C   0xF1B0 0x4080      SUBS     R0,R0,#+1073741824
   \   00000150   0xF244 0x0250      MOVW     R2,#+16464
   \   00000154   0x5211             STRH     R1,[R2, R0]
    606                                       Buffer1.bufMIC5[WaveRec_idxSens5++] = vRawSens5;
   \   00000156   0x.... 0x....      LDR.W    R0,??DataTable12_25
   \   0000015A   0x8800             LDRH     R0,[R0, #+0]
   \   0000015C   0x1C41             ADDS     R1,R0,#+1
   \   0000015E   0x.... 0x....      LDR.W    R2,??DataTable12_25
   \   00000162   0x8011             STRH     R1,[R2, #+0]
   \   00000164   0x.... 0x....      LDR.W    R1,??DataTable12_24
   \   00000168   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000016C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000016E   0x0040             LSLS     R0,R0,#+1
   \   00000170   0xF1B0 0x4080      SUBS     R0,R0,#+1073741824
   \   00000174   0xF244 0x0250      MOVW     R2,#+16464
   \   00000178   0x5211             STRH     R1,[R2, R0]
    607                                       break;                          
   \   0000017A   0xE0A2             B.N      ??SPI4_IRQHandler_3
    608                                   default:
    609                                       break;
   \                     ??SPI4_IRQHandler_7: (+1)
   \   0000017C   0xE0A1             B.N      ??SPI4_IRQHandler_3
    610                               }
    611                         }
    612          	   }
    613                  }
    614          	else
    615          	{
    616                    if (Main_stLROld==GPIO_PIN_RESET)
   \                     ??SPI4_IRQHandler_1: (+1)
   \   0000017E   0x.... 0x....      LDR.W    R0,??DataTable12_21
   \   00000182   0x7800             LDRB     R0,[R0, #+0]
   \   00000184   0x2800             CMP      R0,#+0
   \   00000186   0xD103             BNE.N    ??SPI4_IRQHandler_8
    617                    {
    618                        SPI4_stNipple = (test);	  
   \   00000188   0x.... 0x....      LDR.W    R0,??DataTable12_22
   \   0000018C   0x8004             STRH     R4,[R0, #+0]
   \   0000018E   0xE098             B.N      ??SPI4_IRQHandler_3
    619          
    620                    }
    621                    else
    622                    {
    623                         vRawSens6 =((test>>SPI4_stPosShft)|(SPI4_stNipple<<(SDOLEN-SPI4_stPosShft)));
                                ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??SPI4_IRQHandler_8: (+1)
   \   00000190   0x.... 0x....      LDR.W    R0,??DataTable12_23
   \   00000194   0x7800             LDRB     R0,[R0, #+0]
   \   00000196   0x.... 0x....      LDR.W    R1,??DataTable12_22
   \   0000019A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000019E   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000001A0   0x0022             MOVS     R2,R4
   \   000001A2   0x4102             ASRS     R2,R2,R0
   \   000001A4   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000001A6   0x.... 0x....      LDR.W    R0,??DataTable12_23
   \   000001AA   0x7800             LDRB     R0,[R0, #+0]
   \   000001AC   0xF1D0 0x0010      RSBS     R0,R0,#+16
   \   000001B0   0xFA11 0xF000      LSLS     R0,R1,R0
   \   000001B4   0x4310             ORRS     R0,R0,R2
   \   000001B6   0x.... 0x....      LDR.W    R1,??DataTable12_26
   \   000001BA   0x8008             STRH     R0,[R1, #+0]
    624                         if (WaveRec_idxSens6 < (2*AUDIO_OUT_BUFFER_SIZE+2))
   \   000001BC   0x.... 0x....      LDR.W    R0,??DataTable12_27
   \   000001C0   0x8800             LDRH     R0,[R0, #+0]
   \   000001C2   0xF640 0x0102      MOVW     R1,#+2050
   \   000001C6   0x4288             CMP      R0,R1
   \   000001C8   0xDA7B             BGE.N    ??SPI4_IRQHandler_3
    625                         {
    626                              /*-------------------------------------------------------------------------------------------------------------                                             
    627                              Sequence  Record Data                     Processing Data                 Player Data
    628                                                
    629                              1-------  Buffer1                         Buffer2                         Buffer3 BUF3_PLAY)
    630                                                
    631                              2-------  Buffer3                         Buffer1                         Buffer2 (BUF2_PLAY)		  
    632                                                
    633                              3-------  Buffer2                         Buffer3                         Buffer1 (BUF1_PLAY)
    634                               ---------------------------------------------------------------------------------------------------------------*/                 
    635                                /* Recording Audio Data */			             
    636                               switch (buffer_switch)
   \   000001CA   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   000001CE   0x7800             LDRB     R0,[R0, #+0]
   \   000001D0   0x2800             CMP      R0,#+0
   \   000001D2   0xD003             BEQ.N    ??SPI4_IRQHandler_9
   \   000001D4   0x2802             CMP      R0,#+2
   \   000001D6   0xD04F             BEQ.N    ??SPI4_IRQHandler_10
   \   000001D8   0xD327             BCC.N    ??SPI4_IRQHandler_11
   \   000001DA   0xE072             B.N      ??SPI4_IRQHandler_12
    637                               {
    638                                   case BUF1_PLAY:
    639                                       Buffer2.bufMIC6[WaveRec_idxSens6++] = vRawSens6;
   \                     ??SPI4_IRQHandler_9: (+1)
   \   000001DC   0x.... 0x....      LDR.W    R0,??DataTable12_27
   \   000001E0   0x8800             LDRH     R0,[R0, #+0]
   \   000001E2   0x1C41             ADDS     R1,R0,#+1
   \   000001E4   0x.... 0x....      LDR.W    R2,??DataTable12_27
   \   000001E8   0x8011             STRH     R1,[R2, #+0]
   \   000001EA   0x.... 0x....      LDR.W    R1,??DataTable12_26
   \   000001EE   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000001F2   0x.... 0x....      LDR.W    R2,??DataTable12_4  ;; 0xc00080a0
   \   000001F6   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001F8   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000001FC   0xF245 0x0264      MOVW     R2,#+20580
   \   00000200   0x5211             STRH     R1,[R2, R0]
    640                                       Buffer2.bufMIC6[WaveRec_idxSens6++] = vRawSens6;
   \   00000202   0x.... 0x....      LDR.W    R0,??DataTable12_27
   \   00000206   0x8800             LDRH     R0,[R0, #+0]
   \   00000208   0x1C41             ADDS     R1,R0,#+1
   \   0000020A   0x.... 0x....      LDR.W    R2,??DataTable12_27
   \   0000020E   0x8011             STRH     R1,[R2, #+0]
   \   00000210   0x.... 0x....      LDR.W    R1,??DataTable12_26
   \   00000214   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000218   0x.... 0x....      LDR.W    R2,??DataTable12_4  ;; 0xc00080a0
   \   0000021C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000021E   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   00000222   0xF245 0x0264      MOVW     R2,#+20580
   \   00000226   0x5211             STRH     R1,[R2, R0]
    641                                       break;
   \   00000228   0xE04B             B.N      ??SPI4_IRQHandler_3
    642                                   case BUF2_PLAY:
    643                                       Buffer3.bufMIC6[WaveRec_idxSens6++] = vRawSens6;
   \                     ??SPI4_IRQHandler_11: (+1)
   \   0000022A   0x.... 0x....      LDR.W    R0,??DataTable12_27
   \   0000022E   0x8800             LDRH     R0,[R0, #+0]
   \   00000230   0x1C41             ADDS     R1,R0,#+1
   \   00000232   0x.... 0x....      LDR.W    R2,??DataTable12_27
   \   00000236   0x8011             STRH     R1,[R2, #+0]
   \   00000238   0x.... 0x....      LDR.W    R1,??DataTable12_26
   \   0000023C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000240   0x.... 0x....      LDR.W    R2,??DataTable12_5  ;; 0xc0010140
   \   00000244   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000246   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   0000024A   0xF245 0x0264      MOVW     R2,#+20580
   \   0000024E   0x5211             STRH     R1,[R2, R0]
    644                                       Buffer3.bufMIC6[WaveRec_idxSens6++] = vRawSens6;
   \   00000250   0x.... 0x....      LDR.W    R0,??DataTable12_27
   \   00000254   0x8800             LDRH     R0,[R0, #+0]
   \   00000256   0x1C41             ADDS     R1,R0,#+1
   \   00000258   0x.... 0x....      LDR.W    R2,??DataTable12_27
   \   0000025C   0x8011             STRH     R1,[R2, #+0]
   \   0000025E   0x.... 0x....      LDR.W    R1,??DataTable12_26
   \   00000262   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000266   0x.... 0x....      LDR.W    R2,??DataTable12_5  ;; 0xc0010140
   \   0000026A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000026C   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   00000270   0xF245 0x0264      MOVW     R2,#+20580
   \   00000274   0x5211             STRH     R1,[R2, R0]
    645                                       break;
   \   00000276   0xE024             B.N      ??SPI4_IRQHandler_3
    646                                   case BUF3_PLAY:
    647                                       Buffer1.bufMIC6[WaveRec_idxSens6++] = vRawSens6;
   \                     ??SPI4_IRQHandler_10: (+1)
   \   00000278   0x.... 0x....      LDR.W    R0,??DataTable12_27
   \   0000027C   0x8800             LDRH     R0,[R0, #+0]
   \   0000027E   0x1C41             ADDS     R1,R0,#+1
   \   00000280   0x.... 0x....      LDR.W    R2,??DataTable12_27
   \   00000284   0x8011             STRH     R1,[R2, #+0]
   \   00000286   0x.... 0x....      LDR.W    R1,??DataTable12_26
   \   0000028A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000028E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000290   0x0040             LSLS     R0,R0,#+1
   \   00000292   0xF1B0 0x4080      SUBS     R0,R0,#+1073741824
   \   00000296   0xF245 0x0264      MOVW     R2,#+20580
   \   0000029A   0x5211             STRH     R1,[R2, R0]
    648                                       Buffer1.bufMIC6[WaveRec_idxSens6++] = vRawSens6;
   \   0000029C   0x.... 0x....      LDR.W    R0,??DataTable12_27
   \   000002A0   0x8800             LDRH     R0,[R0, #+0]
   \   000002A2   0x1C41             ADDS     R1,R0,#+1
   \   000002A4   0x.... 0x....      LDR.W    R2,??DataTable12_27
   \   000002A8   0x8011             STRH     R1,[R2, #+0]
   \   000002AA   0x.... 0x....      LDR.W    R1,??DataTable12_26
   \   000002AE   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000002B2   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000002B4   0x0040             LSLS     R0,R0,#+1
   \   000002B6   0xF1B0 0x4080      SUBS     R0,R0,#+1073741824
   \   000002BA   0xF245 0x0264      MOVW     R2,#+20580
   \   000002BE   0x5211             STRH     R1,[R2, R0]
    649                                       break;                          
   \   000002C0   0xE7FF             B.N      ??SPI4_IRQHandler_3
    650                                   default:
    651                                       break;
    652                               }
    653                         }
    654                    }		
    655          	}
    656          
    657          	/* The code to store data in to buffer for testing purpose */
    658          	if (iSDO56<4*AUDIO_OUT_BUFFER_SIZE)
   \                     ??SPI4_IRQHandler_12: (+1)
   \                     ??SPI4_IRQHandler_3: (+1)
   \   000002C2   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000002C6   0x8800             LDRH     R0,[R0, #+0]
   \   000002C8   0xF5B0 0x5F80      CMP      R0,#+4096
   \   000002CC   0xDA0C             BGE.N    ??SPI4_IRQHandler_13
    659          	{
    660          		TestSDO56[iSDO56++]=test;
   \   000002CE   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000002D2   0x8800             LDRH     R0,[R0, #+0]
   \   000002D4   0x1C41             ADDS     R1,R0,#+1
   \   000002D6   0x.... 0x....      LDR.W    R2,??DataTable13
   \   000002DA   0x8011             STRH     R1,[R2, #+0]
   \   000002DC   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000002E0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000002E2   0xF821 0x4010      STRH     R4,[R1, R0, LSL #+1]
   \   000002E6   0xE003             B.N      ??SPI4_IRQHandler_14
    661          	}
    662          	else
    663          	{
    664          		iSDO56=0;
   \                     ??SPI4_IRQHandler_13: (+1)
   \   000002E8   0x2000             MOVS     R0,#+0
   \   000002EA   0x.... 0x....      LDR.W    R1,??DataTable13
   \   000002EE   0x8008             STRH     R0,[R1, #+0]
    665          	}
    666          
    667          
    668          	/* Update Old value */	  
    669          	Main_stLROld=Main_stLR;	  
   \                     ??SPI4_IRQHandler_14: (+1)
   \   000002F0   0x.... 0x....      LDR.W    R0,??DataTable12_20
   \   000002F4   0x7800             LDRB     R0,[R0, #+0]
   \   000002F6   0x.... 0x....      LDR.W    R1,??DataTable12_21
   \   000002FA   0x7008             STRB     R0,[R1, #+0]
    670               
    671            }      
    672          }
   \                     ??SPI4_IRQHandler_0: (+1)
   \   000002FC   0xBD10             POP      {R4,PC}          ;; return
   \   000002FE                      REQUIRE Buffer2
   \   000002FE                      REQUIRE Buffer3
   \   000002FE                      REQUIRE Buffer1

   \                                 In section .bss, align 1
   \                     ??Main_stLR:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??Main_stLROld:
   \   00000000                      DS8 1
    673          
    674          
    675          
    676          

   \                                 In section .text, align 2, keep-with-next
    677          void SPI5_IRQHandler(void)
    678          {
   \                     SPI5_IRQHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    679            //static uint16_t stNipple;
    680            //static uint8_t stLR, stOder;
    681          
    682            /* USER CODE BEGIN SPI5_IRQn 0 */
    683          
    684            /* USER CODE END SPI5_IRQn 0 */
    685            //HAL_SPI_IRQHandler(&hspi5);
    686            /* USER CODE BEGIN SPI5_IRQn 1 */
    687          
    688            /* USER CODE END SPI5_IRQn 1 */
    689              /* Check if data are available in SPI Data register */
    690            /* SPI in mode Receiver ----------------------------------------------------*/
    691            if(
    692               (__HAL_SPI_GET_FLAG(&hspi5, SPI_FLAG_OVR) == RESET)&&
    693               (__HAL_SPI_GET_FLAG(&hspi5, SPI_FLAG_RXNE) != RESET)&&
    694               (__HAL_SPI_GET_IT_SOURCE(&hspi5, SPI_IT_RXNE) != RESET))
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable13_2
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x6880             LDR      R0,[R0, #+8]
   \   0000000A   0x0640             LSLS     R0,R0,#+25
   \   0000000C   0xD46D             BMI.N    ??SPI5_IRQHandler_0
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable13_2
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x6880             LDR      R0,[R0, #+8]
   \   00000016   0x07C0             LSLS     R0,R0,#+31
   \   00000018   0xD567             BPL.N    ??SPI5_IRQHandler_0
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable13_2
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0x6840             LDR      R0,[R0, #+4]
   \   00000022   0x0640             LSLS     R0,R0,#+25
   \   00000024   0xD561             BPL.N    ??SPI5_IRQHandler_0
    695            {
    696          
    697          
    698             uint16_t test;
    699             test =  SPI_I2S_ReceiveData(SPI5);
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable13_3  ;; 0x40015000
   \   0000002A   0x.... 0x....      BL       SPI_I2S_ReceiveData
   \   0000002E   0x0004             MOVS     R4,R0
    700             SPI5->DR = 3333;
   \   00000030   0xF640 0x5005      MOVW     R0,#+3333
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable13_4  ;; 0x4001500c
   \   00000038   0x6008             STR      R0,[R1, #+0]
    701          
    702            pDataMic8[idxMic8++] =	HTONS(test);
   \   0000003A   0x0020             MOVS     R0,R4
   \   0000003C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000003E   0x0221             LSLS     R1,R4,#+8
   \   00000040   0xEA51 0x2010      ORRS     R0,R1,R0, LSR #+8
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable13_5
   \   00000048   0x.... 0x....      LDR.W    R2,??DataTable13_6
   \   0000004C   0x8812             LDRH     R2,[R2, #+0]
   \   0000004E   0xF821 0x0012      STRH     R0,[R1, R2, LSL #+1]
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable13_6
   \   00000056   0x8800             LDRH     R0,[R0, #+0]
   \   00000058   0x1C40             ADDS     R0,R0,#+1
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   0000005E   0x8008             STRH     R0,[R1, #+0]
    703            
    704            //volume = 64;
    705            
    706            if (idxMic8>=64)
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable13_6
   \   00000064   0x8800             LDRH     R0,[R0, #+0]
   \   00000066   0x2840             CMP      R0,#+64
   \   00000068   0xDB3F             BLT.N    ??SPI5_IRQHandler_0
    707            {
    708          	if (buffer_switch != 1)
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   0000006E   0x7800             LDRB     R0,[R0, #+0]
   \   00000070   0x2801             CMP      R0,#+1
   \   00000072   0xD013             BEQ.N    ??SPI5_IRQHandler_1
    709          	{
    710          		PDM_Filter_64_LSB((uint8_t *)pDataMic8,(uint16_t *)(bufPCMSens8 + cntPos*16), volume ,
                 		^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
    711          						  (PDMFilter_InitStruct *)&Filter[0]);
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   00000078   0x7802             LDRB     R2,[R0, #+0]
   \   0000007A   0x.... 0x....      LDR.W    R3,??DataTable13_8
   \   0000007E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000080   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable16
   \   0000008C   0x8809             LDRH     R1,[R1, #+0]
   \   0000008E   0xEB10 0x1141      ADDS     R1,R0,R1, LSL #+5
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable13_5
   \   00000096   0x.... 0x....      BL       PDM_Filter_64_LSB
   \   0000009A   0xE012             B.N      ??SPI5_IRQHandler_2
    712          	}
    713          	else
    714          	{
    715          		PDM_Filter_64_LSB((uint8_t *)pDataMic8,(uint16_t *)(bufPCMSens8 + cntPos*16), volume , 
                 		^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
    716          						  (PDMFilter_InitStruct *)&Filter[0]);   
   \                     ??SPI5_IRQHandler_1: (+1)
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   000000A0   0x7802             LDRB     R2,[R0, #+0]
   \   000000A2   0x.... 0x....      LDR.W    R3,??DataTable13_8
   \   000000A6   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000A8   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   000000AE   0x6800             LDR      R0,[R0, #+0]
   \   000000B0   0x.... 0x....      LDR.W    R1,??DataTable16
   \   000000B4   0x8809             LDRH     R1,[R1, #+0]
   \   000000B6   0xEB10 0x1141      ADDS     R1,R0,R1, LSL #+5
   \   000000BA   0x.... 0x....      LDR.W    R0,??DataTable13_5
   \   000000BE   0x.... 0x....      BL       PDM_Filter_64_LSB
    717          	}
    718          	idxMic8=0;
   \                     ??SPI5_IRQHandler_2: (+1)
   \   000000C2   0x2000             MOVS     R0,#+0
   \   000000C4   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   000000C8   0x8008             STRH     R0,[R1, #+0]
    719          	cntPos++;
   \   000000CA   0x.... 0x....      LDR.W    R0,??DataTable16
   \   000000CE   0x8800             LDRH     R0,[R0, #+0]
   \   000000D0   0x1C40             ADDS     R0,R0,#+1
   \   000000D2   0x.... 0x....      LDR.W    R1,??DataTable16
   \   000000D6   0x8008             STRH     R0,[R1, #+0]
    720          	if (cntPos>=256) cntPos=0;
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable16
   \   000000DC   0x8800             LDRH     R0,[R0, #+0]
   \   000000DE   0x28FF             CMP      R0,#+255
   \   000000E0   0xDD03             BLE.N    ??SPI5_IRQHandler_0
   \   000000E2   0x2000             MOVS     R0,#+0
   \   000000E4   0x.... 0x....      LDR.W    R1,??DataTable16
   \   000000E8   0x8008             STRH     R0,[R1, #+0]
    721            }
    722              
    723            }
    724            
    725          }
   \                     ??SPI5_IRQHandler_0: (+1)
   \   000000EA   0xBD10             POP      {R4,PC}          ;; return
    726          
    727          /* SPI5 init function */
    728          
    729          

   \                                 In section .text, align 2, keep-with-next
    730          void SPI6_IRQHandler(void)
    731          {
   \                     SPI6_IRQHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    732            /* SPI in mode Receiver ----------------------------------------------------*/
    733            if(
    734          //     (__HAL_SPI_GET_FLAG(&hspi6, SPI_FLAG_OVR) == RESET)&&
    735               (__HAL_SPI_GET_FLAG(&hspi6, SPI_FLAG_TXE) != RESET)&&
    736               (__HAL_SPI_GET_IT_SOURCE(&hspi6, SPI_IT_TXE) != RESET))
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x6880             LDR      R0,[R0, #+8]
   \   0000000A   0x0780             LSLS     R0,R0,#+30
   \   0000000C   0xD567             BPL.N    ??SPI6_IRQHandler_0
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x6840             LDR      R0,[R0, #+4]
   \   00000016   0x0600             LSLS     R0,R0,#+24
   \   00000018   0xD561             BPL.N    ??SPI6_IRQHandler_0
    737            {
    738          
    739          
    740               uint16_t test;
    741               test =  SPI_I2S_ReceiveData(SPI6);
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable13_11  ;; 0x40015400
   \   0000001E   0x.... 0x....      BL       SPI_I2S_ReceiveData
   \   00000022   0x0004             MOVS     R4,R0
    742               SPI6->DR = 3333;
   \   00000024   0xF640 0x5005      MOVW     R0,#+3333
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable13_12  ;; 0x4001540c
   \   0000002C   0x6008             STR      R0,[R1, #+0]
    743          
    744              pDataMic7[idxMic7++] =	HTONS(test);
   \   0000002E   0x0020             MOVS     R0,R4
   \   00000030   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000032   0x0221             LSLS     R1,R4,#+8
   \   00000034   0xEA51 0x2010      ORRS     R0,R1,R0, LSR #+8
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable13_13
   \   0000003C   0x.... 0x....      LDR.W    R2,??DataTable13_14
   \   00000040   0x8812             LDRH     R2,[R2, #+0]
   \   00000042   0xF821 0x0012      STRH     R0,[R1, R2, LSL #+1]
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable13_14
   \   0000004A   0x8800             LDRH     R0,[R0, #+0]
   \   0000004C   0x1C40             ADDS     R0,R0,#+1
   \   0000004E   0x.... 0x....      LDR.W    R1,??DataTable13_14
   \   00000052   0x8008             STRH     R0,[R1, #+0]
    745          
    746              //volume = 64;
    747          
    748              if (idxMic7>=64)
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable13_14
   \   00000058   0x8800             LDRH     R0,[R0, #+0]
   \   0000005A   0x2840             CMP      R0,#+64
   \   0000005C   0xDB3F             BLT.N    ??SPI6_IRQHandler_0
    749              {
    750                if (buffer_switch != 1)
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   00000062   0x7800             LDRB     R0,[R0, #+0]
   \   00000064   0x2801             CMP      R0,#+1
   \   00000066   0xD013             BEQ.N    ??SPI6_IRQHandler_1
    751                {
    752                        PDM_Filter_64_LSB((uint8_t *)pDataMic7,(uint16_t *)(bufPCMSens7 + cntPos7*16), volume ,
                               ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
    753                                                          (PDMFilter_InitStruct *)&Filter[1]);
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   0000006C   0x7802             LDRB     R2,[R0, #+0]
   \   0000006E   0x.... 0x....      LDR.W    R3,??DataTable13_15
   \   00000072   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000074   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable13_16
   \   0000007A   0x6800             LDR      R0,[R0, #+0]
   \   0000007C   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   00000080   0x8809             LDRH     R1,[R1, #+0]
   \   00000082   0xEB10 0x1141      ADDS     R1,R0,R1, LSL #+5
   \   00000086   0x.... 0x....      LDR.W    R0,??DataTable13_13
   \   0000008A   0x.... 0x....      BL       PDM_Filter_64_LSB
   \   0000008E   0xE012             B.N      ??SPI6_IRQHandler_2
    754                }
    755                else
    756                {
    757                        PDM_Filter_64_LSB((uint8_t *)pDataMic7,(uint16_t *)(bufPCMSens7 + cntPos7*16), volume , 
                               ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
    758                                                          (PDMFilter_InitStruct *)&Filter[1]);   
   \                     ??SPI6_IRQHandler_1: (+1)
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   00000094   0x7802             LDRB     R2,[R0, #+0]
   \   00000096   0x.... 0x....      LDR.W    R3,??DataTable13_15
   \   0000009A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000009C   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable13_16
   \   000000A2   0x6800             LDR      R0,[R0, #+0]
   \   000000A4   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   000000A8   0x8809             LDRH     R1,[R1, #+0]
   \   000000AA   0xEB10 0x1141      ADDS     R1,R0,R1, LSL #+5
   \   000000AE   0x.... 0x....      LDR.W    R0,??DataTable13_13
   \   000000B2   0x.... 0x....      BL       PDM_Filter_64_LSB
    759                }
    760                idxMic7=0;
   \                     ??SPI6_IRQHandler_2: (+1)
   \   000000B6   0x2000             MOVS     R0,#+0
   \   000000B8   0x.... 0x....      LDR.W    R1,??DataTable13_14
   \   000000BC   0x8008             STRH     R0,[R1, #+0]
    761                cntPos7++;
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   000000C2   0x8800             LDRH     R0,[R0, #+0]
   \   000000C4   0x1C40             ADDS     R0,R0,#+1
   \   000000C6   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   000000CA   0x8008             STRH     R0,[R1, #+0]
    762                if (cntPos7>=256) cntPos7=0;
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   000000D0   0x8800             LDRH     R0,[R0, #+0]
   \   000000D2   0x28FF             CMP      R0,#+255
   \   000000D4   0xDD03             BLE.N    ??SPI6_IRQHandler_0
   \   000000D6   0x2000             MOVS     R0,#+0
   \   000000D8   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   000000DC   0x8008             STRH     R0,[R1, #+0]
    763              }
    764              
    765            }
    766          }
   \                     ??SPI6_IRQHandler_0: (+1)
   \   000000DE   0xBD10             POP      {R4,PC}          ;; return
    767          
    768          
    769          

   \                                 In section .text, align 2, keep-with-next
    770          void MIC1TO6_Init(void)
    771          {
   \                     MIC1TO6_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    772            while(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==GPIO_PIN_SET);
   \                     ??MIC1TO6_Init_0: (+1)
   \   00000002   0x2110             MOVS     R1,#+16
   \   00000004   0x....             LDR.N    R0,??DataTable9  ;; 0x40020000
   \   00000006   0x.... 0x....      BL       HAL_GPIO_ReadPin
   \   0000000A   0x2801             CMP      R0,#+1
   \   0000000C   0xD0F9             BEQ.N    ??MIC1TO6_Init_0
    773            while(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==GPIO_PIN_RESET);
   \                     ??MIC1TO6_Init_1: (+1)
   \   0000000E   0x2110             MOVS     R1,#+16
   \   00000010   0x....             LDR.N    R0,??DataTable9  ;; 0x40020000
   \   00000012   0x.... 0x....      BL       HAL_GPIO_ReadPin
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD0F9             BEQ.N    ??MIC1TO6_Init_1
    774            I2S1_Init(); /* I2S1   --> SDO12 */
   \   0000001A   0x.... 0x....      BL       I2S1_Init
    775            while(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==GPIO_PIN_SET);
   \                     ??MIC1TO6_Init_2: (+1)
   \   0000001E   0x2110             MOVS     R1,#+16
   \   00000020   0x....             LDR.N    R0,??DataTable9  ;; 0x40020000
   \   00000022   0x.... 0x....      BL       HAL_GPIO_ReadPin
   \   00000026   0x2801             CMP      R0,#+1
   \   00000028   0xD0F9             BEQ.N    ??MIC1TO6_Init_2
    776            while(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==GPIO_PIN_RESET);
   \                     ??MIC1TO6_Init_3: (+1)
   \   0000002A   0x2110             MOVS     R1,#+16
   \   0000002C   0x....             LDR.N    R0,??DataTable9  ;; 0x40020000
   \   0000002E   0x.... 0x....      BL       HAL_GPIO_ReadPin
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xD0F9             BEQ.N    ??MIC1TO6_Init_3
    777            I2S2_Init(); /* I2S2   --> SDO34 */
   \   00000036   0x.... 0x....      BL       I2S2_Init
    778            while(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==GPIO_PIN_SET);
   \                     ??MIC1TO6_Init_4: (+1)
   \   0000003A   0x2110             MOVS     R1,#+16
   \   0000003C   0x....             LDR.N    R0,??DataTable9  ;; 0x40020000
   \   0000003E   0x.... 0x....      BL       HAL_GPIO_ReadPin
   \   00000042   0x2801             CMP      R0,#+1
   \   00000044   0xD0F9             BEQ.N    ??MIC1TO6_Init_4
    779            while(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4)==GPIO_PIN_RESET);
   \                     ??MIC1TO6_Init_5: (+1)
   \   00000046   0x2110             MOVS     R1,#+16
   \   00000048   0x....             LDR.N    R0,??DataTable9  ;; 0x40020000
   \   0000004A   0x.... 0x....      BL       HAL_GPIO_ReadPin
   \   0000004E   0x2800             CMP      R0,#+0
   \   00000050   0xD0F9             BEQ.N    ??MIC1TO6_Init_5
    780            SPI4_Init(); /* SPI4   --> SDO56 */
   \   00000052   0x.... 0x....      BL       SPI4_Init
    781          
    782            SPI5_Init();
   \   00000056   0x.... 0x....      BL       SPI5_Init
    783            SPI6_Init();
   \   0000005A   0x.... 0x....      BL       SPI6_Init
    784          
    785            HAL_SPI_Receive_DMA(&hspi5,( uint8_t *)TestSDO7,4*AUDIO_OUT_BUFFER_SIZE);
   \   0000005E   0xF44F 0x5280      MOV      R2,#+4096
   \   00000062   0x.... 0x....      LDR.W    R1,??DataTable16_2
   \   00000066   0x.... 0x....      LDR.W    R0,??DataTable13_2
   \   0000006A   0x.... 0x....      BL       HAL_SPI_Receive_DMA
    786          #if (USB_STREAMING)
    787            HAL_SPI_Receive_DMA(&hspi6,( uint8_t *)TestSDO8,4*(AUDIO_SAMPLING_FREQUENCY/1000));
   \   0000006E   0x2240             MOVS     R2,#+64
   \   00000070   0x.... 0x....      LDR.W    R1,??DataTable16_3
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   00000078   0x.... 0x....      BL       HAL_SPI_Receive_DMA
    788          #else
    789            HAL_SPI_Receive_DMA(&hspi6,( uint8_t *)TestSDO8,4*AUDIO_OUT_BUFFER_SIZE);
    790          #endif
    791            swtSDO7 = 0;
   \   0000007C   0x2000             MOVS     R0,#+0
   \   0000007E   0x.... 0x....      LDR.W    R1,??DataTable16_4
   \   00000082   0x7008             STRB     R0,[R1, #+0]
    792            swtSDO8 = 0;
   \   00000084   0x2000             MOVS     R0,#+0
   \   00000086   0x.... 0x....      LDR.W    R1,??DataTable16_5
   \   0000008A   0x7008             STRB     R0,[R1, #+0]
    793          }
   \   0000008C   0xBD01             POP      {R0,PC}          ;; return
    794          
    795          
    796          
    797          /* I2S1 init function */
    798          /* Read data of MIC12 */

   \                                 In section .text, align 2, keep-with-next
    799          static void I2S1_Init(void)
    800          {
   \                     I2S1_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    801          #if 1
    802            hi2s1.Instance = SPI1;
   \   00000002   0x....             LDR.N    R0,??DataTable10  ;; 0x40013000
   \   00000004   0x....             LDR.N    R1,??DataTable10_1
   \   00000006   0x6008             STR      R0,[R1, #+0]
    803            hi2s1.Init.Mode = I2S_MODE_SLAVE_RX;
   \   00000008   0xF44F 0x7080      MOV      R0,#+256
   \   0000000C   0x....             LDR.N    R1,??DataTable10_1
   \   0000000E   0x6048             STR      R0,[R1, #+4]
    804            hi2s1.Init.Standard = I2S_STANDARD_LSB;
   \   00000010   0x2020             MOVS     R0,#+32
   \   00000012   0x....             LDR.N    R1,??DataTable10_1
   \   00000014   0x6088             STR      R0,[R1, #+8]
    805            hi2s1.Init.DataFormat = I2S_DATAFORMAT_16B;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x....             LDR.N    R1,??DataTable10_1
   \   0000001A   0x60C8             STR      R0,[R1, #+12]
    806            hi2s1.Init.MCLKOutput = I2S_MCLKOUTPUT_DISABLE;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x....             LDR.N    R1,??DataTable10_1
   \   00000020   0x6108             STR      R0,[R1, #+16]
    807            hi2s1.Init.AudioFreq = I2S_AUDIOFREQ_16K;
   \   00000022   0xF44F 0x507A      MOV      R0,#+16000
   \   00000026   0x....             LDR.N    R1,??DataTable10_1
   \   00000028   0x6148             STR      R0,[R1, #+20]
    808            hi2s1.Init.CPOL = I2S_CPOL_LOW;
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x....             LDR.N    R1,??DataTable10_1
   \   0000002E   0x6188             STR      R0,[R1, #+24]
    809            hi2s1.Init.ClockSource = I2S_CLOCK_EXTERNAL;
   \   00000030   0x2001             MOVS     R0,#+1
   \   00000032   0x....             LDR.N    R1,??DataTable10_1
   \   00000034   0x61C8             STR      R0,[R1, #+28]
    810            HAL_I2S_Init(&hi2s1);
   \   00000036   0x....             LDR.N    R0,??DataTable10_1
   \   00000038   0x.... 0x....      BL       HAL_I2S_Init
    811          
    812               /* Enable TXE and ERR interrupt */
    813           __HAL_I2S_ENABLE_IT(&hi2s1, (I2S_IT_RXNE));
   \   0000003C   0x....             LDR.N    R0,??DataTable10_1
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0x6840             LDR      R0,[R0, #+4]
   \   00000042   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00000046   0x....             LDR.N    R1,??DataTable10_1
   \   00000048   0x6809             LDR      R1,[R1, #+0]
   \   0000004A   0x6048             STR      R0,[R1, #+4]
    814           
    815           __HAL_I2S_ENABLE(&hi2s1);
   \   0000004C   0x....             LDR.N    R0,??DataTable10_1
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0x69C0             LDR      R0,[R0, #+28]
   \   00000052   0xF450 0x6080      ORRS     R0,R0,#0x400
   \   00000056   0x....             LDR.N    R1,??DataTable10_1
   \   00000058   0x6809             LDR      R1,[R1, #+0]
   \   0000005A   0x61C8             STR      R0,[R1, #+28]
    816          #else
    817          	hspi1.Instance = SPI1;
    818          	hspi1.Init.Mode = SPI_MODE_SLAVE;
    819          	hspi1.Init.Direction = SPI_DIRECTION_2LINES;//SPI_DIRECTION_2LINES_RXONLY
    820          	hspi1.Init.DataSize = SPI_DATASIZE_16BIT;
    821          	hspi1.Init.CLKPolarity = SPI_POLARITY_HIGH;
    822          	hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
    823          	hspi1.Init.NSS = SPI_NSS_SOFT;//SPI_NSS_HARD_INPUT
    824          	hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
    825          	hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
    826          	hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLED;
    827          	hspi1.Init.CRCPolynomial = 7;
    828          	hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
    829          	hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
    830          	//hspi4.RxISR = SPI5_CallBack;
    831          	HAL_SPI_Init(&hspi1);
    832          
    833          	  //HAL_GPIO_WritePin(GPIOF,GPIO_PIN_6,GPIO_PIN_SET);
    834            /* Enable TXE, RXNE and ERR interrupt */
    835           __HAL_SPI_ENABLE_IT(&hspi1, (SPI_IT_RXNE| SPI_IT_ERR));
    836          
    837           __HAL_SPI_ENABLE(&hspi1);
    838          
    839          #endif
    840          }
   \   0000005C   0xBD01             POP      {R0,PC}          ;; return
    841          
    842          /* I2S2 init function */
    843          /* Read data of MIC34 */
    844          

   \                                 In section .text, align 2, keep-with-next
    845          static void I2S2_Init(void)
    846          {
   \                     I2S2_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    847          
    848          #if 1
    849           //HAL_I2S_DeInit(&hi2s2);
    850           hi2s2.Instance = SPI2;
   \   00000002   0x....             LDR.N    R0,??DataTable12_7  ;; 0x40003800
   \   00000004   0x....             LDR.N    R1,??DataTable12_6
   \   00000006   0x6008             STR      R0,[R1, #+0]
    851           hi2s2.Init.Mode = I2S_MODE_SLAVE_RX;//I2S_MODE_MASTER_RX
   \   00000008   0xF44F 0x7080      MOV      R0,#+256
   \   0000000C   0x....             LDR.N    R1,??DataTable12_6
   \   0000000E   0x6048             STR      R0,[R1, #+4]
    852           hi2s2.Init.Standard = I2S_STANDARD_LSB;//I2S_STANDARD_LSB
   \   00000010   0x2020             MOVS     R0,#+32
   \   00000012   0x....             LDR.N    R1,??DataTable12_6
   \   00000014   0x6088             STR      R0,[R1, #+8]
    853           hi2s2.Init.DataFormat = I2S_DATAFORMAT_16B;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x....             LDR.N    R1,??DataTable12_6
   \   0000001A   0x60C8             STR      R0,[R1, #+12]
    854           hi2s2.Init.MCLKOutput = I2S_MCLKOUTPUT_DISABLE;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x....             LDR.N    R1,??DataTable12_6
   \   00000020   0x6108             STR      R0,[R1, #+16]
    855           hi2s2.Init.AudioFreq = I2S_AUDIOFREQ_16K;
   \   00000022   0xF44F 0x507A      MOV      R0,#+16000
   \   00000026   0x....             LDR.N    R1,??DataTable12_6
   \   00000028   0x6148             STR      R0,[R1, #+20]
    856           hi2s2.Init.CPOL = I2S_CPOL_LOW;
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x....             LDR.N    R1,??DataTable12_6
   \   0000002E   0x6188             STR      R0,[R1, #+24]
    857           hi2s2.Init.ClockSource = I2S_CLOCK_EXTERNAL;
   \   00000030   0x2001             MOVS     R0,#+1
   \   00000032   0x....             LDR.N    R1,??DataTable12_6
   \   00000034   0x61C8             STR      R0,[R1, #+28]
    858          
    859           HAL_I2S_Init(&hi2s2);
   \   00000036   0x....             LDR.N    R0,??DataTable12_6
   \   00000038   0x.... 0x....      BL       HAL_I2S_Init
    860            /* Enable TXE and ERR interrupt */
    861          __HAL_I2S_ENABLE_IT(&hi2s2, (I2S_IT_RXNE));
   \   0000003C   0x....             LDR.N    R0,??DataTable12_6
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0x6840             LDR      R0,[R0, #+4]
   \   00000042   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00000046   0x....             LDR.N    R1,??DataTable12_6
   \   00000048   0x6809             LDR      R1,[R1, #+0]
   \   0000004A   0x6048             STR      R0,[R1, #+4]
    862          __HAL_I2S_ENABLE(&hi2s2);
   \   0000004C   0x....             LDR.N    R0,??DataTable12_6
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0x69C0             LDR      R0,[R0, #+28]
   \   00000052   0xF450 0x6080      ORRS     R0,R0,#0x400
   \   00000056   0x....             LDR.N    R1,??DataTable12_6
   \   00000058   0x6809             LDR      R1,[R1, #+0]
   \   0000005A   0x61C8             STR      R0,[R1, #+28]
    863          
    864          #else
    865             hspi2.Instance = SPI2;
    866             hspi2.Init.Mode = SPI_MODE_SLAVE;
    867             hspi2.Init.Direction = SPI_DIRECTION_2LINES;//SPI_DIRECTION_2LINES_RXONLY
    868             hspi2.Init.DataSize = SPI_DATASIZE_16BIT;
    869             hspi2.Init.CLKPolarity = SPI_POLARITY_HIGH;
    870             hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
    871             hspi2.Init.NSS = SPI_NSS_SOFT;//SPI_NSS_HARD_INPUT
    872             hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
    873             hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
    874             hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLED;
    875             hspi2.Init.CRCPolynomial = 7;
    876             hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
    877             hspi2.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
    878             HAL_SPI_Init(&hspi2);
    879          
    880          	 //HAL_GPIO_WritePin(GPIOF,GPIO_PIN_6,GPIO_PIN_SET);
    881           /* Enable TXE, RXNE and ERR interrupt */
    882          __HAL_SPI_ENABLE_IT(&hspi2, (SPI_IT_RXNE| SPI_IT_ERR));
    883          
    884          __HAL_SPI_ENABLE(&hspi2);
    885          
    886          #endif
    887          
    888          
    889          }
   \   0000005C   0xBD01             POP      {R0,PC}          ;; return
    890          
    891          /* SPI5 init function */

   \                                 In section .text, align 2, keep-with-next
    892          void SPI4_Init(void)
    893          {
   \                     SPI4_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    894          
    895            hspi4.Instance = SPI4;
   \   00000002   0x....             LDR.N    R0,??DataTable12_19  ;; 0x40013400
   \   00000004   0x....             LDR.N    R1,??DataTable12_18
   \   00000006   0x6008             STR      R0,[R1, #+0]
    896            hspi4.Init.Mode = SPI_MODE_SLAVE;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x....             LDR.N    R1,??DataTable12_18
   \   0000000C   0x6048             STR      R0,[R1, #+4]
    897            hspi4.Init.Direction = SPI_DIRECTION_2LINES;//SPI_DIRECTION_2LINES_RXONLY
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x....             LDR.N    R1,??DataTable12_18
   \   00000012   0x6088             STR      R0,[R1, #+8]
    898            hspi4.Init.DataSize = SPI_DATASIZE_16BIT;
   \   00000014   0xF44F 0x6070      MOV      R0,#+3840
   \   00000018   0x....             LDR.N    R1,??DataTable12_18
   \   0000001A   0x60C8             STR      R0,[R1, #+12]
    899            hspi4.Init.CLKPolarity = SPI_POLARITY_HIGH;
   \   0000001C   0x2002             MOVS     R0,#+2
   \   0000001E   0x....             LDR.N    R1,??DataTable12_18
   \   00000020   0x6108             STR      R0,[R1, #+16]
    900            hspi4.Init.CLKPhase = SPI_PHASE_1EDGE;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x....             LDR.N    R1,??DataTable12_18
   \   00000026   0x6148             STR      R0,[R1, #+20]
    901            hspi4.Init.NSS = SPI_NSS_SOFT;//SPI_NSS_HARD_INPUT
   \   00000028   0xF44F 0x7000      MOV      R0,#+512
   \   0000002C   0x....             LDR.N    R1,??DataTable12_18
   \   0000002E   0x6188             STR      R0,[R1, #+24]
    902            hspi4.Init.FirstBit = SPI_FIRSTBIT_MSB;
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x....             LDR.N    R1,??DataTable12_18
   \   00000034   0x6208             STR      R0,[R1, #+32]
    903            hspi4.Init.TIMode = SPI_TIMODE_DISABLE;
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x....             LDR.N    R1,??DataTable12_18
   \   0000003A   0x6248             STR      R0,[R1, #+36]
    904            hspi4.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLED;
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0x....             LDR.N    R1,??DataTable12_18
   \   00000040   0x6288             STR      R0,[R1, #+40]
    905            hspi4.Init.CRCPolynomial = 7;
   \   00000042   0x2007             MOVS     R0,#+7
   \   00000044   0x....             LDR.N    R1,??DataTable12_18
   \   00000046   0x62C8             STR      R0,[R1, #+44]
    906            hspi4.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x....             LDR.N    R1,??DataTable12_18
   \   0000004C   0x6308             STR      R0,[R1, #+48]
    907            hspi4.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x....             LDR.N    R1,??DataTable12_18
   \   00000052   0x6348             STR      R0,[R1, #+52]
    908            HAL_SPI_Init(&hspi4);
   \   00000054   0x....             LDR.N    R0,??DataTable12_18
   \   00000056   0x.... 0x....      BL       HAL_SPI_Init
    909          
    910            /* Enable TXE, RXNE and ERR interrupt */
    911           __HAL_SPI_ENABLE_IT(&hspi4, (SPI_IT_RXNE| SPI_IT_ERR));
   \   0000005A   0x....             LDR.N    R0,??DataTable12_18
   \   0000005C   0x6800             LDR      R0,[R0, #+0]
   \   0000005E   0x6840             LDR      R0,[R0, #+4]
   \   00000060   0xF050 0x0060      ORRS     R0,R0,#0x60
   \   00000064   0x....             LDR.N    R1,??DataTable12_18
   \   00000066   0x6809             LDR      R1,[R1, #+0]
   \   00000068   0x6048             STR      R0,[R1, #+4]
    912          
    913           __HAL_SPI_ENABLE(&hspi4);
   \   0000006A   0x....             LDR.N    R0,??DataTable12_18
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00000074   0x....             LDR.N    R1,??DataTable12_18
   \   00000076   0x6809             LDR      R1,[R1, #+0]
   \   00000078   0x6008             STR      R0,[R1, #+0]
    914          }
   \   0000007A   0xBD01             POP      {R0,PC}          ;; return
    915          
    916          

   \                                 In section .text, align 2, keep-with-next
    917          void Mic7Rec(void)
    918          {
   \                     Mic7Rec: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    919              SPI5_Init();
   \   00000002   0x.... 0x....      BL       SPI5_Init
    920          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
    921          

   \                                 In section .text, align 2, keep-with-next
    922          void Mic8Rec(void)
    923          {
   \                     Mic8Rec: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    924              SPI6_Init();
   \   00000002   0x.... 0x....      BL       SPI6_Init
    925          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
    926          
    927          
    928          /* SPI5 init function */

   \                                 In section .text, align 2, keep-with-next
    929          void SPI5_Init(void)
    930          {
   \                     SPI5_Init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    931          	
    932              /* Enable CRC module */
    933              RCC->AHB1ENR |= RCC_AHB1ENR_CRCEN;
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF450 0x5080      ORRS     R0,R0,#0x1000
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable16_6  ;; 0x40023830
   \   00000010   0x6008             STR      R0,[R1, #+0]
    934          	for (char i=0; i< 2; i++)
   \   00000012   0x2400             MOVS     R4,#+0
   \                     ??SPI5_Init_0: (+1)
   \   00000014   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000016   0x2C02             CMP      R4,#+2
   \   00000018   0xDA34             BGE.N    ??SPI5_Init_1
    935          	{
    936          		/* Filter LP & HP Init */
    937          		Filter[i].LP_HZ = 8000;   //sop1hc 8000
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable13_8
   \   0000001E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000020   0x2134             MOVS     R1,#+52
   \   00000022   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000026   0x.... 0x....      LDR.W    R1,??DataTable16_7  ;; 0x45fa0000
   \   0000002A   0x6041             STR      R1,[R0, #+4]
    938          		Filter[i].HP_HZ = 10;
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable13_8
   \   00000030   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000032   0x2134             MOVS     R1,#+52
   \   00000034   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable16_8  ;; 0x41200000
   \   0000003C   0x6081             STR      R1,[R0, #+8]
    939          		Filter[i].Fs = 16000;    //sop1hc: 16000
   \   0000003E   0xF44F 0x507A      MOV      R0,#+16000
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable13_8
   \   00000046   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000048   0x2234             MOVS     R2,#+52
   \   0000004A   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   0000004E   0x8008             STRH     R0,[R1, #+0]
    940          		Filter[i].Out_MicChannels = 1;
   \   00000050   0x2001             MOVS     R0,#+1
   \   00000052   0x.... 0x....      LDR.W    R1,??DataTable13_8
   \   00000056   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000058   0x2234             MOVS     R2,#+52
   \   0000005A   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   0000005E   0x81C8             STRH     R0,[R1, #+14]
    941          		Filter[i].In_MicChannels = 1;
   \   00000060   0x2001             MOVS     R0,#+1
   \   00000062   0x.... 0x....      LDR.W    R1,??DataTable13_8
   \   00000066   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000068   0x2234             MOVS     R2,#+52
   \   0000006A   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   0000006E   0x8188             STRH     R0,[R1, #+12]
    942          		PDM_Filter_Init((PDMFilter_InitStruct *)&Filter[i]);
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable13_8
   \   00000074   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000076   0x2134             MOVS     R1,#+52
   \   00000078   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   0000007C   0x.... 0x....      BL       PDM_Filter_Init
    943          	}
   \   00000080   0x1C64             ADDS     R4,R4,#+1
   \   00000082   0xE7C7             B.N      ??SPI5_Init_0
    944          
    945          
    946            hspi5.Instance = SPI5;
   \                     ??SPI5_Init_1: (+1)
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable13_3  ;; 0x40015000
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   0000008C   0x6008             STR      R0,[R1, #+0]
    947            hspi5.Init.Mode = SPI_MODE_SLAVE;
   \   0000008E   0x2000             MOVS     R0,#+0
   \   00000090   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   00000094   0x6048             STR      R0,[R1, #+4]
    948            hspi5.Init.Direction = SPI_DIRECTION_2LINES_RXONLY;//SPI_DIRECTION_2LINES_RXONLY
   \   00000096   0xF44F 0x6080      MOV      R0,#+1024
   \   0000009A   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   0000009E   0x6088             STR      R0,[R1, #+8]
    949            hspi5.Init.DataSize = SPI_DATASIZE_16BIT;
   \   000000A0   0xF44F 0x6070      MOV      R0,#+3840
   \   000000A4   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   000000A8   0x60C8             STR      R0,[R1, #+12]
    950            hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
   \   000000AA   0x2000             MOVS     R0,#+0
   \   000000AC   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   000000B0   0x6108             STR      R0,[R1, #+16]
    951            hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
   \   000000B2   0x2000             MOVS     R0,#+0
   \   000000B4   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   000000B8   0x6148             STR      R0,[R1, #+20]
    952            hspi5.Init.NSS = SPI_NSS_SOFT;//SPI_NSS_HARD_INPUT
   \   000000BA   0xF44F 0x7000      MOV      R0,#+512
   \   000000BE   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   000000C2   0x6188             STR      R0,[R1, #+24]
    953            hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
   \   000000C4   0x2000             MOVS     R0,#+0
   \   000000C6   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   000000CA   0x6208             STR      R0,[R1, #+32]
    954            hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
   \   000000CC   0x2000             MOVS     R0,#+0
   \   000000CE   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   000000D2   0x6248             STR      R0,[R1, #+36]
    955            hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLED;
   \   000000D4   0x2000             MOVS     R0,#+0
   \   000000D6   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   000000DA   0x6288             STR      R0,[R1, #+40]
    956            hspi5.Init.CRCPolynomial = 7;
   \   000000DC   0x2007             MOVS     R0,#+7
   \   000000DE   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   000000E2   0x62C8             STR      R0,[R1, #+44]
    957            hspi5.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
   \   000000E4   0x2000             MOVS     R0,#+0
   \   000000E6   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   000000EA   0x6308             STR      R0,[R1, #+48]
    958            hspi5.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
   \   000000EC   0x2000             MOVS     R0,#+0
   \   000000EE   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   000000F2   0x6348             STR      R0,[R1, #+52]
    959            //hspi5.RxISR = SPI5_CallBack;
    960            HAL_SPI_Init(&hspi5);
   \   000000F4   0x.... 0x....      LDR.W    R0,??DataTable13_2
   \   000000F8   0x.... 0x....      BL       HAL_SPI_Init
    961          
    962          
    963            //HAL_GPIO_WritePin(GPIOF,GPIO_PIN_6,GPIO_PIN_SET);
    964            /* Enable TXE, RXNE and ERR interrupt */
    965           //__HAL_SPI_ENABLE_IT(&hspi5, (SPI_IT_RXNE| SPI_IT_ERR));
    966          
    967           //__HAL_SPI_ENABLE(&hspi5);
    968          
    969          }
   \   000000FC   0xBD10             POP      {R4,PC}          ;; return
    970          

   \                                 In section .text, align 2, keep-with-next
    971          void SPI6_Init(void)
    972          {
   \                     SPI6_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    973          	
    974            hspi6.Instance = SPI6;
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable13_11  ;; 0x40015400
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    975            hspi6.Init.Mode = SPI_MODE_SLAVE;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   00000012   0x6048             STR      R0,[R1, #+4]
    976            hspi6.Init.Direction = SPI_DIRECTION_2LINES_RXONLY;//SPI_DIRECTION_2LINES_RXONLY
   \   00000014   0xF44F 0x6080      MOV      R0,#+1024
   \   00000018   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   0000001C   0x6088             STR      R0,[R1, #+8]
    977            hspi6.Init.DataSize = SPI_DATASIZE_16BIT;
   \   0000001E   0xF44F 0x6070      MOV      R0,#+3840
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   00000026   0x60C8             STR      R0,[R1, #+12]
    978            hspi6.Init.CLKPolarity = SPI_POLARITY_LOW;
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   0000002E   0x6108             STR      R0,[R1, #+16]
    979            hspi6.Init.CLKPhase = SPI_PHASE_1EDGE;
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   00000036   0x6148             STR      R0,[R1, #+20]
    980            hspi6.Init.NSS = SPI_NSS_SOFT;//SPI_NSS_HARD_INPUT
   \   00000038   0xF44F 0x7000      MOV      R0,#+512
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   00000040   0x6188             STR      R0,[R1, #+24]
    981            hspi6.Init.FirstBit = SPI_FIRSTBIT_MSB;
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   00000048   0x6208             STR      R0,[R1, #+32]
    982            hspi6.Init.TIMode = SPI_TIMODE_DISABLE;
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   00000050   0x6248             STR      R0,[R1, #+36]
    983            hspi6.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLED;
   \   00000052   0x2000             MOVS     R0,#+0
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   00000058   0x6288             STR      R0,[R1, #+40]
    984            hspi6.Init.CRCPolynomial = 7;
   \   0000005A   0x2007             MOVS     R0,#+7
   \   0000005C   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   00000060   0x62C8             STR      R0,[R1, #+44]
    985            hspi6.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
   \   00000062   0x2000             MOVS     R0,#+0
   \   00000064   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   00000068   0x6308             STR      R0,[R1, #+48]
    986            hspi6.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
   \   0000006A   0x2000             MOVS     R0,#+0
   \   0000006C   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   00000070   0x6348             STR      R0,[R1, #+52]
    987            //hspi6.RxISR = SPI6_CallBack;
    988            HAL_SPI_Init(&hspi6);
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   00000076   0x.... 0x....      BL       HAL_SPI_Init
    989          
    990          
    991            //HAL_GPIO_WritePin(GPIOF,GPIO_PIN_6,GPIO_PIN_SET);
    992            /* Enable TXE, RXNE and ERR interrupt */
    993           //__HAL_SPI_ENABLE_IT(&hspi6, (SPI_IT_RXNE| SPI_IT_ERR));
    994          
    995           //__HAL_SPI_ENABLE(&hspi6);
    996          
    997          }
   \   0000007A   0xBD01             POP      {R0,PC}          ;; return
    998          
    999          
   1000          
   1001          

   \                                 In section .text, align 2, keep-with-next
   1002          void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
   1003          {
   \                     HAL_SPI_MspInit: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
   \   00000004   0x0004             MOVS     R4,R0
   1004          
   1005            GPIO_InitTypeDef GPIO_InitStruct;
   1006            if (hspi->Instance==SPI1)
   \   00000006   0x6820             LDR      R0,[R4, #+0]
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable17  ;; 0x40013000
   \   0000000C   0x4288             CMP      R0,R1
   \   0000000E   0xD144             BNE.N    ??HAL_SPI_MspInit_0
   1007            {
   1008          	  /* USER CODE BEGIN SPI1_MspInit 0 */
   1009          	  
   1010          	  /* USER CODE END SPI1_MspInit 0 */
   1011          	  /* Peripheral clock enable */
   1012          	  __SPI1_CLK_ENABLE();
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40023844
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0xF450 0x5080      ORRS     R0,R0,#0x1000
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40023844
   \   0000001E   0x6008             STR      R0,[R1, #+0]
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40023844
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0xF410 0x5080      ANDS     R0,R0,#0x1000
   \   0000002A   0x9000             STR      R0,[SP, #+0]
   \   0000002C   0x9800             LDR      R0,[SP, #+0]
   1013          	  __GPIOA_CLK_ENABLE();
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable16_6  ;; 0x40023830
   \   0000003C   0x6008             STR      R0,[R1, #+0]
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   00000042   0x6800             LDR      R0,[R0, #+0]
   \   00000044   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000048   0x9000             STR      R0,[SP, #+0]
   \   0000004A   0x9800             LDR      R0,[SP, #+0]
   1014          	  __GPIOC_CLK_ENABLE();
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   00000050   0x6800             LDR      R0,[R0, #+0]
   \   00000052   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000056   0x.... 0x....      LDR.W    R1,??DataTable16_6  ;; 0x40023830
   \   0000005A   0x6008             STR      R0,[R1, #+0]
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   00000060   0x6800             LDR      R0,[R0, #+0]
   \   00000062   0xF010 0x0004      ANDS     R0,R0,#0x4
   \   00000066   0x9000             STR      R0,[SP, #+0]
   \   00000068   0x9800             LDR      R0,[SP, #+0]
   1015          	  
   1016          	  /**I2S1 GPIO Configuration	
   1017          		PA4 	------> I2S1_WS --> LRCKO
   1018          		PA5 	------> I2S1_CK --> BICKO
   1019          		PA7 	------> I2S1_SD --> SDO12
   1020          		PC4 	------> I2S1_MCK
   1021          		*/
   1022          		GPIO_InitStruct.Pin =  GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
   \   0000006A   0x20F0             MOVS     R0,#+240
   \   0000006C   0x9001             STR      R0,[SP, #+4]
   1023          		GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   0000006E   0x2002             MOVS     R0,#+2
   \   00000070   0x9002             STR      R0,[SP, #+8]
   1024          		GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   00000072   0x2000             MOVS     R0,#+0
   \   00000074   0x9003             STR      R0,[SP, #+12]
   1025          		GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
   \   00000076   0x2003             MOVS     R0,#+3
   \   00000078   0x9004             STR      R0,[SP, #+16]
   1026          		GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
   \   0000007A   0x2005             MOVS     R0,#+5
   \   0000007C   0x9005             STR      R0,[SP, #+20]
   1027          		HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
   \   0000007E   0xA901             ADD      R1,SP,#+4
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40020000
   \   00000084   0x.... 0x....      BL       HAL_GPIO_Init
   1028          	  
   1029          		//GPIO_InitStruct.Pin = GPIO_PIN_4;
   1030          		//GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   1031          		//GPIO_InitStruct.Pull = GPIO_NOPULL;
   1032          		//GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
   1033          		//GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
   1034          		//HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
   1035          		
   1036          	  /* Peripheral interrupt init*/
   1037          		HAL_NVIC_SetPriority(SPI1_IRQn, INTERRUPT_PRI_SDO12, 0);
   \   00000088   0x2200             MOVS     R2,#+0
   \   0000008A   0x2100             MOVS     R1,#+0
   \   0000008C   0x2023             MOVS     R0,#+35
   \   0000008E   0x.... 0x....      BL       HAL_NVIC_SetPriority
   1038          		HAL_NVIC_EnableIRQ(SPI1_IRQn);
   \   00000092   0x2023             MOVS     R0,#+35
   \   00000094   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
   \   00000098   0xE295             B.N      ??HAL_SPI_MspInit_1
   1039          	  /* USER CODE BEGIN SPI1_MspInit 1 */
   1040          	  
   1041          	  /* USER CODE END SPI1_MspInit 1 */
   1042          
   1043            }
   1044            else if (hspi->Instance==SPI2)
   \                     ??HAL_SPI_MspInit_0: (+1)
   \   0000009A   0x6820             LDR      R0,[R4, #+0]
   \   0000009C   0x.... 0x....      LDR.W    R1,??DataTable17_3  ;; 0x40003800
   \   000000A0   0x4288             CMP      R0,R1
   \   000000A2   0xD163             BNE.N    ??HAL_SPI_MspInit_2
   1045            {
   1046          	  /* USER CODE BEGIN SPI2_MspInit 0 */
   1047          	  
   1048          	  /* USER CODE END SPI2_MspInit 0 */
   1049          		/* Peripheral clock enable */
   1050          		__SPI2_CLK_ENABLE();
   \   000000A4   0x.... 0x....      LDR.W    R0,??DataTable17_4  ;; 0x40023840
   \   000000A8   0x6800             LDR      R0,[R0, #+0]
   \   000000AA   0xF450 0x4080      ORRS     R0,R0,#0x4000
   \   000000AE   0x.... 0x....      LDR.W    R1,??DataTable17_4  ;; 0x40023840
   \   000000B2   0x6008             STR      R0,[R1, #+0]
   \   000000B4   0x.... 0x....      LDR.W    R0,??DataTable17_4  ;; 0x40023840
   \   000000B8   0x6800             LDR      R0,[R0, #+0]
   \   000000BA   0xF410 0x4080      ANDS     R0,R0,#0x4000
   \   000000BE   0x9000             STR      R0,[SP, #+0]
   \   000000C0   0x9800             LDR      R0,[SP, #+0]
   1051          		__GPIOI_CLK_ENABLE();
   \   000000C2   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   000000C6   0x6800             LDR      R0,[R0, #+0]
   \   000000C8   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   000000CC   0x.... 0x....      LDR.W    R1,??DataTable16_6  ;; 0x40023830
   \   000000D0   0x6008             STR      R0,[R1, #+0]
   \   000000D2   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   000000D6   0x6800             LDR      R0,[R0, #+0]
   \   000000D8   0xF410 0x7080      ANDS     R0,R0,#0x100
   \   000000DC   0x9000             STR      R0,[SP, #+0]
   \   000000DE   0x9800             LDR      R0,[SP, #+0]
   1052          		__GPIOB_CLK_ENABLE();
   \   000000E0   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   000000E4   0x6800             LDR      R0,[R0, #+0]
   \   000000E6   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   000000EA   0x.... 0x....      LDR.W    R1,??DataTable16_6  ;; 0x40023830
   \   000000EE   0x6008             STR      R0,[R1, #+0]
   \   000000F0   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   000000F4   0x6800             LDR      R0,[R0, #+0]
   \   000000F6   0xF010 0x0002      ANDS     R0,R0,#0x2
   \   000000FA   0x9000             STR      R0,[SP, #+0]
   \   000000FC   0x9800             LDR      R0,[SP, #+0]
   1053          		__GPIOC_CLK_ENABLE();
   \   000000FE   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   00000102   0x6800             LDR      R0,[R0, #+0]
   \   00000104   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000108   0x.... 0x....      LDR.W    R1,??DataTable16_6  ;; 0x40023830
   \   0000010C   0x6008             STR      R0,[R1, #+0]
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   00000112   0x6800             LDR      R0,[R0, #+0]
   \   00000114   0xF010 0x0004      ANDS     R0,R0,#0x4
   \   00000118   0x9000             STR      R0,[SP, #+0]
   \   0000011A   0x9800             LDR      R0,[SP, #+0]
   1054          	  
   1055          		/**I2S2 GPIO Configuration	   
   1056          		PC1 	------> I2S2_SD  : PI3 PC1 PC3 PB15 	
   1057          		PB13	 ------> I2S2_CK :PD3 PB10 PB13 PA9 PI1 
   1058          		PB12	 ------> I2S2_WS : PB12 PI0 PB4 PB9  
   1059          	  
   1060          	  
   1061          		*/
   1062          		GPIO_InitStruct.Pin = GPIO_PIN_1; //SD
   \   0000011C   0x2002             MOVS     R0,#+2
   \   0000011E   0x9001             STR      R0,[SP, #+4]
   1063          		GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   00000120   0x2002             MOVS     R0,#+2
   \   00000122   0x9002             STR      R0,[SP, #+8]
   1064          		GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   00000124   0x2000             MOVS     R0,#+0
   \   00000126   0x9003             STR      R0,[SP, #+12]
   1065          		GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
   \   00000128   0x2003             MOVS     R0,#+3
   \   0000012A   0x9004             STR      R0,[SP, #+16]
   1066          		GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
   \   0000012C   0x2005             MOVS     R0,#+5
   \   0000012E   0x9005             STR      R0,[SP, #+20]
   1067          		HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
   \   00000130   0xA901             ADD      R1,SP,#+4
   \   00000132   0x.... 0x....      LDR.W    R0,??DataTable17_5  ;; 0x40020800
   \   00000136   0x.... 0x....      BL       HAL_GPIO_Init
   1068          	  
   1069          		GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;//WS --> GPIO_PIN_12
   \   0000013A   0xF44F 0x5040      MOV      R0,#+12288
   \   0000013E   0x9001             STR      R0,[SP, #+4]
   1070          		GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   00000140   0x2002             MOVS     R0,#+2
   \   00000142   0x9002             STR      R0,[SP, #+8]
   1071          		GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   00000144   0x2000             MOVS     R0,#+0
   \   00000146   0x9003             STR      R0,[SP, #+12]
   1072          		GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
   \   00000148   0x2003             MOVS     R0,#+3
   \   0000014A   0x9004             STR      R0,[SP, #+16]
   1073          		GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
   \   0000014C   0x2005             MOVS     R0,#+5
   \   0000014E   0x9005             STR      R0,[SP, #+20]
   1074          		HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
   \   00000150   0xA901             ADD      R1,SP,#+4
   \   00000152   0x.... 0x....      LDR.W    R0,??DataTable17_6  ;; 0x40020400
   \   00000156   0x.... 0x....      BL       HAL_GPIO_Init
   1075          	  
   1076          	  
   1077          		/* Peripheral interrupt init*/
   1078          		HAL_NVIC_SetPriority(SPI2_IRQn, INTERRUPT_PRI_SDO34, 0);
   \   0000015A   0x2200             MOVS     R2,#+0
   \   0000015C   0x2101             MOVS     R1,#+1
   \   0000015E   0x2024             MOVS     R0,#+36
   \   00000160   0x.... 0x....      BL       HAL_NVIC_SetPriority
   1079          		HAL_NVIC_EnableIRQ(SPI2_IRQn);
   \   00000164   0x2024             MOVS     R0,#+36
   \   00000166   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
   \   0000016A   0xE22C             B.N      ??HAL_SPI_MspInit_1
   1080          		/* USER CODE BEGIN SPI2_MspInit 1 */
   1081          	  
   1082          	  /* USER CODE END SPI2_MspInit 1 */
   1083          
   1084          
   1085            }
   1086            else if (hspi->Instance==SPI3)
   \                     ??HAL_SPI_MspInit_2: (+1)
   \   0000016C   0x6820             LDR      R0,[R4, #+0]
   \   0000016E   0x.... 0x....      LDR.W    R1,??DataTable17_7  ;; 0x40003c00
   \   00000172   0x4288             CMP      R0,R1
   \   00000174   0xF040 0x80CF      BNE.W    ??HAL_SPI_MspInit_3
   1087            {
   1088          	  
   1089              /**I2S3 GPIO Configuration    
   1090                 PB2     ------> I2S3_SD
   1091                 PA15     ------> I2S3_WS (LRCK)
   1092                 PB3     ------> I2S3_CK 
   1093          	   PC7    ------> MCLK
   1094              */
   1095           
   1096            /* USER CODE BEGIN SPI3_MspInit 1 */
   1097            __SPI3_CLK_ENABLE();
   \   00000178   0x.... 0x....      LDR.W    R0,??DataTable17_4  ;; 0x40023840
   \   0000017C   0x6800             LDR      R0,[R0, #+0]
   \   0000017E   0xF450 0x4000      ORRS     R0,R0,#0x8000
   \   00000182   0x.... 0x....      LDR.W    R1,??DataTable17_4  ;; 0x40023840
   \   00000186   0x6008             STR      R0,[R1, #+0]
   \   00000188   0x.... 0x....      LDR.W    R0,??DataTable17_4  ;; 0x40023840
   \   0000018C   0x6800             LDR      R0,[R0, #+0]
   \   0000018E   0xF410 0x4000      ANDS     R0,R0,#0x8000
   \   00000192   0x9000             STR      R0,[SP, #+0]
   \   00000194   0x9800             LDR      R0,[SP, #+0]
   1098            __GPIOA_CLK_ENABLE();
   \   00000196   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   0000019A   0x6800             LDR      R0,[R0, #+0]
   \   0000019C   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000001A0   0x.... 0x....      LDR.W    R1,??DataTable16_6  ;; 0x40023830
   \   000001A4   0x6008             STR      R0,[R1, #+0]
   \   000001A6   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   000001AA   0x6800             LDR      R0,[R0, #+0]
   \   000001AC   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   000001B0   0x9000             STR      R0,[SP, #+0]
   \   000001B2   0x9800             LDR      R0,[SP, #+0]
   1099            __GPIOB_CLK_ENABLE();
   \   000001B4   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   000001B8   0x6800             LDR      R0,[R0, #+0]
   \   000001BA   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   000001BE   0x.... 0x....      LDR.W    R1,??DataTable16_6  ;; 0x40023830
   \   000001C2   0x6008             STR      R0,[R1, #+0]
   \   000001C4   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   000001C8   0x6800             LDR      R0,[R0, #+0]
   \   000001CA   0xF010 0x0002      ANDS     R0,R0,#0x2
   \   000001CE   0x9000             STR      R0,[SP, #+0]
   \   000001D0   0x9800             LDR      R0,[SP, #+0]
   1100          
   1101            GPIO_InitStruct.Pin = GPIO_PIN_3 | GPIO_PIN_2; 
   \   000001D2   0x200C             MOVS     R0,#+12
   \   000001D4   0x9001             STR      R0,[SP, #+4]
   1102            GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   000001D6   0x2002             MOVS     R0,#+2
   \   000001D8   0x9002             STR      R0,[SP, #+8]
   1103            GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
   \   000001DA   0x2003             MOVS     R0,#+3
   \   000001DC   0x9004             STR      R0,[SP, #+16]
   1104            GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   000001DE   0x2000             MOVS     R0,#+0
   \   000001E0   0x9003             STR      R0,[SP, #+12]
   1105            GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
   \   000001E2   0x2006             MOVS     R0,#+6
   \   000001E4   0x9005             STR      R0,[SP, #+20]
   1106            HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
   \   000001E6   0xA901             ADD      R1,SP,#+4
   \   000001E8   0x.... 0x....      LDR.W    R0,??DataTable17_6  ;; 0x40020400
   \   000001EC   0x.... 0x....      BL       HAL_GPIO_Init
   1107          
   1108          
   1109            GPIO_InitStruct.Pin = GPIO_PIN_15;
   \   000001F0   0xF44F 0x4000      MOV      R0,#+32768
   \   000001F4   0x9001             STR      R0,[SP, #+4]
   1110            GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   000001F6   0x2002             MOVS     R0,#+2
   \   000001F8   0x9002             STR      R0,[SP, #+8]
   1111            GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
   \   000001FA   0x2006             MOVS     R0,#+6
   \   000001FC   0x9005             STR      R0,[SP, #+20]
   1112            HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
   \   000001FE   0xA901             ADD      R1,SP,#+4
   \   00000200   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x40020000
   \   00000204   0x.... 0x....      BL       HAL_GPIO_Init
   1113          
   1114          #ifdef CODEC_MCLK_ENABLED
   1115            __GPIOC_CLK_ENABLE();
   \   00000208   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   0000020C   0x6800             LDR      R0,[R0, #+0]
   \   0000020E   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000212   0x.... 0x....      LDR.W    R1,??DataTable16_6  ;; 0x40023830
   \   00000216   0x6008             STR      R0,[R1, #+0]
   \   00000218   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   0000021C   0x6800             LDR      R0,[R0, #+0]
   \   0000021E   0xF010 0x0004      ANDS     R0,R0,#0x4
   \   00000222   0x9000             STR      R0,[SP, #+0]
   \   00000224   0x9800             LDR      R0,[SP, #+0]
   1116            GPIO_InitStruct.Pin = GPIO_PIN_7; 
   \   00000226   0x2080             MOVS     R0,#+128
   \   00000228   0x9001             STR      R0,[SP, #+4]
   1117            GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   0000022A   0x2002             MOVS     R0,#+2
   \   0000022C   0x9002             STR      R0,[SP, #+8]
   1118            GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
   \   0000022E   0x2003             MOVS     R0,#+3
   \   00000230   0x9004             STR      R0,[SP, #+16]
   1119            GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   00000232   0x2000             MOVS     R0,#+0
   \   00000234   0x9003             STR      R0,[SP, #+12]
   1120            GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
   \   00000236   0x2006             MOVS     R0,#+6
   \   00000238   0x9005             STR      R0,[SP, #+20]
   1121            HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
   \   0000023A   0xA901             ADD      R1,SP,#+4
   \   0000023C   0x.... 0x....      LDR.W    R0,??DataTable17_5  ;; 0x40020800
   \   00000240   0x.... 0x....      BL       HAL_GPIO_Init
   1122          
   1123          #endif /* CODEC_MCLK_ENABLED */ 
   1124          
   1125          #ifdef I2S_INTERRUPT   
   1126               /* Enable and set Button EXTI Interrupt to the lowest priority */
   1127               //HAL_NVIC_SetPriority((IRQn_Type)SPI3_IRQn, 0x00, 0x01);
   1128               //HAL_NVIC_EnableIRQ((IRQn_Type)SPI3_IRQn);
   1129          
   1130               /* Enable the I2S DMA request */
   1131               //__HAL_I2S_ENABLE_IT(&hi2s3, SPI_I2S_DMAReq_Tx);
   1132               //__HAL_I2S_ENABLE(&hi2s3);
   1133            	    /* Peripheral interrupt init*/
   1134          		HAL_NVIC_SetPriority(SPI3_IRQn, 3, 0);
   1135          		HAL_NVIC_EnableIRQ(SPI3_IRQn);
   1136          #endif
   1137          
   1138                /* Enable the DMA clock */ 
   1139          	  __HAL_RCC_DMA1_CLK_ENABLE();
   \   00000244   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   00000248   0x6800             LDR      R0,[R0, #+0]
   \   0000024A   0xF450 0x1000      ORRS     R0,R0,#0x200000
   \   0000024E   0x.... 0x....      LDR.W    R1,??DataTable16_6  ;; 0x40023830
   \   00000252   0x6008             STR      R0,[R1, #+0]
   \   00000254   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   00000258   0x6800             LDR      R0,[R0, #+0]
   \   0000025A   0xF410 0x1000      ANDS     R0,R0,#0x200000
   \   0000025E   0x9000             STR      R0,[SP, #+0]
   \   00000260   0x9800             LDR      R0,[SP, #+0]
   1140          
   1141                /* Configure the DMA Stream */
   1142                //HAL_DMA_DeInit(&DmaHandle);
   1143          
   1144                /* Set the parameters to be configured */ 
   1145          	  DmaHandle.Instance = DMA1_Stream7;
   \   00000262   0x.... 0x....      LDR.W    R0,??DataTable17_8  ;; 0x400260b8
   \   00000266   0x.... 0x....      LDR.W    R1,??DataTable17_9
   \   0000026A   0x6008             STR      R0,[R1, #+0]
   1146                DmaHandle.Init.Channel = DMA_CHANNEL_0;
   \   0000026C   0x2000             MOVS     R0,#+0
   \   0000026E   0x.... 0x....      LDR.W    R1,??DataTable17_9
   \   00000272   0x6048             STR      R0,[R1, #+4]
   1147          	  DmaHandle.Init.Direction = DMA_MEMORY_TO_PERIPH;
   \   00000274   0x2040             MOVS     R0,#+64
   \   00000276   0x.... 0x....      LDR.W    R1,??DataTable17_9
   \   0000027A   0x6088             STR      R0,[R1, #+8]
   1148          	  DmaHandle.Init.PeriphInc = DMA_PINC_DISABLE;
   \   0000027C   0x2000             MOVS     R0,#+0
   \   0000027E   0x.... 0x....      LDR.W    R1,??DataTable17_9
   \   00000282   0x60C8             STR      R0,[R1, #+12]
   1149          	  DmaHandle.Init.MemInc = DMA_MINC_ENABLE;
   \   00000284   0xF44F 0x6080      MOV      R0,#+1024
   \   00000288   0x.... 0x....      LDR.W    R1,??DataTable17_9
   \   0000028C   0x6108             STR      R0,[R1, #+16]
   1150          	  DmaHandle.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
   \   0000028E   0xF44F 0x6000      MOV      R0,#+2048
   \   00000292   0x.... 0x....      LDR.W    R1,??DataTable17_9
   \   00000296   0x6148             STR      R0,[R1, #+20]
   1151                DmaHandle.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD; 
   \   00000298   0xF44F 0x5000      MOV      R0,#+8192
   \   0000029C   0x.... 0x....      LDR.W    R1,??DataTable17_9
   \   000002A0   0x6188             STR      R0,[R1, #+24]
   1152          	  DmaHandle.Init.Mode = DMA_NORMAL;
   \   000002A2   0x2000             MOVS     R0,#+0
   \   000002A4   0x.... 0x....      LDR.W    R1,??DataTable17_9
   \   000002A8   0x61C8             STR      R0,[R1, #+28]
   1153                DmaHandle.Init.Priority = DMA_PRIORITY_HIGH; 
   \   000002AA   0xF45F 0x3000      MOVS     R0,#+131072
   \   000002AE   0x.... 0x....      LDR.W    R1,??DataTable17_9
   \   000002B2   0x6208             STR      R0,[R1, #+32]
   1154          	  DmaHandle.Init.FIFOMode = DMA_FIFOMODE_ENABLE;//DMA_FIFOMODE_DISABLE
   \   000002B4   0x2004             MOVS     R0,#+4
   \   000002B6   0x.... 0x....      LDR.W    R1,??DataTable17_9
   \   000002BA   0x6248             STR      R0,[R1, #+36]
   1155                DmaHandle.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
   \   000002BC   0x2003             MOVS     R0,#+3
   \   000002BE   0x.... 0x....      LDR.W    R1,??DataTable17_9
   \   000002C2   0x6288             STR      R0,[R1, #+40]
   1156                DmaHandle.Init.MemBurst = DMA_MBURST_SINGLE;
   \   000002C4   0x2000             MOVS     R0,#+0
   \   000002C6   0x.... 0x....      LDR.W    R1,??DataTable17_9
   \   000002CA   0x62C8             STR      R0,[R1, #+44]
   1157                DmaHandle.Init.PeriphBurst = DMA_PBURST_SINGLE;	  
   \   000002CC   0x2000             MOVS     R0,#+0
   \   000002CE   0x.... 0x....      LDR.W    R1,??DataTable17_9
   \   000002D2   0x6308             STR      R0,[R1, #+48]
   1158                //DmaHandle.Instance->PAR =(uint32_t)&SPI3->DR;//CODEC_I2S_ADDRESS
   1159                //DmaHandle.Instance->M0AR = (uint32_t)0;
   1160                //DmaHandle.Instance->NDTR = (uint32_t)0xFFFE;
   1161                //DmaHandle.XferCpltCallback = &TC_Callback;
   1162           
   1163          
   1164                /* Associate the initialized DMA handle to the the SPI handle */
   1165                __HAL_LINKDMA(hspi, hdmatx, DmaHandle);
   \   000002D4   0x.... 0x....      LDR.W    R0,??DataTable17_9
   \   000002D8   0x6560             STR      R0,[R4, #+84]
   \   000002DA   0x.... 0x....      LDR.W    R0,??DataTable17_9
   \   000002DE   0x6384             STR      R4,[R0, #+56]
   1166                //__HAL_DMA_ENABLE_IT(&DmaHandle, DMA_IT_TC);
   1167          
   1168          	   /* Deinitialize the Stream for new transfer */
   1169                 HAL_DMA_DeInit(&DmaHandle);
   \   000002E0   0x.... 0x....      LDR.W    R0,??DataTable17_9
   \   000002E4   0x.... 0x....      BL       HAL_DMA_DeInit
   1170                 /* Configure the DMA Stream */
   1171          	   HAL_DMA_Init(&DmaHandle);
   \   000002E8   0x.... 0x....      LDR.W    R0,??DataTable17_9
   \   000002EC   0x.... 0x....      BL       HAL_DMA_Init
   1172          
   1173                /* Set Interrupt Group Priority */
   1174                HAL_NVIC_SetPriority(DMA1_Stream7_IRQn, INTERRUPT_PRI_DMA, 0);
   \   000002F0   0x2200             MOVS     R2,#+0
   \   000002F2   0x2105             MOVS     R1,#+5
   \   000002F4   0x202F             MOVS     R0,#+47
   \   000002F6   0x.... 0x....      BL       HAL_NVIC_SetPriority
   1175                /* Enable the DMA STREAM global Interrupt */
   1176                HAL_NVIC_EnableIRQ(DMA1_Stream7_IRQn);    
   \   000002FA   0x202F             MOVS     R0,#+47
   \   000002FC   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
   1177          
   1178          	  __HAL_DMA_ENABLE_IT(&DmaHandle, DMA_IT_TC);
   \   00000300   0x.... 0x....      LDR.W    R0,??DataTable17_9
   \   00000304   0x6800             LDR      R0,[R0, #+0]
   \   00000306   0x6800             LDR      R0,[R0, #+0]
   \   00000308   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   0000030C   0x.... 0x....      LDR.W    R1,??DataTable17_9
   \   00000310   0x6809             LDR      R1,[R1, #+0]
   \   00000312   0x6008             STR      R0,[R1, #+0]
   \   00000314   0xE157             B.N      ??HAL_SPI_MspInit_1
   1179          	    
   1180            }
   1181            else if(hspi->Instance==SPI4)
   \                     ??HAL_SPI_MspInit_3: (+1)
   \   00000316   0x6820             LDR      R0,[R4, #+0]
   \   00000318   0x.... 0x....      LDR.W    R1,??DataTable17_10  ;; 0x40013400
   \   0000031C   0x4288             CMP      R0,R1
   \   0000031E   0xD135             BNE.N    ??HAL_SPI_MspInit_4
   1182            {
   1183            /* USER CODE BEGIN SPI4_MspInit 0 */
   1184          
   1185            /* USER CODE END SPI4_MspInit 0 */
   1186              /* Peripheral clock enable */
   1187              __SPI4_CLK_ENABLE();
   \   00000320   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40023844
   \   00000324   0x6800             LDR      R0,[R0, #+0]
   \   00000326   0xF450 0x5000      ORRS     R0,R0,#0x2000
   \   0000032A   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40023844
   \   0000032E   0x6008             STR      R0,[R1, #+0]
   \   00000330   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40023844
   \   00000334   0x6800             LDR      R0,[R0, #+0]
   \   00000336   0xF410 0x5000      ANDS     R0,R0,#0x2000
   \   0000033A   0x9000             STR      R0,[SP, #+0]
   \   0000033C   0x9800             LDR      R0,[SP, #+0]
   1188              __HAL_RCC_GPIOE_CLK_ENABLE();
   \   0000033E   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   00000342   0x6800             LDR      R0,[R0, #+0]
   \   00000344   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000348   0x.... 0x....      LDR.W    R1,??DataTable16_6  ;; 0x40023830
   \   0000034C   0x6008             STR      R0,[R1, #+0]
   \   0000034E   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   00000352   0x6800             LDR      R0,[R0, #+0]
   \   00000354   0xF010 0x0010      ANDS     R0,R0,#0x10
   \   00000358   0x9000             STR      R0,[SP, #+0]
   \   0000035A   0x9800             LDR      R0,[SP, #+0]
   1189            
   1190            
   1191              /**SPI4 GPIO Configuration    
   1192              PE2     ------> SPI4_SCK
   1193              PE4     ------> SPI4_NSS
   1194              PE5     ------> SPI4_MISO
   1195              PE6     ------> SPI4_MOSI 
   1196              */
   1197              GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6;
   \   0000035C   0x2074             MOVS     R0,#+116
   \   0000035E   0x9001             STR      R0,[SP, #+4]
   1198              GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   00000360   0x2002             MOVS     R0,#+2
   \   00000362   0x9002             STR      R0,[SP, #+8]
   1199              GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   00000364   0x2000             MOVS     R0,#+0
   \   00000366   0x9003             STR      R0,[SP, #+12]
   1200              GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
   \   00000368   0x2003             MOVS     R0,#+3
   \   0000036A   0x9004             STR      R0,[SP, #+16]
   1201              GPIO_InitStruct.Alternate = GPIO_AF5_SPI4;
   \   0000036C   0x2005             MOVS     R0,#+5
   \   0000036E   0x9005             STR      R0,[SP, #+20]
   1202              HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
   \   00000370   0xA901             ADD      R1,SP,#+4
   \   00000372   0x.... 0x....      LDR.W    R0,??DataTable17_11  ;; 0x40021000
   \   00000376   0x.... 0x....      BL       HAL_GPIO_Init
   1203          
   1204          	/* Peripheral interrupt init*/
   1205              HAL_NVIC_SetPriority(SPI4_IRQn, INTERRUPT_PRI_SDO56, 0);
   \   0000037A   0x2200             MOVS     R2,#+0
   \   0000037C   0x2102             MOVS     R1,#+2
   \   0000037E   0x2054             MOVS     R0,#+84
   \   00000380   0x.... 0x....      BL       HAL_NVIC_SetPriority
   1206              HAL_NVIC_EnableIRQ(SPI4_IRQn);
   \   00000384   0x2054             MOVS     R0,#+84
   \   00000386   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
   \   0000038A   0xE11C             B.N      ??HAL_SPI_MspInit_1
   1207          
   1208            /* USER CODE BEGIN SPI4_MspInit 1 */
   1209          
   1210            /* USER CODE END SPI4_MspInit 1 */
   1211            }
   1212            else if(hspi->Instance==SPI5)
   \                     ??HAL_SPI_MspInit_4: (+1)
   \   0000038C   0x6820             LDR      R0,[R4, #+0]
   \   0000038E   0x....             LDR.N    R1,??DataTable13_3  ;; 0x40015000
   \   00000390   0x4288             CMP      R0,R1
   \   00000392   0xF040 0x808A      BNE.W    ??HAL_SPI_MspInit_5
   1213            {
   1214            /* USER CODE BEGIN SPI5_MspInit 0 */
   1215          
   1216            /* USER CODE END SPI5_MspInit 0 */
   1217              /* Peripheral clock enable */
   1218              __HAL_RCC_SPI5_CLK_ENABLE();
   \   00000396   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40023844
   \   0000039A   0x6800             LDR      R0,[R0, #+0]
   \   0000039C   0xF450 0x1080      ORRS     R0,R0,#0x100000
   \   000003A0   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40023844
   \   000003A4   0x6008             STR      R0,[R1, #+0]
   \   000003A6   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40023844
   \   000003AA   0x6800             LDR      R0,[R0, #+0]
   \   000003AC   0xF410 0x1080      ANDS     R0,R0,#0x100000
   \   000003B0   0x9000             STR      R0,[SP, #+0]
   \   000003B2   0x9800             LDR      R0,[SP, #+0]
   1219              __HAL_RCC_GPIOF_CLK_ENABLE();
   \   000003B4   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   000003B8   0x6800             LDR      R0,[R0, #+0]
   \   000003BA   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   000003BE   0x.... 0x....      LDR.W    R1,??DataTable16_6  ;; 0x40023830
   \   000003C2   0x6008             STR      R0,[R1, #+0]
   \   000003C4   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   000003C8   0x6800             LDR      R0,[R0, #+0]
   \   000003CA   0xF010 0x0020      ANDS     R0,R0,#0x20
   \   000003CE   0x9000             STR      R0,[SP, #+0]
   \   000003D0   0x9800             LDR      R0,[SP, #+0]
   1220            
   1221              /**SPI5 GPIO Configuration    
   1222              PF7     ------> SPI5_SCK  --> PF7
   1223              PF11     ------> SPI5_MOSI --> PF9
   1224                               SPI5_MISO --> PF8
   1225                                    NSS   -->  PF6
   1226              */
   1227              GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_9|GPIO_PIN_8;
   \   000003D2   0xF44F 0x7070      MOV      R0,#+960
   \   000003D6   0x9001             STR      R0,[SP, #+4]
   1228              GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
   \   000003D8   0x2012             MOVS     R0,#+18
   \   000003DA   0x9002             STR      R0,[SP, #+8]
   1229              GPIO_InitStruct.Pull = GPIO_PULLUP;
   \   000003DC   0x2001             MOVS     R0,#+1
   \   000003DE   0x9003             STR      R0,[SP, #+12]
   1230              GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
   \   000003E0   0x2003             MOVS     R0,#+3
   \   000003E2   0x9004             STR      R0,[SP, #+16]
   1231              GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
   \   000003E4   0x2005             MOVS     R0,#+5
   \   000003E6   0x9005             STR      R0,[SP, #+20]
   1232              HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
   \   000003E8   0xA901             ADD      R1,SP,#+4
   \   000003EA   0x.... 0x....      LDR.W    R0,??DataTable18  ;; 0x40021400
   \   000003EE   0x.... 0x....      BL       HAL_GPIO_Init
   1233          
   1234          #if 0
   1235            /* Peripheral interrupt init*/
   1236              HAL_NVIC_SetPriority(SPI5_IRQn, INTERRUPT_PRI_SDO7, 0);
   1237              HAL_NVIC_EnableIRQ(SPI5_IRQn);
   1238          
   1239          #else
   1240          	/* Peripheral DMA init*/
   1241              __HAL_RCC_DMA2_CLK_ENABLE();
   \   000003F2   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   000003F6   0x6800             LDR      R0,[R0, #+0]
   \   000003F8   0xF450 0x0080      ORRS     R0,R0,#0x400000
   \   000003FC   0x.... 0x....      LDR.W    R1,??DataTable16_6  ;; 0x40023830
   \   00000400   0x6008             STR      R0,[R1, #+0]
   \   00000402   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   00000406   0x6800             LDR      R0,[R0, #+0]
   \   00000408   0xF410 0x0080      ANDS     R0,R0,#0x400000
   \   0000040C   0x9000             STR      R0,[SP, #+0]
   \   0000040E   0x9800             LDR      R0,[SP, #+0]
   1242          	hdma_spi5_rx.Instance = DMA2_Stream5;
   \   00000410   0x.... 0x....      LDR.W    R0,??DataTable18_1  ;; 0x40026488
   \   00000414   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   00000418   0x6008             STR      R0,[R1, #+0]
   1243          	hdma_spi5_rx.Init.Channel = DMA_CHANNEL_7;
   \   0000041A   0xF05F 0x6060      MOVS     R0,#+234881024
   \   0000041E   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   00000422   0x6048             STR      R0,[R1, #+4]
   1244          	hdma_spi5_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
   \   00000424   0x2000             MOVS     R0,#+0
   \   00000426   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   0000042A   0x6088             STR      R0,[R1, #+8]
   1245          	hdma_spi5_rx.Init.PeriphInc = DMA_PINC_DISABLE;
   \   0000042C   0x2000             MOVS     R0,#+0
   \   0000042E   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   00000432   0x60C8             STR      R0,[R1, #+12]
   1246          	hdma_spi5_rx.Init.MemInc = DMA_MINC_ENABLE;
   \   00000434   0xF44F 0x6080      MOV      R0,#+1024
   \   00000438   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   0000043C   0x6108             STR      R0,[R1, #+16]
   1247          	hdma_spi5_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
   \   0000043E   0xF44F 0x6000      MOV      R0,#+2048
   \   00000442   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   00000446   0x6148             STR      R0,[R1, #+20]
   1248          	hdma_spi5_rx.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
   \   00000448   0xF44F 0x5000      MOV      R0,#+8192
   \   0000044C   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   00000450   0x6188             STR      R0,[R1, #+24]
   1249          	hdma_spi5_rx.Init.Mode = DMA_NORMAL;
   \   00000452   0x2000             MOVS     R0,#+0
   \   00000454   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   00000458   0x61C8             STR      R0,[R1, #+28]
   1250          	hdma_spi5_rx.Init.Priority = DMA_PRIORITY_HIGH;
   \   0000045A   0xF45F 0x3000      MOVS     R0,#+131072
   \   0000045E   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   00000462   0x6208             STR      R0,[R1, #+32]
   1251          	hdma_spi5_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
   \   00000464   0x2000             MOVS     R0,#+0
   \   00000466   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   0000046A   0x6248             STR      R0,[R1, #+36]
   1252          	hdma_spi5_rx.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
   \   0000046C   0x2003             MOVS     R0,#+3
   \   0000046E   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   00000472   0x6288             STR      R0,[R1, #+40]
   1253          	hdma_spi5_rx.Init.MemBurst = DMA_MBURST_SINGLE;
   \   00000474   0x2000             MOVS     R0,#+0
   \   00000476   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   0000047A   0x62C8             STR      R0,[R1, #+44]
   1254          	hdma_spi5_rx.Init.PeriphBurst = DMA_PBURST_SINGLE;
   \   0000047C   0x2000             MOVS     R0,#+0
   \   0000047E   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   00000482   0x6308             STR      R0,[R1, #+48]
   1255          	HAL_DMA_Init(&hdma_spi5_rx);
   \   00000484   0x.... 0x....      LDR.W    R0,??DataTable18_2
   \   00000488   0x.... 0x....      BL       HAL_DMA_Init
   1256          
   1257              __HAL_LINKDMA(hspi,hdmarx,hdma_spi5_rx);
   \   0000048C   0x.... 0x....      LDR.W    R0,??DataTable18_2
   \   00000490   0x65A0             STR      R0,[R4, #+88]
   \   00000492   0x.... 0x....      LDR.W    R0,??DataTable18_2
   \   00000496   0x6384             STR      R4,[R0, #+56]
   1258          
   1259          	HAL_NVIC_SetPriority(DMA2_Stream5_IRQn, INTERRUPT_PRI_SDO7, 0);
   \   00000498   0x2200             MOVS     R2,#+0
   \   0000049A   0x2104             MOVS     R1,#+4
   \   0000049C   0x2044             MOVS     R0,#+68
   \   0000049E   0x.... 0x....      BL       HAL_NVIC_SetPriority
   1260          	HAL_NVIC_EnableIRQ(DMA2_Stream5_IRQn);
   \   000004A2   0x2044             MOVS     R0,#+68
   \   000004A4   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
   \   000004A8   0xE08D             B.N      ??HAL_SPI_MspInit_1
   1261          
   1262          #endif
   1263            /* USER CODE END SPI5_MspInit 1 */
   1264            }
   1265            else if(hspi->Instance==SPI6)
   \                     ??HAL_SPI_MspInit_5: (+1)
   \   000004AA   0x6820             LDR      R0,[R4, #+0]
   \   000004AC   0x....             LDR.N    R1,??DataTable13_11  ;; 0x40015400
   \   000004AE   0x4288             CMP      R0,R1
   \   000004B0   0xF040 0x8089      BNE.W    ??HAL_SPI_MspInit_1
   1266            {
   1267            /* USER CODE BEGIN SPI6_MspInit 0 */
   1268          
   1269            /* USER CODE END SPI6_MspInit 0 */
   1270              /* Peripheral clock enable */
   1271              __SPI6_CLK_ENABLE();
   \   000004B4   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40023844
   \   000004B8   0x6800             LDR      R0,[R0, #+0]
   \   000004BA   0xF450 0x1000      ORRS     R0,R0,#0x200000
   \   000004BE   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40023844
   \   000004C2   0x6008             STR      R0,[R1, #+0]
   \   000004C4   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40023844
   \   000004C8   0x6800             LDR      R0,[R0, #+0]
   \   000004CA   0xF410 0x1000      ANDS     R0,R0,#0x200000
   \   000004CE   0x9000             STR      R0,[SP, #+0]
   \   000004D0   0x9800             LDR      R0,[SP, #+0]
   1272              __HAL_RCC_GPIOG_CLK_ENABLE();
   \   000004D2   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   000004D6   0x6800             LDR      R0,[R0, #+0]
   \   000004D8   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   000004DC   0x.... 0x....      LDR.W    R1,??DataTable16_6  ;; 0x40023830
   \   000004E0   0x6008             STR      R0,[R1, #+0]
   \   000004E2   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   000004E6   0x6800             LDR      R0,[R0, #+0]
   \   000004E8   0xF010 0x0040      ANDS     R0,R0,#0x40
   \   000004EC   0x9000             STR      R0,[SP, #+0]
   \   000004EE   0x9800             LDR      R0,[SP, #+0]
   1273            
   1274              /**SPI6 GPIO Configuration    
   1275              PG13     ------> SPI6_SCK
   1276              PG14     ------> SPI6_MOSI 
   1277              */
   1278              GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14;
   \   000004F0   0xF44F 0x40C0      MOV      R0,#+24576
   \   000004F4   0x9001             STR      R0,[SP, #+4]
   1279              GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   000004F6   0x2002             MOVS     R0,#+2
   \   000004F8   0x9002             STR      R0,[SP, #+8]
   1280              GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   000004FA   0x2000             MOVS     R0,#+0
   \   000004FC   0x9003             STR      R0,[SP, #+12]
   1281              GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
   \   000004FE   0x2003             MOVS     R0,#+3
   \   00000500   0x9004             STR      R0,[SP, #+16]
   1282              GPIO_InitStruct.Alternate = GPIO_AF5_SPI6;
   \   00000502   0x2005             MOVS     R0,#+5
   \   00000504   0x9005             STR      R0,[SP, #+20]
   1283              HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
   \   00000506   0xA901             ADD      R1,SP,#+4
   \   00000508   0x.... 0x....      LDR.W    R0,??DataTable18_3  ;; 0x40021800
   \   0000050C   0x.... 0x....      BL       HAL_GPIO_Init
   1284          
   1285          #if 0
   1286          	  /* Peripheral interrupt init*/
   1287              HAL_NVIC_SetPriority(SPI6_IRQn, INTERRUPT_PRI_SDO8, 1);
   1288              HAL_NVIC_EnableIRQ(SPI6_IRQn);
   1289          #else
   1290          	/* Peripheral DMA init*/
   1291          	__HAL_RCC_DMA2_CLK_ENABLE();
   \   00000510   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   00000514   0x6800             LDR      R0,[R0, #+0]
   \   00000516   0xF450 0x0080      ORRS     R0,R0,#0x400000
   \   0000051A   0x.... 0x....      LDR.W    R1,??DataTable16_6  ;; 0x40023830
   \   0000051E   0x6008             STR      R0,[R1, #+0]
   \   00000520   0x.... 0x....      LDR.W    R0,??DataTable16_6  ;; 0x40023830
   \   00000524   0x6800             LDR      R0,[R0, #+0]
   \   00000526   0xF410 0x0080      ANDS     R0,R0,#0x400000
   \   0000052A   0x9000             STR      R0,[SP, #+0]
   \   0000052C   0x9800             LDR      R0,[SP, #+0]
   1292          	hdma_spi6_rx.Instance = DMA2_Stream6;
   \   0000052E   0x.... 0x....      LDR.W    R0,??DataTable18_4  ;; 0x400264a0
   \   00000532   0x.... 0x....      LDR.W    R1,??DataTable18_5
   \   00000536   0x6008             STR      R0,[R1, #+0]
   1293          	hdma_spi6_rx.Init.Channel = DMA_CHANNEL_1;
   \   00000538   0xF05F 0x7000      MOVS     R0,#+33554432
   \   0000053C   0x.... 0x....      LDR.W    R1,??DataTable18_5
   \   00000540   0x6048             STR      R0,[R1, #+4]
   1294          	hdma_spi6_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
   \   00000542   0x2000             MOVS     R0,#+0
   \   00000544   0x.... 0x....      LDR.W    R1,??DataTable18_5
   \   00000548   0x6088             STR      R0,[R1, #+8]
   1295          	hdma_spi6_rx.Init.PeriphInc = DMA_PINC_DISABLE;
   \   0000054A   0x2000             MOVS     R0,#+0
   \   0000054C   0x.... 0x....      LDR.W    R1,??DataTable18_5
   \   00000550   0x60C8             STR      R0,[R1, #+12]
   1296          	hdma_spi6_rx.Init.MemInc = DMA_MINC_ENABLE;
   \   00000552   0xF44F 0x6080      MOV      R0,#+1024
   \   00000556   0x.... 0x....      LDR.W    R1,??DataTable18_5
   \   0000055A   0x6108             STR      R0,[R1, #+16]
   1297          	hdma_spi6_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
   \   0000055C   0xF44F 0x6000      MOV      R0,#+2048
   \   00000560   0x.... 0x....      LDR.W    R1,??DataTable18_5
   \   00000564   0x6148             STR      R0,[R1, #+20]
   1298          	hdma_spi6_rx.Init.MemDataAlignment = DMA_PDATAALIGN_HALFWORD;
   \   00000566   0xF44F 0x6000      MOV      R0,#+2048
   \   0000056A   0x.... 0x....      LDR.W    R1,??DataTable18_5
   \   0000056E   0x6188             STR      R0,[R1, #+24]
   1299          	hdma_spi6_rx.Init.Mode = DMA_NORMAL;
   \   00000570   0x2000             MOVS     R0,#+0
   \   00000572   0x.... 0x....      LDR.W    R1,??DataTable18_5
   \   00000576   0x61C8             STR      R0,[R1, #+28]
   1300          	hdma_spi6_rx.Init.Priority = DMA_PRIORITY_HIGH;
   \   00000578   0xF45F 0x3000      MOVS     R0,#+131072
   \   0000057C   0x.... 0x....      LDR.W    R1,??DataTable18_5
   \   00000580   0x6208             STR      R0,[R1, #+32]
   1301          	hdma_spi6_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
   \   00000582   0x2000             MOVS     R0,#+0
   \   00000584   0x.... 0x....      LDR.W    R1,??DataTable18_5
   \   00000588   0x6248             STR      R0,[R1, #+36]
   1302          	hdma_spi6_rx.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
   \   0000058A   0x2003             MOVS     R0,#+3
   \   0000058C   0x.... 0x....      LDR.W    R1,??DataTable18_5
   \   00000590   0x6288             STR      R0,[R1, #+40]
   1303          	hdma_spi6_rx.Init.MemBurst = DMA_MBURST_SINGLE;
   \   00000592   0x2000             MOVS     R0,#+0
   \   00000594   0x.... 0x....      LDR.W    R1,??DataTable18_5
   \   00000598   0x62C8             STR      R0,[R1, #+44]
   1304          	hdma_spi6_rx.Init.PeriphBurst = DMA_PBURST_SINGLE;
   \   0000059A   0x2000             MOVS     R0,#+0
   \   0000059C   0x.... 0x....      LDR.W    R1,??DataTable18_5
   \   000005A0   0x6308             STR      R0,[R1, #+48]
   1305          	HAL_DMA_Init(&hdma_spi6_rx);
   \   000005A2   0x.... 0x....      LDR.W    R0,??DataTable18_5
   \   000005A6   0x.... 0x....      BL       HAL_DMA_Init
   1306          
   1307          	__HAL_LINKDMA(hspi,hdmarx,hdma_spi6_rx);
   \   000005AA   0x.... 0x....      LDR.W    R0,??DataTable18_5
   \   000005AE   0x65A0             STR      R0,[R4, #+88]
   \   000005B0   0x.... 0x....      LDR.W    R0,??DataTable18_5
   \   000005B4   0x6384             STR      R4,[R0, #+56]
   1308          
   1309          	HAL_NVIC_SetPriority(DMA2_Stream6_IRQn, INTERRUPT_PRI_SDO8, 1);
   \   000005B6   0x2201             MOVS     R2,#+1
   \   000005B8   0x2107             MOVS     R1,#+7
   \   000005BA   0x2045             MOVS     R0,#+69
   \   000005BC   0x.... 0x....      BL       HAL_NVIC_SetPriority
   1310          	HAL_NVIC_EnableIRQ(DMA2_Stream6_IRQn);
   \   000005C0   0x2045             MOVS     R0,#+69
   \   000005C2   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
   1311          
   1312          #endif
   1313            }
   1314          
   1315          }
   \                     ??HAL_SPI_MspInit_1: (+1)
   \   000005C6   0xB006             ADD      SP,SP,#+24
   \   000005C8   0xBD10             POP      {R4,PC}          ;; return
   1316          
   1317          
   1318          
   1319          

   \                                 In section .text, align 2, keep-with-next
   1320          static void SPI_I2S_SendData(SPI_TypeDef* SPIx, uint16_t Data)
   1321          {
   1322            /* Check the parameters */
   1323            assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
   1324            
   1325            /* Write in the DR register the data to be sent */
   1326            SPIx->DR = Data;
   \                     SPI_I2S_SendData: (+1)
   \   00000000   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000002   0x60C1             STR      R1,[R0, #+12]
   1327          }
   \   00000004   0x4770             BX       LR               ;; return
   1328          
   1329          

   \                                 In section .text, align 2, keep-with-next
   1330          static uint16_t SPI_I2S_ReceiveData(SPI_TypeDef* SPIx)
   1331          {
   1332            /* Check the parameters */
   1333            assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
   1334            
   1335            /* Return the data in the DR register */
   1336            return SPIx->DR;
   \                     SPI_I2S_ReceiveData: (+1)
   \   00000000   0x68C0             LDR      R0,[R0, #+12]
   \   00000002   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000004   0x4770             BX       LR               ;; return
   1337          }
   1338          
   1339          

   \                                 In section .text, align 2, keep-with-next
   1340          void RecordUpdBuf(void)
   1341          {
   1342          
   1343               if (WaveRecord_flgInt==2)
   \                     RecordUpdBuf: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable18_6
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2802             CMP      R0,#+2
   \   00000008   0xF040 0x8167      BNE.W    ??RecordUpdBuf_0
   1344               {
   1345                  WaveRecord_flgInt=0;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable18_6
   \   00000012   0x7008             STRB     R0,[R1, #+0]
   1346          			if ((WaveRec_idxSens1 < (AUDIO_OUT_BUFFER_SIZE))&&(WaveRec_idxSens2 < (AUDIO_OUT_BUFFER_SIZE)))
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable18_7
   \   00000018   0x8800             LDRH     R0,[R0, #+0]
   \   0000001A   0xF5B0 0x6F80      CMP      R0,#+1024
   \   0000001E   0xF280 0x815C      BGE.W    ??RecordUpdBuf_0
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable18_8
   \   00000026   0x8800             LDRH     R0,[R0, #+0]
   \   00000028   0xF5B0 0x6F80      CMP      R0,#+1024
   \   0000002C   0xF280 0x8155      BGE.W    ??RecordUpdBuf_0
   1347          		//			  &&(stLR!=stLROld))
   1348          			{
   1349          		/*-------------------------------------------------------------------------------------------------------------
   1350          					  
   1351          			Sequence  Record Data					  Processing Data				  Player Data
   1352          					  
   1353          			1-------  Buffer1						  Buffer2						  Buffer3 BUF3_PLAY)
   1354          					  
   1355          			2-------  Buffer3						  Buffer1						  Buffer2 (BUF2_PLAY)		  
   1356          					  
   1357          			3-------  Buffer2						  Buffer3						  Buffer1 (BUF1_PLAY)
   1358          		 ---------------------------------------------------------------------------------------------------------------*/
   1359          					  /* Recording Audio Data */						 
   1360          					   switch (buffer_switch)
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable18_9
   \   00000034   0x7800             LDRB     R0,[R0, #+0]
   \   00000036   0x2800             CMP      R0,#+0
   \   00000038   0xD004             BEQ.N    ??RecordUpdBuf_1
   \   0000003A   0x2802             CMP      R0,#+2
   \   0000003C   0xF000 0x80E2      BEQ.W    ??RecordUpdBuf_2
   \   00000040   0xD370             BCC.N    ??RecordUpdBuf_3
   \   00000042   0xE14A             B.N      ??RecordUpdBuf_4
   1361          					   {
   1362          								case BUF1_PLAY:
   1363          
   1364          										Buffer2.bufMIC1[WaveRec_idxSens1++] = vRawSens1;
   \                     ??RecordUpdBuf_1: (+1)
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable18_7
   \   00000048   0x8800             LDRH     R0,[R0, #+0]
   \   0000004A   0x1C41             ADDS     R1,R0,#+1
   \   0000004C   0x.... 0x....      LDR.W    R2,??DataTable18_7
   \   00000050   0x8011             STRH     R1,[R2, #+0]
   \   00000052   0x.... 0x....      LDR.W    R1,??DataTable18_10
   \   00000056   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000005A   0x.... 0x....      LDR.W    R2,??DataTable18_11  ;; 0xc00080a0
   \   0000005E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000060   0xF822 0x1010      STRH     R1,[R2, R0, LSL #+1]
   1365          										Buffer2.bufMIC2[WaveRec_idxSens2++] = vRawSens2;
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable18_8
   \   00000068   0x8800             LDRH     R0,[R0, #+0]
   \   0000006A   0x1C41             ADDS     R1,R0,#+1
   \   0000006C   0x.... 0x....      LDR.W    R2,??DataTable18_8
   \   00000070   0x8011             STRH     R1,[R2, #+0]
   \   00000072   0x.... 0x....      LDR.W    R1,??DataTable18_12
   \   00000076   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000007A   0x.... 0x....      LDR.W    R2,??DataTable18_11  ;; 0xc00080a0
   \   0000007E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000080   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   00000084   0xF241 0x0214      MOVW     R2,#+4116
   \   00000088   0x5211             STRH     R1,[R2, R0]
   1366          										Buffer2.bufMIC3[WaveRec_idxSens3++] = vRawSens3;
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable18_13
   \   0000008E   0x8800             LDRH     R0,[R0, #+0]
   \   00000090   0x1C41             ADDS     R1,R0,#+1
   \   00000092   0x.... 0x....      LDR.W    R2,??DataTable18_13
   \   00000096   0x8011             STRH     R1,[R2, #+0]
   \   00000098   0x.... 0x....      LDR.W    R1,??DataTable18_14
   \   0000009C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000000A0   0x.... 0x....      LDR.W    R2,??DataTable18_11  ;; 0xc00080a0
   \   000000A4   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000A6   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000000AA   0xF242 0x0228      MOVW     R2,#+8232
   \   000000AE   0x5211             STRH     R1,[R2, R0]
   1367          										Buffer2.bufMIC4[WaveRec_idxSens4++] = vRawSens4;
   \   000000B0   0x.... 0x....      LDR.W    R0,??DataTable18_15
   \   000000B4   0x8800             LDRH     R0,[R0, #+0]
   \   000000B6   0x1C41             ADDS     R1,R0,#+1
   \   000000B8   0x.... 0x....      LDR.W    R2,??DataTable18_15
   \   000000BC   0x8011             STRH     R1,[R2, #+0]
   \   000000BE   0x.... 0x....      LDR.W    R1,??DataTable18_16
   \   000000C2   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000000C6   0x.... 0x....      LDR.W    R2,??DataTable18_11  ;; 0xc00080a0
   \   000000CA   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000CC   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000000D0   0xF243 0x023C      MOVW     R2,#+12348
   \   000000D4   0x5211             STRH     R1,[R2, R0]
   1368          										Buffer2.bufMIC5[WaveRec_idxSens5++] = vRawSens5;
   \   000000D6   0x.... 0x....      LDR.W    R0,??DataTable18_17
   \   000000DA   0x8800             LDRH     R0,[R0, #+0]
   \   000000DC   0x1C41             ADDS     R1,R0,#+1
   \   000000DE   0x.... 0x....      LDR.W    R2,??DataTable18_17
   \   000000E2   0x8011             STRH     R1,[R2, #+0]
   \   000000E4   0x.... 0x....      LDR.W    R1,??DataTable18_18
   \   000000E8   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000000EC   0x.... 0x....      LDR.W    R2,??DataTable18_11  ;; 0xc00080a0
   \   000000F0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000F2   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000000F6   0xF244 0x0250      MOVW     R2,#+16464
   \   000000FA   0x5211             STRH     R1,[R2, R0]
   1369          										Buffer2.bufMIC6[WaveRec_idxSens6++] = vRawSens6;
   \   000000FC   0x.... 0x....      LDR.W    R0,??DataTable18_19
   \   00000100   0x8800             LDRH     R0,[R0, #+0]
   \   00000102   0x1C41             ADDS     R1,R0,#+1
   \   00000104   0x.... 0x....      LDR.W    R2,??DataTable18_19
   \   00000108   0x8011             STRH     R1,[R2, #+0]
   \   0000010A   0x.... 0x....      LDR.W    R1,??DataTable18_20
   \   0000010E   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000112   0x.... 0x....      LDR.W    R2,??DataTable18_11  ;; 0xc00080a0
   \   00000116   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000118   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   0000011C   0xF245 0x0264      MOVW     R2,#+20580
   \   00000120   0x5211             STRH     R1,[R2, R0]
   1370          	
   1371          										break;
   \   00000122   0xE0DA             B.N      ??RecordUpdBuf_0
   1372          								case BUF2_PLAY:
   1373          
   1374          										Buffer3.bufMIC1[WaveRec_idxSens1++] = vRawSens1;
   \                     ??RecordUpdBuf_3: (+1)
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable18_7
   \   00000128   0x8800             LDRH     R0,[R0, #+0]
   \   0000012A   0x1C41             ADDS     R1,R0,#+1
   \   0000012C   0x.... 0x....      LDR.W    R2,??DataTable18_7
   \   00000130   0x8011             STRH     R1,[R2, #+0]
   \   00000132   0x.... 0x....      LDR.W    R1,??DataTable18_10
   \   00000136   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000013A   0x.... 0x....      LDR.W    R2,??DataTable18_21  ;; 0xc0010140
   \   0000013E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000140   0xF822 0x1010      STRH     R1,[R2, R0, LSL #+1]
   1375          										Buffer3.bufMIC2[WaveRec_idxSens2++] = vRawSens2;
   \   00000144   0x.... 0x....      LDR.W    R0,??DataTable18_8
   \   00000148   0x8800             LDRH     R0,[R0, #+0]
   \   0000014A   0x1C41             ADDS     R1,R0,#+1
   \   0000014C   0x.... 0x....      LDR.W    R2,??DataTable18_8
   \   00000150   0x8011             STRH     R1,[R2, #+0]
   \   00000152   0x.... 0x....      LDR.W    R1,??DataTable18_12
   \   00000156   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000015A   0x.... 0x....      LDR.W    R2,??DataTable18_21  ;; 0xc0010140
   \   0000015E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000160   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   00000164   0xF241 0x0214      MOVW     R2,#+4116
   \   00000168   0x5211             STRH     R1,[R2, R0]
   1376          										Buffer3.bufMIC3[WaveRec_idxSens3++] = vRawSens3;
   \   0000016A   0x.... 0x....      LDR.W    R0,??DataTable18_13
   \   0000016E   0x8800             LDRH     R0,[R0, #+0]
   \   00000170   0x1C41             ADDS     R1,R0,#+1
   \   00000172   0x.... 0x....      LDR.W    R2,??DataTable18_13
   \   00000176   0x8011             STRH     R1,[R2, #+0]
   \   00000178   0x.... 0x....      LDR.W    R1,??DataTable18_14
   \   0000017C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000180   0x.... 0x....      LDR.W    R2,??DataTable18_21  ;; 0xc0010140
   \   00000184   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000186   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   0000018A   0xF242 0x0228      MOVW     R2,#+8232
   \   0000018E   0x5211             STRH     R1,[R2, R0]
   1377          										Buffer3.bufMIC4[WaveRec_idxSens4++] = vRawSens4;
   \   00000190   0x.... 0x....      LDR.W    R0,??DataTable18_15
   \   00000194   0x8800             LDRH     R0,[R0, #+0]
   \   00000196   0x1C41             ADDS     R1,R0,#+1
   \   00000198   0x.... 0x....      LDR.W    R2,??DataTable18_15
   \   0000019C   0x8011             STRH     R1,[R2, #+0]
   \   0000019E   0x.... 0x....      LDR.W    R1,??DataTable18_16
   \   000001A2   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000001A6   0x.... 0x....      LDR.W    R2,??DataTable18_21  ;; 0xc0010140
   \   000001AA   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001AC   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000001B0   0xF243 0x023C      MOVW     R2,#+12348
   \   000001B4   0x5211             STRH     R1,[R2, R0]
   1378          										Buffer3.bufMIC5[WaveRec_idxSens5++] = vRawSens5;
   \   000001B6   0x.... 0x....      LDR.W    R0,??DataTable18_17
   \   000001BA   0x8800             LDRH     R0,[R0, #+0]
   \   000001BC   0x1C41             ADDS     R1,R0,#+1
   \   000001BE   0x.... 0x....      LDR.W    R2,??DataTable18_17
   \   000001C2   0x8011             STRH     R1,[R2, #+0]
   \   000001C4   0x.... 0x....      LDR.W    R1,??DataTable18_18
   \   000001C8   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000001CC   0x.... 0x....      LDR.W    R2,??DataTable18_21  ;; 0xc0010140
   \   000001D0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001D2   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000001D6   0xF244 0x0250      MOVW     R2,#+16464
   \   000001DA   0x5211             STRH     R1,[R2, R0]
   1379          										Buffer3.bufMIC6[WaveRec_idxSens6++] = vRawSens6;
   \   000001DC   0x.... 0x....      LDR.W    R0,??DataTable18_19
   \   000001E0   0x8800             LDRH     R0,[R0, #+0]
   \   000001E2   0x1C41             ADDS     R1,R0,#+1
   \   000001E4   0x.... 0x....      LDR.W    R2,??DataTable18_19
   \   000001E8   0x8011             STRH     R1,[R2, #+0]
   \   000001EA   0x.... 0x....      LDR.W    R1,??DataTable18_20
   \   000001EE   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000001F2   0x.... 0x....      LDR.W    R2,??DataTable18_21  ;; 0xc0010140
   \   000001F6   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001F8   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000001FC   0xF245 0x0264      MOVW     R2,#+20580
   \   00000200   0x5211             STRH     R1,[R2, R0]
   1380          		
   1381          
   1382          										break;
   \   00000202   0xE06A             B.N      ??RecordUpdBuf_0
   1383          								case BUF3_PLAY:
   1384          
   1385          										Buffer1.bufMIC1[WaveRec_idxSens1++] = vRawSens1;
   \                     ??RecordUpdBuf_2: (+1)
   \   00000204   0x.... 0x....      LDR.W    R0,??DataTable18_7
   \   00000208   0x8800             LDRH     R0,[R0, #+0]
   \   0000020A   0x1C41             ADDS     R1,R0,#+1
   \   0000020C   0x.... 0x....      LDR.W    R2,??DataTable18_7
   \   00000210   0x8011             STRH     R1,[R2, #+0]
   \   00000212   0x.... 0x....      LDR.W    R1,??DataTable18_10
   \   00000216   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000021A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000021C   0x0040             LSLS     R0,R0,#+1
   \   0000021E   0xF1B0 0x4080      SUBS     R0,R0,#+1073741824
   \   00000222   0x8001             STRH     R1,[R0, #+0]
   1386          										Buffer1.bufMIC2[ WaveRec_idxSens2++] = vRawSens2;
   \   00000224   0x.... 0x....      LDR.W    R0,??DataTable18_8
   \   00000228   0x8800             LDRH     R0,[R0, #+0]
   \   0000022A   0x1C41             ADDS     R1,R0,#+1
   \   0000022C   0x.... 0x....      LDR.W    R2,??DataTable18_8
   \   00000230   0x8011             STRH     R1,[R2, #+0]
   \   00000232   0x.... 0x....      LDR.W    R1,??DataTable18_12
   \   00000236   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000023A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000023C   0x0040             LSLS     R0,R0,#+1
   \   0000023E   0xF1B0 0x4080      SUBS     R0,R0,#+1073741824
   \   00000242   0xF241 0x0214      MOVW     R2,#+4116
   \   00000246   0x5211             STRH     R1,[R2, R0]
   1387          										Buffer1.bufMIC3[WaveRec_idxSens3++] = vRawSens3;
   \   00000248   0x.... 0x....      LDR.W    R0,??DataTable18_13
   \   0000024C   0x8800             LDRH     R0,[R0, #+0]
   \   0000024E   0x1C41             ADDS     R1,R0,#+1
   \   00000250   0x.... 0x....      LDR.W    R2,??DataTable18_13
   \   00000254   0x8011             STRH     R1,[R2, #+0]
   \   00000256   0x.... 0x....      LDR.W    R1,??DataTable18_14
   \   0000025A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000025E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000260   0x0040             LSLS     R0,R0,#+1
   \   00000262   0xF1B0 0x4080      SUBS     R0,R0,#+1073741824
   \   00000266   0xF242 0x0228      MOVW     R2,#+8232
   \   0000026A   0x5211             STRH     R1,[R2, R0]
   1388          										Buffer1.bufMIC4[ WaveRec_idxSens4++] = vRawSens4;
   \   0000026C   0x.... 0x....      LDR.W    R0,??DataTable18_15
   \   00000270   0x8800             LDRH     R0,[R0, #+0]
   \   00000272   0x1C41             ADDS     R1,R0,#+1
   \   00000274   0x.... 0x....      LDR.W    R2,??DataTable18_15
   \   00000278   0x8011             STRH     R1,[R2, #+0]
   \   0000027A   0x.... 0x....      LDR.W    R1,??DataTable18_16
   \   0000027E   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000282   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000284   0x0040             LSLS     R0,R0,#+1
   \   00000286   0xF1B0 0x4080      SUBS     R0,R0,#+1073741824
   \   0000028A   0xF243 0x023C      MOVW     R2,#+12348
   \   0000028E   0x5211             STRH     R1,[R2, R0]
   1389          										Buffer1.bufMIC5[WaveRec_idxSens5++] = vRawSens5;
   \   00000290   0x.... 0x....      LDR.W    R0,??DataTable18_17
   \   00000294   0x8800             LDRH     R0,[R0, #+0]
   \   00000296   0x1C41             ADDS     R1,R0,#+1
   \   00000298   0x.... 0x....      LDR.W    R2,??DataTable18_17
   \   0000029C   0x8011             STRH     R1,[R2, #+0]
   \   0000029E   0x.... 0x....      LDR.W    R1,??DataTable18_18
   \   000002A2   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000002A6   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000002A8   0x0040             LSLS     R0,R0,#+1
   \   000002AA   0xF1B0 0x4080      SUBS     R0,R0,#+1073741824
   \   000002AE   0xF244 0x0250      MOVW     R2,#+16464
   \   000002B2   0x5211             STRH     R1,[R2, R0]
   1390          										Buffer1.bufMIC6[ WaveRec_idxSens6++] = vRawSens6;
   \   000002B4   0x.... 0x....      LDR.W    R0,??DataTable18_19
   \   000002B8   0x8800             LDRH     R0,[R0, #+0]
   \   000002BA   0x1C41             ADDS     R1,R0,#+1
   \   000002BC   0x.... 0x....      LDR.W    R2,??DataTable18_19
   \   000002C0   0x8011             STRH     R1,[R2, #+0]
   \   000002C2   0x.... 0x....      LDR.W    R1,??DataTable18_20
   \   000002C6   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000002CA   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000002CC   0x0040             LSLS     R0,R0,#+1
   \   000002CE   0xF1B0 0x4080      SUBS     R0,R0,#+1073741824
   \   000002D2   0xF245 0x0264      MOVW     R2,#+20580
   \   000002D6   0x5211             STRH     R1,[R2, R0]
   1391          										break;
   \   000002D8   0xE7FF             B.N      ??RecordUpdBuf_0
   1392          								default:
   1393          										break; 
   1394          					   }
   1395          				
   1396          				}
   1397                               
   1398               	}
   1399          }
   \                     ??RecordUpdBuf_4: (+1)
   \                     ??RecordUpdBuf_0: (+1)
   \   000002DA   0x4770             BX       LR               ;; return
   \   000002DC                      REQUIRE Buffer2
   \   000002DC                      REQUIRE Buffer3
   \   000002DC                      REQUIRE Buffer1
   1400          
   1401          

   \                                 In section .text, align 2, keep-with-next
   1402          void DMA2_Stream5_IRQHandler(void)
   1403          {
   \                     DMA2_Stream5_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1404            /* USER CODE BEGIN DMA2_Stream5_IRQn 0 */
   1405          
   1406            /* USER CODE END DMA2_Stream5_IRQn 0 */
   1407            HAL_DMA_IRQHandler(&hdma_spi5_rx);
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable18_2
   \   00000006   0x.... 0x....      BL       HAL_DMA_IRQHandler
   1408            /* USER CODE BEGIN DMA2_Stream5_IRQn 1 */
   1409          
   1410            /* USER CODE END DMA2_Stream5_IRQn 1 */
   1411          }
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return
   1412          
   1413          /**
   1414          * @brief This function handles DMA2 stream6 global interrupt.
   1415          */

   \                                 In section .text, align 2, keep-with-next
   1416          void DMA2_Stream6_IRQHandler(void)
   1417          {
   \                     DMA2_Stream6_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1418            /* USER CODE BEGIN DMA2_Stream6_IRQn 0 */
   1419          
   1420            /* USER CODE END DMA2_Stream6_IRQn 0 */
   1421            HAL_DMA_IRQHandler(&hdma_spi6_rx);
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable18_5
   \   00000006   0x.... 0x....      BL       HAL_DMA_IRQHandler
   1422            /* USER CODE BEGIN DMA2_Stream6_IRQn 1 */
   1423          
   1424            /* USER CODE END DMA2_Stream6_IRQn 1 */
   1425          }
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return
   1426          

   \                                 In section .text, align 2, keep-with-next
   1427          void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
   1428          {
   \                     HAL_SPI_RxCpltCallback: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   1429              if(hspi->Instance==SPI1)
   \   00000004   0x6820             LDR      R0,[R4, #+0]
   \   00000006   0x....             LDR.N    R1,??DataTable17  ;; 0x40013000
   \   00000008   0x4288             CMP      R0,R1
   \   0000000A   0xD02E             BEQ.N    ??HAL_SPI_RxCpltCallback_0
   1430              {
   1431                  /* Copy Data to Record Buffer */
   1432          		//RecordUpdBuf();
   1433          		//XferCplt = 1;
   1434                  //Audio_Play_Out();
   1435              }
   1436              else if (hspi->Instance==SPI2)
   \   0000000C   0x6820             LDR      R0,[R4, #+0]
   \   0000000E   0x....             LDR.N    R1,??DataTable17_3  ;; 0x40003800
   \   00000010   0x4288             CMP      R0,R1
   \   00000012   0xD02A             BEQ.N    ??HAL_SPI_RxCpltCallback_0
   1437              {
   1438          
   1439              }
   1440              else if (hspi->Instance==SPI4)
   \   00000014   0x6820             LDR      R0,[R4, #+0]
   \   00000016   0x....             LDR.N    R1,??DataTable17_10  ;; 0x40013400
   \   00000018   0x4288             CMP      R0,R1
   \   0000001A   0xD026             BEQ.N    ??HAL_SPI_RxCpltCallback_0
   1441              {
   1442          
   1443              }
   1444              else if (hspi->Instance==SPI5)
   \   0000001C   0x6820             LDR      R0,[R4, #+0]
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable18_22  ;; 0x40015000
   \   00000022   0x4288             CMP      R0,R1
   \   00000024   0xD121             BNE.N    ??HAL_SPI_RxCpltCallback_0
   1445              {
   1446           #if 1
   1447                  swtSDO7^=0x01;
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable18_23
   \   0000002A   0x7800             LDRB     R0,[R0, #+0]
   \   0000002C   0xF090 0x0001      EORS     R0,R0,#0x1
   \   00000030   0x.... 0x....      LDR.W    R1,??DataTable18_23
   \   00000034   0x7008             STRB     R0,[R1, #+0]
   1448                  WaveRecord_flgSDO7Finish = 1;
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable18_24
   \   0000003C   0x7008             STRB     R0,[R1, #+0]
   1449                  if (swtSDO7==0x01)
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable18_23
   \   00000042   0x7800             LDRB     R0,[R0, #+0]
   \   00000044   0x2801             CMP      R0,#+1
   \   00000046   0xD108             BNE.N    ??HAL_SPI_RxCpltCallback_1
   1450                  {
   1451                      HAL_SPI_Receive_DMA(&hspi5,( uint8_t *)TestSDO7_1,4*AUDIO_OUT_BUFFER_SIZE);
   \   00000048   0xF44F 0x5280      MOV      R2,#+4096
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable18_25
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable18_26
   \   00000054   0x.... 0x....      BL       HAL_SPI_Receive_DMA
   \   00000058   0xE007             B.N      ??HAL_SPI_RxCpltCallback_0
   1452                  }
   1453                  else
   1454                  {
   1455                      HAL_SPI_Receive_DMA(&hspi5,( uint8_t *)TestSDO7,4*AUDIO_OUT_BUFFER_SIZE);
   \                     ??HAL_SPI_RxCpltCallback_1: (+1)
   \   0000005A   0xF44F 0x5280      MOV      R2,#+4096
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable18_27
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable18_26
   \   00000066   0x.... 0x....      BL       HAL_SPI_Receive_DMA
   1456                  }
   1457          #endif
   1458              }
   1459              else
   1460              {
   1461                
   1462              }
   1463              
   1464              if (hspi->Instance==SPI6) //MIC8
   \                     ??HAL_SPI_RxCpltCallback_0: (+1)
   \   0000006A   0x6820             LDR      R0,[R4, #+0]
   \   0000006C   0x.... 0x....      LDR.W    R1,??DataTable18_28  ;; 0x40015400
   \   00000070   0x4288             CMP      R0,R1
   \   00000072   0xF040 0x8124      BNE.W    ??HAL_SPI_RxCpltCallback_2
   1465              {
   1466          #if USB_STREAMING
   1467             /* Swapping bytes to prepare to PDM conversion */
   1468             for (uint16_t i=0; i< 4*(AUDIO_SAMPLING_FREQUENCY/1000);i++)
   \   00000076   0x2000             MOVS     R0,#+0
   \                     ??HAL_SPI_RxCpltCallback_3: (+1)
   \   00000078   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000007A   0x2840             CMP      R0,#+64
   \   0000007C   0xDA19             BGE.N    ??HAL_SPI_RxCpltCallback_4
   1469             {
   1470                 pDataMic8[i%64] = HTONS(TestSDO8[i]);     		
                        ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \   0000007E   0x.... 0x....      LDR.W    R1,??DataTable18_29
   \   00000082   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000084   0xF831 0x1010      LDRH     R1,[R1, R0, LSL #+1]
   \   00000088   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000008A   0x.... 0x....      LDR.W    R2,??DataTable18_29
   \   0000008E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000090   0xF832 0x2010      LDRH     R2,[R2, R0, LSL #+1]
   \   00000094   0x0212             LSLS     R2,R2,#+8
   \   00000096   0xEA52 0x2111      ORRS     R1,R2,R1, LSR #+8
   \   0000009A   0x.... 0x....      LDR.W    R2,??DataTable18_30
   \   0000009E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000A0   0x2340             MOVS     R3,#+64
   \   000000A2   0xFB90 0xF5F3      SDIV     R5,R0,R3
   \   000000A6   0xFB05 0x0513      MLS      R5,R5,R3,R0
   \   000000AA   0xF822 0x1015      STRH     R1,[R2, R5, LSL #+1]
   1471             }
   \   000000AE   0x1C40             ADDS     R0,R0,#+1
   \   000000B0   0xE7E2             B.N      ??HAL_SPI_RxCpltCallback_3
   1472             
   1473              /* PDM conversion for frame of 64 inputs, 16 outputs */
   1474              PDM_Filter_64_LSB((uint8_t *)pDataMic8,(uint16_t *)&pPDM2PCM[0], 64 ,
   1475                          (PDMFilter_InitStruct *)&Filter[1]);									
   \                     ??HAL_SPI_RxCpltCallback_4: (+1)
   \   000000B2   0x.... 0x....      LDR.W    R3,??DataTable18_31
   \   000000B6   0x2240             MOVS     R2,#+64
   \   000000B8   0x.... 0x....      LDR.W    R1,??DataTable18_32
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable18_30
   \   000000C0   0x.... 0x....      BL       PDM_Filter_64_LSB
   1476             
   1477              /* Update for left-right channel */
   1478              for (int16_t i=31; i>=0; i=i-2)
   \   000000C4   0x201F             MOVS     R0,#+31
   \                     ??HAL_SPI_RxCpltCallback_5: (+1)
   \   000000C6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000C8   0x2800             CMP      R0,#+0
   \   000000CA   0xF100 0x8090      BMI.W    ??HAL_SPI_RxCpltCallback_6
   1479              {
   1480          		/*-------------------------------------------------------------------------------------------------------------
   1481          			  
   1482          		Sequence  Record Data                     Processing Data                 Player Data
   1483          			  
   1484          		1-------  Buffer1                         Buffer2                         Buffer3
   1485          			  
   1486          		2-------  Buffer3                         Buffer1                         Buffer2		  
   1487          			  
   1488          		3-------  Buffer2                         Buffer3                         Buffer1 
   1489          		---------------------------------------------------------------------------------------------------------------*/
   1490          		/* Recording Audio Data */						
   1491          		switch (buffer_switch)
   \   000000CE   0x.... 0x....      LDR.W    R1,??DataTable18_9
   \   000000D2   0x7809             LDRB     R1,[R1, #+0]
   \   000000D4   0x2900             CMP      R1,#+0
   \   000000D6   0xD003             BEQ.N    ??HAL_SPI_RxCpltCallback_7
   \   000000D8   0x2902             CMP      R1,#+2
   \   000000DA   0xD05B             BEQ.N    ??HAL_SPI_RxCpltCallback_8
   \   000000DC   0xD32D             BCC.N    ??HAL_SPI_RxCpltCallback_9
   \   000000DE   0xE084             B.N      ??HAL_SPI_RxCpltCallback_10
   1492          		{
   1493          		 case BUF1_PLAY:							   
   1494          		   Buffer2.bufMIC8[idxFrmPDMMic8*32+i]  = pPDM2PCM[i/2];
                 		   ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??HAL_SPI_RxCpltCallback_7: (+1)
   \   000000E0   0x.... 0x....      LDR.W    R1,??DataTable18_33
   \   000000E4   0x8809             LDRH     R1,[R1, #+0]
   \   000000E6   0x.... 0x....      LDR.W    R2,??DataTable18_11  ;; 0xc00080a0
   \   000000EA   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000000EC   0x0149             LSLS     R1,R1,#+5
   \   000000EE   0xFA01 0xF180      SXTAH    R1,R1,R0
   \   000000F2   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   000000F6   0xF247 0x028C      MOVW     R2,#+28812
   \   000000FA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000FC   0x2302             MOVS     R3,#+2
   \   000000FE   0xFB90 0xF3F3      SDIV     R3,R0,R3
   \   00000102   0x.... 0x....      LDR.W    R5,??DataTable18_32
   \   00000106   0xF835 0x3013      LDRH     R3,[R5, R3, LSL #+1]
   \   0000010A   0x5253             STRH     R3,[R2, R1]
   1495          		   Buffer2.bufMIC8[idxFrmPDMMic8*32+i-1]= pPDM2PCM[i/2];
                 		   ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \   0000010C   0x.... 0x....      LDR.W    R1,??DataTable18_33
   \   00000110   0x8809             LDRH     R1,[R1, #+0]
   \   00000112   0x.... 0x....      LDR.W    R2,??DataTable18_11  ;; 0xc00080a0
   \   00000116   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000118   0x0149             LSLS     R1,R1,#+5
   \   0000011A   0xFA01 0xF180      SXTAH    R1,R1,R0
   \   0000011E   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00000122   0xF247 0x028A      MOVW     R2,#+28810
   \   00000126   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000128   0x2302             MOVS     R3,#+2
   \   0000012A   0xFB90 0xF3F3      SDIV     R3,R0,R3
   \   0000012E   0x.... 0x....      LDR.W    R5,??DataTable18_32
   \   00000132   0xF835 0x3013      LDRH     R3,[R5, R3, LSL #+1]
   \   00000136   0x5253             STRH     R3,[R2, R1]
   1496          		   break;
   \   00000138   0xE057             B.N      ??HAL_SPI_RxCpltCallback_11
   1497          		 case BUF2_PLAY:
   1498          		   Buffer3.bufMIC8[idxFrmPDMMic8*32+i]  = pPDM2PCM[i/2];
                 		   ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??HAL_SPI_RxCpltCallback_9: (+1)
   \   0000013A   0x.... 0x....      LDR.W    R1,??DataTable18_33
   \   0000013E   0x8809             LDRH     R1,[R1, #+0]
   \   00000140   0x.... 0x....      LDR.W    R2,??DataTable18_21  ;; 0xc0010140
   \   00000144   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000146   0x0149             LSLS     R1,R1,#+5
   \   00000148   0xFA01 0xF180      SXTAH    R1,R1,R0
   \   0000014C   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00000150   0xF247 0x028C      MOVW     R2,#+28812
   \   00000154   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000156   0x2302             MOVS     R3,#+2
   \   00000158   0xFB90 0xF3F3      SDIV     R3,R0,R3
   \   0000015C   0x.... 0x....      LDR.W    R5,??DataTable18_32
   \   00000160   0xF835 0x3013      LDRH     R3,[R5, R3, LSL #+1]
   \   00000164   0x5253             STRH     R3,[R2, R1]
   1499          		   Buffer3.bufMIC8[idxFrmPDMMic8*32+i-1]= pPDM2PCM[i/2];
                 		   ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \   00000166   0x.... 0x....      LDR.W    R1,??DataTable18_33
   \   0000016A   0x8809             LDRH     R1,[R1, #+0]
   \   0000016C   0x.... 0x....      LDR.W    R2,??DataTable18_21  ;; 0xc0010140
   \   00000170   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000172   0x0149             LSLS     R1,R1,#+5
   \   00000174   0xFA01 0xF180      SXTAH    R1,R1,R0
   \   00000178   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   0000017C   0xF247 0x028A      MOVW     R2,#+28810
   \   00000180   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000182   0x2302             MOVS     R3,#+2
   \   00000184   0xFB90 0xF3F3      SDIV     R3,R0,R3
   \   00000188   0x.... 0x....      LDR.W    R5,??DataTable18_32
   \   0000018C   0xF835 0x3013      LDRH     R3,[R5, R3, LSL #+1]
   \   00000190   0x5253             STRH     R3,[R2, R1]
   1500          		   break;
   \   00000192   0xE02A             B.N      ??HAL_SPI_RxCpltCallback_11
   1501          		 case BUF3_PLAY:
   1502          		   Buffer1.bufMIC8[idxFrmPDMMic8*32+i]  = pPDM2PCM[i/2];
                 		   ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??HAL_SPI_RxCpltCallback_8: (+1)
   \   00000194   0x.... 0x....      LDR.W    R1,??DataTable18_33
   \   00000198   0x8809             LDRH     R1,[R1, #+0]
   \   0000019A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000019C   0x0149             LSLS     R1,R1,#+5
   \   0000019E   0xFA01 0xF180      SXTAH    R1,R1,R0
   \   000001A2   0x0049             LSLS     R1,R1,#+1
   \   000001A4   0xF1B1 0x4180      SUBS     R1,R1,#+1073741824
   \   000001A8   0xF247 0x028C      MOVW     R2,#+28812
   \   000001AC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001AE   0x2302             MOVS     R3,#+2
   \   000001B0   0xFB90 0xF3F3      SDIV     R3,R0,R3
   \   000001B4   0x.... 0x....      LDR.W    R5,??DataTable18_32
   \   000001B8   0xF835 0x3013      LDRH     R3,[R5, R3, LSL #+1]
   \   000001BC   0x5253             STRH     R3,[R2, R1]
   1503          		   Buffer1.bufMIC8[idxFrmPDMMic8*32+i-1]= pPDM2PCM[i/2];
                 		   ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \   000001BE   0x.... 0x....      LDR.W    R1,??DataTable18_33
   \   000001C2   0x8809             LDRH     R1,[R1, #+0]
   \   000001C4   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000001C6   0x0149             LSLS     R1,R1,#+5
   \   000001C8   0xFA01 0xF180      SXTAH    R1,R1,R0
   \   000001CC   0x0049             LSLS     R1,R1,#+1
   \   000001CE   0xF1B1 0x4180      SUBS     R1,R1,#+1073741824
   \   000001D2   0xF247 0x028A      MOVW     R2,#+28810
   \   000001D6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001D8   0x2302             MOVS     R3,#+2
   \   000001DA   0xFB90 0xF3F3      SDIV     R3,R0,R3
   \   000001DE   0x.... 0x....      LDR.W    R5,??DataTable18_32
   \   000001E2   0xF835 0x3013      LDRH     R3,[R5, R3, LSL #+1]
   \   000001E6   0x5253             STRH     R3,[R2, R1]
   1504          		   break;
   \   000001E8   0xE7FF             B.N      ??HAL_SPI_RxCpltCallback_11
   1505          		 default:
   1506          		   break; 
   1507          		}
   1508              }
   \                     ??HAL_SPI_RxCpltCallback_10: (+1)
   \                     ??HAL_SPI_RxCpltCallback_11: (+1)
   \   000001EA   0x1E80             SUBS     R0,R0,#+2
   \   000001EC   0xE76B             B.N      ??HAL_SPI_RxCpltCallback_5
   1509             AudioUSBSend(idxFrmPDMMic8);
   \                     ??HAL_SPI_RxCpltCallback_6: (+1)
   \   000001EE   0x.... 0x....      LDR.W    R0,??DataTable18_33
   \   000001F2   0x8800             LDRH     R0,[R0, #+0]
   \   000001F4   0x.... 0x....      BL       AudioUSBSend
   1510          
   1511          
   1512          
   1513          
   1514             if(++idxFrmPDMMic8==(4*AUDIO_OUT_BUFFER_SIZE/64))
   \   000001F8   0x.... 0x....      LDR.W    R0,??DataTable18_33
   \   000001FC   0x8800             LDRH     R0,[R0, #+0]
   \   000001FE   0x1C40             ADDS     R0,R0,#+1
   \   00000200   0x.... 0x....      LDR.W    R1,??DataTable18_33
   \   00000204   0x8008             STRH     R0,[R1, #+0]
   \   00000206   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000208   0x2840             CMP      R0,#+64
   \   0000020A   0xD151             BNE.N    ??HAL_SPI_RxCpltCallback_12
   1515             {
   1516                 idxFrmPDMMic8 = 0;
   \   0000020C   0x2000             MOVS     R0,#+0
   \   0000020E   0x.... 0x....      LDR.W    R1,??DataTable18_33
   \   00000212   0x8008             STRH     R0,[R1, #+0]
   1517          		RESET_IDX
   \   00000214   0x2000             MOVS     R0,#+0
   \   00000216   0x.... 0x....      LDR.W    R1,??DataTable18_7
   \   0000021A   0x8008             STRH     R0,[R1, #+0]
   \   0000021C   0x2000             MOVS     R0,#+0
   \   0000021E   0x.... 0x....      LDR.W    R1,??DataTable18_8
   \   00000222   0x8008             STRH     R0,[R1, #+0]
   \   00000224   0x2000             MOVS     R0,#+0
   \   00000226   0x.... 0x....      LDR.W    R1,??DataTable18_34
   \   0000022A   0x8008             STRH     R0,[R1, #+0]
   \   0000022C   0x2000             MOVS     R0,#+0
   \   0000022E   0x.... 0x....      LDR.W    R1,??DataTable18_13
   \   00000232   0x8008             STRH     R0,[R1, #+0]
   \   00000234   0x2000             MOVS     R0,#+0
   \   00000236   0x.... 0x....      LDR.W    R1,??DataTable18_15
   \   0000023A   0x8008             STRH     R0,[R1, #+0]
   \   0000023C   0x2000             MOVS     R0,#+0
   \   0000023E   0x.... 0x....      LDR.W    R1,??DataTable18_35
   \   00000242   0x8008             STRH     R0,[R1, #+0]
   \   00000244   0x2000             MOVS     R0,#+0
   \   00000246   0x.... 0x....      LDR.W    R1,??DataTable18_17
   \   0000024A   0x8008             STRH     R0,[R1, #+0]
   \   0000024C   0x2000             MOVS     R0,#+0
   \   0000024E   0x.... 0x....      LDR.W    R1,??DataTable18_19
   \   00000252   0x8008             STRH     R0,[R1, #+0]
   \   00000254   0x2000             MOVS     R0,#+0
   \   00000256   0x.... 0x....      LDR.W    R1,??DataTable18_36
   \   0000025A   0x7008             STRB     R0,[R1, #+0]
   1518          		XferCplt = 0; // clear DMA interrupt flag
   \   0000025C   0x2000             MOVS     R0,#+0
   \   0000025E   0x.... 0x....      LDR.W    R1,??DataTable18_37
   \   00000262   0x6008             STR      R0,[R1, #+0]
   1519          		switch (buffer_switch)
   \   00000264   0x.... 0x....      LDR.W    R0,??DataTable18_9
   \   00000268   0x7800             LDRB     R0,[R0, #+0]
   \   0000026A   0x2800             CMP      R0,#+0
   \   0000026C   0xD003             BEQ.N    ??HAL_SPI_RxCpltCallback_13
   \   0000026E   0x2802             CMP      R0,#+2
   \   00000270   0xD00B             BEQ.N    ??HAL_SPI_RxCpltCallback_14
   \   00000272   0xD305             BCC.N    ??HAL_SPI_RxCpltCallback_15
   \   00000274   0xE00E             B.N      ??HAL_SPI_RxCpltCallback_16
   1520          		{
   1521                                  case BUF1_PLAY: 		
   1522                                    buffer_switch = BUF3_PLAY;
   \                     ??HAL_SPI_RxCpltCallback_13: (+1)
   \   00000276   0x2002             MOVS     R0,#+2
   \   00000278   0x.... 0x....      LDR.W    R1,??DataTable18_9
   \   0000027C   0x7008             STRB     R0,[R1, #+0]
   1523                                    break;
   \   0000027E   0xE009             B.N      ??HAL_SPI_RxCpltCallback_17
   1524                                  case BUF2_PLAY: 
   1525                                    buffer_switch = BUF1_PLAY;		
   \                     ??HAL_SPI_RxCpltCallback_15: (+1)
   \   00000280   0x2000             MOVS     R0,#+0
   \   00000282   0x.... 0x....      LDR.W    R1,??DataTable18_9
   \   00000286   0x7008             STRB     R0,[R1, #+0]
   1526                                    break;
   \   00000288   0xE004             B.N      ??HAL_SPI_RxCpltCallback_17
   1527                                  case BUF3_PLAY: 	
   1528                                    buffer_switch = BUF2_PLAY;
   \                     ??HAL_SPI_RxCpltCallback_14: (+1)
   \   0000028A   0x2001             MOVS     R0,#+1
   \   0000028C   0x.... 0x....      LDR.W    R1,??DataTable18_9
   \   00000290   0x7008             STRB     R0,[R1, #+0]
   1529                                    break;
   \   00000292   0xE7FF             B.N      ??HAL_SPI_RxCpltCallback_17
   1530                                  default:
   1531                                    break;
   1532          		}
   1533          
   1534          		/* Last player Frame is finished */
   1535          		AudioPlayerUpd(); 		
   \                     ??HAL_SPI_RxCpltCallback_16: (+1)
   \                     ??HAL_SPI_RxCpltCallback_17: (+1)
   \   00000294   0x.... 0x....      BL       AudioPlayerUpd
   1536          		if (cntStrt<100) cntStrt++;		   
   \   00000298   0x.... 0x....      LDR.W    R0,??DataTable18_38
   \   0000029C   0x8800             LDRH     R0,[R0, #+0]
   \   0000029E   0x2864             CMP      R0,#+100
   \   000002A0   0xDA06             BGE.N    ??HAL_SPI_RxCpltCallback_12
   \   000002A2   0x.... 0x....      LDR.W    R0,??DataTable18_38
   \   000002A6   0x8800             LDRH     R0,[R0, #+0]
   \   000002A8   0x1C40             ADDS     R0,R0,#+1
   \   000002AA   0x.... 0x....      LDR.W    R1,??DataTable18_38
   \   000002AE   0x8008             STRH     R0,[R1, #+0]
   1537             }
   1538             
   1539             HAL_SPI_Receive_DMA(&hspi6,( uint8_t *)TestSDO8,4*(AUDIO_SAMPLING_FREQUENCY/1000));
   \                     ??HAL_SPI_RxCpltCallback_12: (+1)
   \   000002B0   0x2240             MOVS     R2,#+64
   \   000002B2   0x.... 0x....      LDR.W    R1,??DataTable18_29
   \   000002B6   0x.... 0x....      LDR.W    R0,??DataTable18_39
   \   000002BA   0x.... 0x....      BL       HAL_SPI_Receive_DMA
   1540          
   1541          
   1542          #else
   1543              swtSDO8^=0x01;
   1544              WaveRecord_flgSDO8Finish = 1;
   1545              if (swtSDO8==0x01)
   1546              {
   1547                  HAL_SPI_Receive_DMA(&hspi6,( uint8_t *)TestSDO8_1,4*AUDIO_OUT_BUFFER_SIZE);
   1548              }
   1549              else
   1550              {
   1551                  HAL_SPI_Receive_DMA(&hspi6,( uint8_t *)TestSDO8,4*AUDIO_OUT_BUFFER_SIZE);
   1552          
   1553              }
   1554          #endif
   1555          
   1556            }
   1557          }
   \                     ??HAL_SPI_RxCpltCallback_2: (+1)
   \   000002BE   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   \   000002C0                      REQUIRE Buffer2
   \   000002C0                      REQUIRE Buffer3
   \   000002C0                      REQUIRE Buffer1
   1558          

   \                                 In section .text, align 2, keep-with-next
   1559          void PDM2PCMSDO78(void)
   1560          {
   \                     PDM2PCMSDO78: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1561          /*-------------------------------------------------------------------------------------------------------------
   1562          			  
   1563          	Sequence  Record Data					  Processing Data				  Player Data
   1564          			  
   1565          	1-------  Buffer1						  Buffer2				  Buffer3 BUF3_PLAY)
   1566          			  
   1567          	2-------  Buffer3						  Buffer1				  Buffer2 (BUF2_PLAY)		  
   1568          			  
   1569          	3-------  Buffer2						  Buffer3				  Buffer1 (BUF1_PLAY)
   1570           ---------------------------------------------------------------------------------------------------------------*/
   1571          
   1572              /* Data in Mic7 finished recording */
   1573              if (WaveRecord_flgSDO7Finish==1)
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable18_24
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x2801             CMP      R0,#+1
   \   0000000A   0xF040 0x80EB      BNE.W    ??PDM2PCMSDO78_0
   1574              {
   1575                  WaveRecord_flgSDO7Finish=0;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x.... 0x....      LDR.W    R1,??DataTable18_24
   \   00000014   0x7008             STRB     R0,[R1, #+0]
   1576          
   1577          	for (uint16_t i=0; i< 4*AUDIO_OUT_BUFFER_SIZE;i++)
   \   00000016   0x2400             MOVS     R4,#+0
   \                     ??PDM2PCMSDO78_1: (+1)
   \   00000018   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000001A   0xF5B4 0x5F80      CMP      R4,#+4096
   \   0000001E   0xDA7B             BGE.N    ??PDM2PCMSDO78_2
   1578          	{
   1579                      if(swtSDO7==0x01)
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable18_23
   \   00000024   0x7800             LDRB     R0,[R0, #+0]
   \   00000026   0x2801             CMP      R0,#+1
   \   00000028   0xD118             BNE.N    ??PDM2PCMSDO78_3
   1580                      {
   1581                          pDataMic7[i%64] = HTONS(TestSDO7[i]);
                                 ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable18_27
   \   0000002E   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000030   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   00000034   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable18_27
   \   0000003A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000003C   0xF831 0x1014      LDRH     R1,[R1, R4, LSL #+1]
   \   00000040   0x0209             LSLS     R1,R1,#+8
   \   00000042   0xEA51 0x2010      ORRS     R0,R1,R0, LSR #+8
   \   00000046   0x.... 0x....      LDR.W    R1,??DataTable18_40
   \   0000004A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000004C   0x2240             MOVS     R2,#+64
   \   0000004E   0xFB94 0xF3F2      SDIV     R3,R4,R2
   \   00000052   0xFB03 0x4312      MLS      R3,R3,R2,R4
   \   00000056   0xF821 0x0013      STRH     R0,[R1, R3, LSL #+1]
   \   0000005A   0xE017             B.N      ??PDM2PCMSDO78_4
   1582                      }
   1583                      else
   1584                      {
   1585                         pDataMic7[i%64] = HTONS(TestSDO7_1[i]);
                                ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??PDM2PCMSDO78_3: (+1)
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable18_25
   \   00000060   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000062   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   00000066   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000068   0x.... 0x....      LDR.W    R1,??DataTable18_25
   \   0000006C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000006E   0xF831 0x1014      LDRH     R1,[R1, R4, LSL #+1]
   \   00000072   0x0209             LSLS     R1,R1,#+8
   \   00000074   0xEA51 0x2010      ORRS     R0,R1,R0, LSR #+8
   \   00000078   0x.... 0x....      LDR.W    R1,??DataTable18_40
   \   0000007C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000007E   0x2240             MOVS     R2,#+64
   \   00000080   0xFB94 0xF3F2      SDIV     R3,R4,R2
   \   00000084   0xFB03 0x4312      MLS      R3,R3,R2,R4
   \   00000088   0xF821 0x0013      STRH     R0,[R1, R3, LSL #+1]
   1586          
   1587                      }
   1588          
   1589                      /* PDM conversion for frame of 64 inputs, 16 outputs */
   1590                      if (i%64==63)
   \                     ??PDM2PCMSDO78_4: (+1)
   \   0000008C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000008E   0x2040             MOVS     R0,#+64
   \   00000090   0xFB94 0xF1F0      SDIV     R1,R4,R0
   \   00000094   0xFB01 0x4110      MLS      R1,R1,R0,R4
   \   00000098   0x293F             CMP      R1,#+63
   \   0000009A   0xD13B             BNE.N    ??PDM2PCMSDO78_5
   1591                      {
   1592                        /* Recording Audio Data */						 
   1593                        switch (buffer_switch)
   \   0000009C   0x....             LDR.N    R0,??DataTable18_9
   \   0000009E   0x7800             LDRB     R0,[R0, #+0]
   \   000000A0   0x2800             CMP      R0,#+0
   \   000000A2   0xD003             BEQ.N    ??PDM2PCMSDO78_6
   \   000000A4   0x2802             CMP      R0,#+2
   \   000000A6   0xD025             BEQ.N    ??PDM2PCMSDO78_7
   \   000000A8   0xD312             BCC.N    ??PDM2PCMSDO78_8
   \   000000AA   0xE033             B.N      ??PDM2PCMSDO78_9
   1594                        {
   1595                          case BUF1_PLAY:								
   1596                                PDM_Filter_64_LSB((uint8_t *)pDataMic7,(uint16_t *)(Buffer2.bufMIC7 + (i/64)*16), 80 ,
   1597                                (PDMFilter_InitStruct *)&Filter[0]);
   \                     ??PDM2PCMSDO78_6: (+1)
   \   000000AC   0x.... 0x....      LDR.W    R3,??DataTable18_41
   \   000000B0   0x2250             MOVS     R2,#+80
   \   000000B2   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000B4   0x2040             MOVS     R0,#+64
   \   000000B6   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   000000BA   0x....             LDR.N    R1,??DataTable18_11  ;; 0xc00080a0
   \   000000BC   0xEB11 0x1040      ADDS     R0,R1,R0, LSL #+5
   \   000000C0   0xF500 0x41C0      ADD      R1,R0,#+24576
   \   000000C4   0x3178             ADDS     R1,R1,#+120
   \   000000C6   0x.... 0x....      LDR.W    R0,??DataTable18_40
   \   000000CA   0x.... 0x....      BL       PDM_Filter_64_LSB
   1598                                break;
   \   000000CE   0xE021             B.N      ??PDM2PCMSDO78_5
   1599                          case BUF2_PLAY:
   1600                                  PDM_Filter_64_LSB((uint8_t *)pDataMic7,(uint16_t *)(Buffer3.bufMIC7 + (i/64)*16), 80 ,
   1601                                  (PDMFilter_InitStruct *)&Filter[0]);	
   \                     ??PDM2PCMSDO78_8: (+1)
   \   000000D0   0x.... 0x....      LDR.W    R3,??DataTable18_41
   \   000000D4   0x2250             MOVS     R2,#+80
   \   000000D6   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000D8   0x2040             MOVS     R0,#+64
   \   000000DA   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   000000DE   0x....             LDR.N    R1,??DataTable18_21  ;; 0xc0010140
   \   000000E0   0xEB11 0x1040      ADDS     R0,R1,R0, LSL #+5
   \   000000E4   0xF500 0x41C0      ADD      R1,R0,#+24576
   \   000000E8   0x3178             ADDS     R1,R1,#+120
   \   000000EA   0x.... 0x....      LDR.W    R0,??DataTable18_40
   \   000000EE   0x.... 0x....      BL       PDM_Filter_64_LSB
   1602                                  break;
   \   000000F2   0xE00F             B.N      ??PDM2PCMSDO78_5
   1603                          case BUF3_PLAY:
   1604                                  PDM_Filter_64_LSB((uint8_t *)pDataMic7,(uint16_t *)(Buffer1.bufMIC7 + (i/64)*16), 80 ,
   1605                                  (PDMFilter_InitStruct *)&Filter[0]);									
   \                     ??PDM2PCMSDO78_7: (+1)
   \   000000F4   0x....             LDR.N    R3,??DataTable18_41
   \   000000F6   0x2250             MOVS     R2,#+80
   \   000000F8   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000FA   0x2040             MOVS     R0,#+64
   \   000000FC   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   00000100   0x0140             LSLS     R0,R0,#+5
   \   00000102   0xF1B0 0x4080      SUBS     R0,R0,#+1073741824
   \   00000106   0xF500 0x41C0      ADD      R1,R0,#+24576
   \   0000010A   0x3178             ADDS     R1,R1,#+120
   \   0000010C   0x....             LDR.N    R0,??DataTable18_40
   \   0000010E   0x.... 0x....      BL       PDM_Filter_64_LSB
   1606                                   break;
   \   00000112   0xE7FF             B.N      ??PDM2PCMSDO78_5
   1607                          default:
   1608                                   break; 
   1609                        }
   1610          	    }
   1611                  }//if (WaveRecord_flgSDO7Finish==1)
   \                     ??PDM2PCMSDO78_9: (+1)
   \                     ??PDM2PCMSDO78_5: (+1)
   \   00000114   0x1C64             ADDS     R4,R4,#+1
   \   00000116   0xE77F             B.N      ??PDM2PCMSDO78_1
   1612          
   1613                  /* Update for left-right channel */
   1614                  for (int16_t i=AUDIO_OUT_BUFFER_SIZE-1; i>=0;i--)
   \                     ??PDM2PCMSDO78_2: (+1)
   \   00000118   0xF240 0x30FF      MOVW     R0,#+1023
   \                     ??PDM2PCMSDO78_10: (+1)
   \   0000011C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000011E   0x2800             CMP      R0,#+0
   \   00000120   0xD460             BMI.N    ??PDM2PCMSDO78_0
   1615                  {
   1616                      /* Recording Audio Data */						 
   1617          	    switch (buffer_switch)
   \   00000122   0x....             LDR.N    R1,??DataTable18_9
   \   00000124   0x7809             LDRB     R1,[R1, #+0]
   \   00000126   0x2900             CMP      R1,#+0
   \   00000128   0xD003             BEQ.N    ??PDM2PCMSDO78_11
   \   0000012A   0x2902             CMP      R1,#+2
   \   0000012C   0xD03B             BEQ.N    ??PDM2PCMSDO78_12
   \   0000012E   0xD31D             BCC.N    ??PDM2PCMSDO78_13
   \   00000130   0xE056             B.N      ??PDM2PCMSDO78_14
   1618          	    {
   1619          	        case BUF1_PLAY:								
   1620                              Buffer2.bufMIC7[2*i+1]=  Buffer2.bufMIC7[i];
   \                     ??PDM2PCMSDO78_11: (+1)
   \   00000132   0x....             LDR.N    R1,??DataTable18_11  ;; 0xc00080a0
   \   00000134   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000136   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   0000013A   0xF246 0x0278      MOVW     R2,#+24696
   \   0000013E   0x5A51             LDRH     R1,[R2, R1]
   \   00000140   0x....             LDR.N    R2,??DataTable18_11  ;; 0xc00080a0
   \   00000142   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000144   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000148   0xF246 0x037A      MOVW     R3,#+24698
   \   0000014C   0x5299             STRH     R1,[R3, R2]
   1621          		    Buffer2.bufMIC7[2*i] = Buffer2.bufMIC7[i];
   \   0000014E   0x....             LDR.N    R1,??DataTable18_11  ;; 0xc00080a0
   \   00000150   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000152   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000156   0xF246 0x0278      MOVW     R2,#+24696
   \   0000015A   0x5A51             LDRH     R1,[R2, R1]
   \   0000015C   0x....             LDR.N    R2,??DataTable18_11  ;; 0xc00080a0
   \   0000015E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000160   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000164   0xF246 0x0378      MOVW     R3,#+24696
   \   00000168   0x5299             STRH     R1,[R3, R2]
   1622          		    break;
   \   0000016A   0xE039             B.N      ??PDM2PCMSDO78_15
   1623          		case BUF2_PLAY:
   1624                                  Buffer3.bufMIC7[2*i+1]= Buffer3.bufMIC7[i];
   \                     ??PDM2PCMSDO78_13: (+1)
   \   0000016C   0x....             LDR.N    R1,??DataTable18_21  ;; 0xc0010140
   \   0000016E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000170   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000174   0xF246 0x0278      MOVW     R2,#+24696
   \   00000178   0x5A51             LDRH     R1,[R2, R1]
   \   0000017A   0x....             LDR.N    R2,??DataTable18_21  ;; 0xc0010140
   \   0000017C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000017E   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000182   0xF246 0x037A      MOVW     R3,#+24698
   \   00000186   0x5299             STRH     R1,[R3, R2]
   1625                                  Buffer3.bufMIC7[2*i]= Buffer3.bufMIC7[i];;	
   \   00000188   0x....             LDR.N    R1,??DataTable18_21  ;; 0xc0010140
   \   0000018A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000018C   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000190   0xF246 0x0278      MOVW     R2,#+24696
   \   00000194   0x5A51             LDRH     R1,[R2, R1]
   \   00000196   0x....             LDR.N    R2,??DataTable18_21  ;; 0xc0010140
   \   00000198   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000019A   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   0000019E   0xF246 0x0378      MOVW     R3,#+24696
   \   000001A2   0x5299             STRH     R1,[R3, R2]
   1626                                  break;
   \   000001A4   0xE01C             B.N      ??PDM2PCMSDO78_15
   1627                          case BUF3_PLAY:
   1628                                  Buffer1.bufMIC7[2*i+1]= Buffer1.bufMIC7[i];
   \                     ??PDM2PCMSDO78_12: (+1)
   \   000001A6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001A8   0x0041             LSLS     R1,R0,#+1
   \   000001AA   0xF1B1 0x4180      SUBS     R1,R1,#+1073741824
   \   000001AE   0xF246 0x0278      MOVW     R2,#+24696
   \   000001B2   0x5A51             LDRH     R1,[R2, R1]
   \   000001B4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001B6   0x0082             LSLS     R2,R0,#+2
   \   000001B8   0xF1B2 0x4280      SUBS     R2,R2,#+1073741824
   \   000001BC   0xF246 0x037A      MOVW     R3,#+24698
   \   000001C0   0x5299             STRH     R1,[R3, R2]
   1629                                  Buffer1.bufMIC7[2*i]= Buffer1.bufMIC7[i];;	
   \   000001C2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001C4   0x0041             LSLS     R1,R0,#+1
   \   000001C6   0xF1B1 0x4180      SUBS     R1,R1,#+1073741824
   \   000001CA   0xF246 0x0278      MOVW     R2,#+24696
   \   000001CE   0x5A51             LDRH     R1,[R2, R1]
   \   000001D0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001D2   0x0082             LSLS     R2,R0,#+2
   \   000001D4   0xF1B2 0x4280      SUBS     R2,R2,#+1073741824
   \   000001D8   0xF246 0x0378      MOVW     R3,#+24696
   \   000001DC   0x5299             STRH     R1,[R3, R2]
   1630                                  break;
   \   000001DE   0xE7FF             B.N      ??PDM2PCMSDO78_15
   1631                          default:
   1632                                   break; 
   1633                       }
   1634          	  }
   \                     ??PDM2PCMSDO78_14: (+1)
   \                     ??PDM2PCMSDO78_15: (+1)
   \   000001E0   0x1E40             SUBS     R0,R0,#+1
   \   000001E2   0xE79B             B.N      ??PDM2PCMSDO78_10
   1635          
   1636               }
   1637              
   1638          
   1639          	/* Data in Mic8 finished recording */
   1640          	if (WaveRecord_flgSDO8Finish==1)
   \                     ??PDM2PCMSDO78_0: (+1)
   \   000001E4   0x....             LDR.N    R0,??DataTable18_42
   \   000001E6   0x7800             LDRB     R0,[R0, #+0]
   \   000001E8   0x2801             CMP      R0,#+1
   \   000001EA   0xF040 0x80DF      BNE.W    ??PDM2PCMSDO78_16
   1641          	{
   1642          		WaveRecord_flgSDO8Finish=0;
   \   000001EE   0x2000             MOVS     R0,#+0
   \   000001F0   0x....             LDR.N    R1,??DataTable18_42
   \   000001F2   0x7008             STRB     R0,[R1, #+0]
   1643          		
   1644          		for (uint16_t i=0; i< 4*AUDIO_OUT_BUFFER_SIZE;i++)
   \   000001F4   0x2400             MOVS     R4,#+0
   \                     ??PDM2PCMSDO78_17: (+1)
   \   000001F6   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000001F8   0xF5B4 0x5F80      CMP      R4,#+4096
   \   000001FC   0xDA70             BGE.N    ??PDM2PCMSDO78_18
   1645          		{
   1646                            if(swtSDO8==0x01)
   \   000001FE   0x....             LDR.N    R0,??DataTable18_43
   \   00000200   0x7800             LDRB     R0,[R0, #+0]
   \   00000202   0x2801             CMP      R0,#+1
   \   00000204   0xD115             BNE.N    ??PDM2PCMSDO78_19
   1647                            {
   1648                              pDataMic8[i%64] = HTONS(TestSDO8[i]);
                                     ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \   00000206   0x....             LDR.N    R0,??DataTable18_29
   \   00000208   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000020A   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   0000020E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000210   0x....             LDR.N    R1,??DataTable18_29
   \   00000212   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000214   0xF831 0x1014      LDRH     R1,[R1, R4, LSL #+1]
   \   00000218   0x0209             LSLS     R1,R1,#+8
   \   0000021A   0xEA51 0x2010      ORRS     R0,R1,R0, LSR #+8
   \   0000021E   0x....             LDR.N    R1,??DataTable18_30
   \   00000220   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000222   0x2240             MOVS     R2,#+64
   \   00000224   0xFB94 0xF3F2      SDIV     R3,R4,R2
   \   00000228   0xFB03 0x4312      MLS      R3,R3,R2,R4
   \   0000022C   0xF821 0x0013      STRH     R0,[R1, R3, LSL #+1]
   \   00000230   0xE014             B.N      ??PDM2PCMSDO78_20
   1649                            }
   1650                            else
   1651                            {
   1652                               pDataMic8[i%64] = HTONS(TestSDO8_1[i]);
                                      ^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \                     ??PDM2PCMSDO78_19: (+1)
   \   00000232   0x....             LDR.N    R0,??DataTable18_44
   \   00000234   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000236   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   0000023A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000023C   0x....             LDR.N    R1,??DataTable18_44
   \   0000023E   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000240   0xF831 0x1014      LDRH     R1,[R1, R4, LSL #+1]
   \   00000244   0x0209             LSLS     R1,R1,#+8
   \   00000246   0xEA51 0x2010      ORRS     R0,R1,R0, LSR #+8
   \   0000024A   0x....             LDR.N    R1,??DataTable18_30
   \   0000024C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000024E   0x2240             MOVS     R2,#+64
   \   00000250   0xFB94 0xF3F2      SDIV     R3,R4,R2
   \   00000254   0xFB03 0x4312      MLS      R3,R3,R2,R4
   \   00000258   0xF821 0x0013      STRH     R0,[R1, R3, LSL #+1]
   1653                            }
   1654          		
   1655                            /* PDM conversion for frame of 64 inputs, 16 outputs */
   1656                            if (i%64==63)
   \                     ??PDM2PCMSDO78_20: (+1)
   \   0000025C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000025E   0x2040             MOVS     R0,#+64
   \   00000260   0xFB94 0xF1F0      SDIV     R1,R4,R0
   \   00000264   0xFB01 0x4110      MLS      R1,R1,R0,R4
   \   00000268   0x293F             CMP      R1,#+63
   \   0000026A   0xD137             BNE.N    ??PDM2PCMSDO78_21
   1657                            {
   1658                                /* Recording Audio Data */						 
   1659                                switch (buffer_switch)
   \   0000026C   0x....             LDR.N    R0,??DataTable18_9
   \   0000026E   0x7800             LDRB     R0,[R0, #+0]
   \   00000270   0x2800             CMP      R0,#+0
   \   00000272   0xD003             BEQ.N    ??PDM2PCMSDO78_22
   \   00000274   0x2802             CMP      R0,#+2
   \   00000276   0xD021             BEQ.N    ??PDM2PCMSDO78_23
   \   00000278   0xD310             BCC.N    ??PDM2PCMSDO78_24
   \   0000027A   0xE02F             B.N      ??PDM2PCMSDO78_25
   1660                                {
   1661                                        case BUF1_PLAY: 							
   1662                                                PDM_Filter_64_LSB((uint8_t *)pDataMic8,(uint16_t *)(Buffer2.bufMIC8 + (i/64)*16), 80 ,
   1663                                                (PDMFilter_InitStruct *)&Filter[1]);
   \                     ??PDM2PCMSDO78_22: (+1)
   \   0000027C   0x....             LDR.N    R3,??DataTable18_31
   \   0000027E   0x2250             MOVS     R2,#+80
   \   00000280   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000282   0x2040             MOVS     R0,#+64
   \   00000284   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   00000288   0x....             LDR.N    R1,??DataTable18_11  ;; 0xc00080a0
   \   0000028A   0xEB11 0x1040      ADDS     R0,R1,R0, LSL #+5
   \   0000028E   0xF500 0x41E0      ADD      R1,R0,#+28672
   \   00000292   0x318C             ADDS     R1,R1,#+140
   \   00000294   0x....             LDR.N    R0,??DataTable18_30
   \   00000296   0x.... 0x....      BL       PDM_Filter_64_LSB
   1664                                                break;
   \   0000029A   0xE01F             B.N      ??PDM2PCMSDO78_21
   1665                                        case BUF2_PLAY:
   1666                                                PDM_Filter_64_LSB((uint8_t *)pDataMic8,(uint16_t *)(Buffer3.bufMIC8 + (i/64)*16), 80 ,
   1667                                                (PDMFilter_InitStruct *)&Filter[1]);	
   \                     ??PDM2PCMSDO78_24: (+1)
   \   0000029C   0x....             LDR.N    R3,??DataTable18_31
   \   0000029E   0x2250             MOVS     R2,#+80
   \   000002A0   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000002A2   0x2040             MOVS     R0,#+64
   \   000002A4   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   000002A8   0x....             LDR.N    R1,??DataTable18_21  ;; 0xc0010140
   \   000002AA   0xEB11 0x1040      ADDS     R0,R1,R0, LSL #+5
   \   000002AE   0xF500 0x41E0      ADD      R1,R0,#+28672
   \   000002B2   0x318C             ADDS     R1,R1,#+140
   \   000002B4   0x....             LDR.N    R0,??DataTable18_30
   \   000002B6   0x.... 0x....      BL       PDM_Filter_64_LSB
   1668                                                break;
   \   000002BA   0xE00F             B.N      ??PDM2PCMSDO78_21
   1669                                        case BUF3_PLAY:
   1670                                                PDM_Filter_64_LSB((uint8_t *)pDataMic8,(uint16_t *)(Buffer1.bufMIC8 + (i/64)*16), 80 ,
   1671                                                (PDMFilter_InitStruct *)&Filter[1]);									
   \                     ??PDM2PCMSDO78_23: (+1)
   \   000002BC   0x....             LDR.N    R3,??DataTable18_31
   \   000002BE   0x2250             MOVS     R2,#+80
   \   000002C0   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000002C2   0x2040             MOVS     R0,#+64
   \   000002C4   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   000002C8   0x0140             LSLS     R0,R0,#+5
   \   000002CA   0xF1B0 0x4080      SUBS     R0,R0,#+1073741824
   \   000002CE   0xF500 0x41E0      ADD      R1,R0,#+28672
   \   000002D2   0x318C             ADDS     R1,R1,#+140
   \   000002D4   0x....             LDR.N    R0,??DataTable18_30
   \   000002D6   0x.... 0x....      BL       PDM_Filter_64_LSB
   1672                                                 break;
   \   000002DA   0xE7FF             B.N      ??PDM2PCMSDO78_21
   1673                                        default:
   1674                                                 break; 
   1675                                }		
   1676                             }					 
   1677          		}
   \                     ??PDM2PCMSDO78_25: (+1)
   \                     ??PDM2PCMSDO78_21: (+1)
   \   000002DC   0x1C64             ADDS     R4,R4,#+1
   \   000002DE   0xE78A             B.N      ??PDM2PCMSDO78_17
   1678          
   1679          		/* Update for left-right channel */
   1680          		for (int16_t i=AUDIO_OUT_BUFFER_SIZE-1; i>=0;i--)
   \                     ??PDM2PCMSDO78_18: (+1)
   \   000002E0   0xF240 0x30FF      MOVW     R0,#+1023
   \                     ??PDM2PCMSDO78_26: (+1)
   \   000002E4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000002E6   0x2800             CMP      R0,#+0
   \   000002E8   0xD460             BMI.N    ??PDM2PCMSDO78_16
   1681          		{
   1682                              /* Recording Audio Data */						 
   1683                              switch (buffer_switch)
   \   000002EA   0x....             LDR.N    R1,??DataTable18_9
   \   000002EC   0x7809             LDRB     R1,[R1, #+0]
   \   000002EE   0x2900             CMP      R1,#+0
   \   000002F0   0xD003             BEQ.N    ??PDM2PCMSDO78_27
   \   000002F2   0x2902             CMP      R1,#+2
   \   000002F4   0xD03B             BEQ.N    ??PDM2PCMSDO78_28
   \   000002F6   0xD31D             BCC.N    ??PDM2PCMSDO78_29
   \   000002F8   0xE056             B.N      ??PDM2PCMSDO78_30
   1684                              {
   1685                                      case BUF1_PLAY: 							
   1686                                              Buffer2.bufMIC8[2*i+1]=  Buffer2.bufMIC8[i];
   \                     ??PDM2PCMSDO78_27: (+1)
   \   000002FA   0x....             LDR.N    R1,??DataTable18_11  ;; 0xc00080a0
   \   000002FC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000002FE   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000302   0xF247 0x028C      MOVW     R2,#+28812
   \   00000306   0x5A51             LDRH     R1,[R2, R1]
   \   00000308   0x....             LDR.N    R2,??DataTable18_11  ;; 0xc00080a0
   \   0000030A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000030C   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000310   0xF247 0x038E      MOVW     R3,#+28814
   \   00000314   0x5299             STRH     R1,[R3, R2]
   1687                                              Buffer2.bufMIC8[2*i] = Buffer2.bufMIC8[i];
   \   00000316   0x....             LDR.N    R1,??DataTable18_11  ;; 0xc00080a0
   \   00000318   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000031A   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   0000031E   0xF247 0x028C      MOVW     R2,#+28812
   \   00000322   0x5A51             LDRH     R1,[R2, R1]
   \   00000324   0x....             LDR.N    R2,??DataTable18_11  ;; 0xc00080a0
   \   00000326   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000328   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   0000032C   0xF247 0x038C      MOVW     R3,#+28812
   \   00000330   0x5299             STRH     R1,[R3, R2]
   1688                                              break;
   \   00000332   0xE039             B.N      ??PDM2PCMSDO78_31
   1689                                      case BUF2_PLAY:
   1690                                              Buffer3.bufMIC8[2*i+1]= Buffer3.bufMIC8[i];
   \                     ??PDM2PCMSDO78_29: (+1)
   \   00000334   0x....             LDR.N    R1,??DataTable18_21  ;; 0xc0010140
   \   00000336   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000338   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   0000033C   0xF247 0x028C      MOVW     R2,#+28812
   \   00000340   0x5A51             LDRH     R1,[R2, R1]
   \   00000342   0x....             LDR.N    R2,??DataTable18_21  ;; 0xc0010140
   \   00000344   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000346   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   0000034A   0xF247 0x038E      MOVW     R3,#+28814
   \   0000034E   0x5299             STRH     R1,[R3, R2]
   1691                                              Buffer3.bufMIC8[2*i]= Buffer3.bufMIC8[i];;	
   \   00000350   0x....             LDR.N    R1,??DataTable18_21  ;; 0xc0010140
   \   00000352   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000354   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000358   0xF247 0x028C      MOVW     R2,#+28812
   \   0000035C   0x5A51             LDRH     R1,[R2, R1]
   \   0000035E   0x....             LDR.N    R2,??DataTable18_21  ;; 0xc0010140
   \   00000360   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000362   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000366   0xF247 0x038C      MOVW     R3,#+28812
   \   0000036A   0x5299             STRH     R1,[R3, R2]
   1692                                              break;
   \   0000036C   0xE01C             B.N      ??PDM2PCMSDO78_31
   1693                                      case BUF3_PLAY:
   1694                                              Buffer1.bufMIC8[2*i+1]= Buffer1.bufMIC8[i];
   \                     ??PDM2PCMSDO78_28: (+1)
   \   0000036E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000370   0x0041             LSLS     R1,R0,#+1
   \   00000372   0xF1B1 0x4180      SUBS     R1,R1,#+1073741824
   \   00000376   0xF247 0x028C      MOVW     R2,#+28812
   \   0000037A   0x5A51             LDRH     R1,[R2, R1]
   \   0000037C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000037E   0x0082             LSLS     R2,R0,#+2
   \   00000380   0xF1B2 0x4280      SUBS     R2,R2,#+1073741824
   \   00000384   0xF247 0x038E      MOVW     R3,#+28814
   \   00000388   0x5299             STRH     R1,[R3, R2]
   1695                                              Buffer1.bufMIC8[2*i]= Buffer1.bufMIC8[i];;	
   \   0000038A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000038C   0x0041             LSLS     R1,R0,#+1
   \   0000038E   0xF1B1 0x4180      SUBS     R1,R1,#+1073741824
   \   00000392   0xF247 0x028C      MOVW     R2,#+28812
   \   00000396   0x5A51             LDRH     R1,[R2, R1]
   \   00000398   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000039A   0x0082             LSLS     R2,R0,#+2
   \   0000039C   0xF1B2 0x4280      SUBS     R2,R2,#+1073741824
   \   000003A0   0xF247 0x038C      MOVW     R3,#+28812
   \   000003A4   0x5299             STRH     R1,[R3, R2]
   1696                                              break;
   \   000003A6   0xE7FF             B.N      ??PDM2PCMSDO78_31
   1697                                      default:
   1698                                               break; 
   1699                              }
   1700          		}
   \                     ??PDM2PCMSDO78_30: (+1)
   \                     ??PDM2PCMSDO78_31: (+1)
   \   000003A8   0x1E40             SUBS     R0,R0,#+1
   \   000003AA   0xE79B             B.N      ??PDM2PCMSDO78_26
   1701          	}//if (WaveRecord_flgSDO8Finish==1)
   1702          }
   \                     ??PDM2PCMSDO78_16: (+1)
   \   000003AC   0xBD10             POP      {R4,PC}          ;; return
   \   000003AE                      REQUIRE Buffer2
   \   000003AE                      REQUIRE Buffer3
   \   000003AE                      REQUIRE Buffer1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x40023844         DC32     0x40023844

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x40023830         DC32     0x40023830

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x40020000         DC32     0x40020000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x........         DC32     spi1_ins

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x40013000         DC32     0x40013000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \   00000000   0x........         DC32     hi2s1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_2:
   \   00000000   0x........         DC32     ??stLR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_3:
   \   00000000   0x........         DC32     ??stLROld

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_4:
   \   00000000   0x........         DC32     SPI1_stNipple

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_5:
   \   00000000   0x........         DC32     I2S1_stPosShft

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x........         DC32     vRawSens1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x........         DC32     vRawSens2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \   00000000   0x........         DC32     iSDO12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \   00000000   0x........         DC32     TestSDO12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x40021000         DC32     0x40021000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \   00000000   0x........         DC32     WaveRec_idxSens1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \   00000000   0x........         DC32     WaveRec_idxSens2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_3:
   \   00000000   0x........         DC32     buffer_switch

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_4:
   \   00000000   0xC00080A0         DC32     0xc00080a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_5:
   \   00000000   0xC0010140         DC32     0xc0010140

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_6:
   \   00000000   0x........         DC32     hi2s2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_7:
   \   00000000   0x40003800         DC32     0x40003800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_8:
   \   00000000   0x........         DC32     ??I2S2_stLR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_9:
   \   00000000   0x........         DC32     ??I2S2_stLROld

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_10:
   \   00000000   0x........         DC32     I2S2_stNipple

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_11:
   \   00000000   0x........         DC32     I2S2_stPosShft

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_12:
   \   00000000   0x........         DC32     vRawSens3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_13:
   \   00000000   0x........         DC32     vRawSens4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_14:
   \   00000000   0x........         DC32     iSDO34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_15:
   \   00000000   0x........         DC32     TestSDO34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_16:
   \   00000000   0x........         DC32     WaveRec_idxSens3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_17:
   \   00000000   0x........         DC32     WaveRec_idxSens4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_18:
   \   00000000   0x........         DC32     hspi4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_19:
   \   00000000   0x40013400         DC32     0x40013400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_20:
   \   00000000   0x........         DC32     ??Main_stLR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_21:
   \   00000000   0x........         DC32     ??Main_stLROld

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_22:
   \   00000000   0x........         DC32     SPI4_stNipple

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_23:
   \   00000000   0x........         DC32     SPI4_stPosShft

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_24:
   \   00000000   0x........         DC32     vRawSens5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_25:
   \   00000000   0x........         DC32     WaveRec_idxSens5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_26:
   \   00000000   0x........         DC32     vRawSens6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_27:
   \   00000000   0x........         DC32     WaveRec_idxSens6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   0x........         DC32     iSDO56

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_1:
   \   00000000   0x........         DC32     TestSDO56

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_2:
   \   00000000   0x........         DC32     hspi5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_3:
   \   00000000   0x40015000         DC32     0x40015000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_4:
   \   00000000   0x4001500C         DC32     0x4001500c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_5:
   \   00000000   0x........         DC32     pDataMic8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_6:
   \   00000000   0x........         DC32     idxMic8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_7:
   \   00000000   0x........         DC32     volume

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_8:
   \   00000000   0x........         DC32     Filter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_9:
   \   00000000   0x........         DC32     bufPCMSens8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_10:
   \   00000000   0x........         DC32     hspi6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_11:
   \   00000000   0x40015400         DC32     0x40015400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_12:
   \   00000000   0x4001540C         DC32     0x4001540c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_13:
   \   00000000   0x........         DC32     pDataMic7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_14:
   \   00000000   0x........         DC32     idxMic7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_15:
   \   00000000   0x........         DC32     Filter+0x34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_16:
   \   00000000   0x........         DC32     bufPCMSens7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   0x........         DC32     cntPos

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_1:
   \   00000000   0x........         DC32     cntPos7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_2:
   \   00000000   0x........         DC32     TestSDO7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_3:
   \   00000000   0x........         DC32     TestSDO8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_4:
   \   00000000   0x........         DC32     swtSDO7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_5:
   \   00000000   0x........         DC32     swtSDO8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_6:
   \   00000000   0x40023830         DC32     0x40023830

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_7:
   \   00000000   0x45FA0000         DC32     0x45fa0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_8:
   \   00000000   0x41200000         DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   0x40013000         DC32     0x40013000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_1:
   \   00000000   0x40023844         DC32     0x40023844

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_2:
   \   00000000   0x40020000         DC32     0x40020000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_3:
   \   00000000   0x40003800         DC32     0x40003800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_4:
   \   00000000   0x40023840         DC32     0x40023840

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_5:
   \   00000000   0x40020800         DC32     0x40020800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_6:
   \   00000000   0x40020400         DC32     0x40020400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_7:
   \   00000000   0x40003C00         DC32     0x40003c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_8:
   \   00000000   0x400260B8         DC32     0x400260b8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_9:
   \   00000000   0x........         DC32     DmaHandle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_10:
   \   00000000   0x40013400         DC32     0x40013400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_11:
   \   00000000   0x40021000         DC32     0x40021000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   0x40021400         DC32     0x40021400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_1:
   \   00000000   0x40026488         DC32     0x40026488

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_2:
   \   00000000   0x........         DC32     hdma_spi5_rx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_3:
   \   00000000   0x40021800         DC32     0x40021800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_4:
   \   00000000   0x400264A0         DC32     0x400264a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_5:
   \   00000000   0x........         DC32     hdma_spi6_rx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_6:
   \   00000000   0x........         DC32     WaveRecord_flgInt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_7:
   \   00000000   0x........         DC32     WaveRec_idxSens1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_8:
   \   00000000   0x........         DC32     WaveRec_idxSens2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_9:
   \   00000000   0x........         DC32     buffer_switch

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_10:
   \   00000000   0x........         DC32     vRawSens1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_11:
   \   00000000   0xC00080A0         DC32     0xc00080a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_12:
   \   00000000   0x........         DC32     vRawSens2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_13:
   \   00000000   0x........         DC32     WaveRec_idxSens3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_14:
   \   00000000   0x........         DC32     vRawSens3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_15:
   \   00000000   0x........         DC32     WaveRec_idxSens4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_16:
   \   00000000   0x........         DC32     vRawSens4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_17:
   \   00000000   0x........         DC32     WaveRec_idxSens5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_18:
   \   00000000   0x........         DC32     vRawSens5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_19:
   \   00000000   0x........         DC32     WaveRec_idxSens6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_20:
   \   00000000   0x........         DC32     vRawSens6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_21:
   \   00000000   0xC0010140         DC32     0xc0010140

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_22:
   \   00000000   0x40015000         DC32     0x40015000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_23:
   \   00000000   0x........         DC32     swtSDO7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_24:
   \   00000000   0x........         DC32     WaveRecord_flgSDO7Finish

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_25:
   \   00000000   0x........         DC32     TestSDO7_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_26:
   \   00000000   0x........         DC32     hspi5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_27:
   \   00000000   0x........         DC32     TestSDO7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_28:
   \   00000000   0x40015400         DC32     0x40015400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_29:
   \   00000000   0x........         DC32     TestSDO8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_30:
   \   00000000   0x........         DC32     pDataMic8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_31:
   \   00000000   0x........         DC32     Filter+0x34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_32:
   \   00000000   0x........         DC32     pPDM2PCM

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_33:
   \   00000000   0x........         DC32     idxFrmPDMMic8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_34:
   \   00000000   0x........         DC32     idxSPI5DataBuf3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_35:
   \   00000000   0x........         DC32     I2S2_idxTmp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_36:
   \   00000000   0x........         DC32     flgDlyUpd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_37:
   \   00000000   0x........         DC32     XferCplt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_38:
   \   00000000   0x........         DC32     cntStrt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_39:
   \   00000000   0x........         DC32     hspi6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_40:
   \   00000000   0x........         DC32     pDataMic7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_41:
   \   00000000   0x........         DC32     Filter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_42:
   \   00000000   0x........         DC32     WaveRecord_flgSDO8Finish

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_43:
   \   00000000   0x........         DC32     swtSDO8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_44:
   \   00000000   0x........         DC32     TestSDO8_1
   1703          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   DMA2_Stream5_IRQHandler
         8   -> HAL_DMA_IRQHandler
       8   DMA2_Stream6_IRQHandler
         8   -> HAL_DMA_IRQHandler
      32   HAL_SPI_MspInit
        32   -> HAL_DMA_DeInit
        32   -> HAL_DMA_Init
        32   -> HAL_GPIO_Init
        32   -> HAL_NVIC_EnableIRQ
        32   -> HAL_NVIC_SetPriority
      16   HAL_SPI_RxCpltCallback
        16   -> AudioPlayerUpd
        16   -> AudioUSBSend
        16   -> HAL_SPI_Receive_DMA
        16   -> PDM_Filter_64_LSB
       8   I2S1_Init
         8   -> HAL_I2S_Init
       8   I2S2_Init
         8   -> HAL_I2S_Init
       8   MIC1TO6_Init
         8   -> HAL_GPIO_ReadPin
         8   -> HAL_SPI_Receive_DMA
         8   -> I2S1_Init
         8   -> I2S2_Init
         8   -> SPI4_Init
         8   -> SPI5_Init
         8   -> SPI6_Init
       8   Mic7Rec
         8   -> SPI5_Init
       8   Mic8Rec
         8   -> SPI6_Init
       8   PDM2PCMSDO78
         8   -> PDM_Filter_64_LSB
       0   RecordUpdBuf
       8   SPI1_IRQHandler
         8   -> HAL_GPIO_ReadPin
         8   -> SPI_I2S_ReceiveData
      32   SPI1_Ini
        32   -> HAL_GPIO_Init
        32   -> HAL_GPIO_WritePin
        32   -> HAL_NVIC_EnableIRQ
        32   -> HAL_NVIC_SetPriority
        32   -> HAL_SPI_Init
       8   SPI2_IRQHandler
         8   -> HAL_GPIO_ReadPin
         8   -> SPI_I2S_ReceiveData
       8   SPI4_IRQHandler
         8   -> HAL_GPIO_ReadPin
         8   -> SPI_I2S_ReceiveData
       8   SPI4_Init
         8   -> HAL_SPI_Init
       8   SPI5_IRQHandler
         8   -> PDM_Filter_64_LSB
         8   -> SPI_I2S_ReceiveData
       8   SPI5_Init
         8   -> HAL_SPI_Init
         8   -> PDM_Filter_Init
       8   SPI6_IRQHandler
         8   -> PDM_Filter_64_LSB
         8   -> SPI_I2S_ReceiveData
       8   SPI6_Init
         8   -> HAL_SPI_Init
       0   SPI_I2S_ReceiveData
       0   SPI_I2S_SendData
      16   mySPI_SendData
        16   -> SPI_I2S_ReceiveData
        16   -> SPI_I2S_SendData


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable10_2
       4  ??DataTable10_3
       4  ??DataTable10_4
       4  ??DataTable10_5
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_2
       4  ??DataTable11_3
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_10
       4  ??DataTable12_11
       4  ??DataTable12_12
       4  ??DataTable12_13
       4  ??DataTable12_14
       4  ??DataTable12_15
       4  ??DataTable12_16
       4  ??DataTable12_17
       4  ??DataTable12_18
       4  ??DataTable12_19
       4  ??DataTable12_2
       4  ??DataTable12_20
       4  ??DataTable12_21
       4  ??DataTable12_22
       4  ??DataTable12_23
       4  ??DataTable12_24
       4  ??DataTable12_25
       4  ??DataTable12_26
       4  ??DataTable12_27
       4  ??DataTable12_3
       4  ??DataTable12_4
       4  ??DataTable12_5
       4  ??DataTable12_6
       4  ??DataTable12_7
       4  ??DataTable12_8
       4  ??DataTable12_9
       4  ??DataTable13
       4  ??DataTable13_1
       4  ??DataTable13_10
       4  ??DataTable13_11
       4  ??DataTable13_12
       4  ??DataTable13_13
       4  ??DataTable13_14
       4  ??DataTable13_15
       4  ??DataTable13_16
       4  ??DataTable13_2
       4  ??DataTable13_3
       4  ??DataTable13_4
       4  ??DataTable13_5
       4  ??DataTable13_6
       4  ??DataTable13_7
       4  ??DataTable13_8
       4  ??DataTable13_9
       4  ??DataTable16
       4  ??DataTable16_1
       4  ??DataTable16_2
       4  ??DataTable16_3
       4  ??DataTable16_4
       4  ??DataTable16_5
       4  ??DataTable16_6
       4  ??DataTable16_7
       4  ??DataTable16_8
       4  ??DataTable17
       4  ??DataTable17_1
       4  ??DataTable17_10
       4  ??DataTable17_11
       4  ??DataTable17_2
       4  ??DataTable17_3
       4  ??DataTable17_4
       4  ??DataTable17_5
       4  ??DataTable17_6
       4  ??DataTable17_7
       4  ??DataTable17_8
       4  ??DataTable17_9
       4  ??DataTable18
       4  ??DataTable18_1
       4  ??DataTable18_10
       4  ??DataTable18_11
       4  ??DataTable18_12
       4  ??DataTable18_13
       4  ??DataTable18_14
       4  ??DataTable18_15
       4  ??DataTable18_16
       4  ??DataTable18_17
       4  ??DataTable18_18
       4  ??DataTable18_19
       4  ??DataTable18_2
       4  ??DataTable18_20
       4  ??DataTable18_21
       4  ??DataTable18_22
       4  ??DataTable18_23
       4  ??DataTable18_24
       4  ??DataTable18_25
       4  ??DataTable18_26
       4  ??DataTable18_27
       4  ??DataTable18_28
       4  ??DataTable18_29
       4  ??DataTable18_3
       4  ??DataTable18_30
       4  ??DataTable18_31
       4  ??DataTable18_32
       4  ??DataTable18_33
       4  ??DataTable18_34
       4  ??DataTable18_35
       4  ??DataTable18_36
       4  ??DataTable18_37
       4  ??DataTable18_38
       4  ??DataTable18_39
       4  ??DataTable18_4
       4  ??DataTable18_40
       4  ??DataTable18_41
       4  ??DataTable18_42
       4  ??DataTable18_43
       4  ??DataTable18_44
       4  ??DataTable18_5
       4  ??DataTable18_6
       4  ??DataTable18_7
       4  ??DataTable18_8
       4  ??DataTable18_9
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable9
       4  ??DataTable9_1
   32928  Buffer1
   32928  Buffer2
   32928  Buffer3
      12  DMA2_Stream5_IRQHandler
      12  DMA2_Stream6_IRQHandler
     104  Filter
    1482  HAL_SPI_MspInit
     704  HAL_SPI_RxCpltCallback
      94  I2S1_Init
       2  I2S1_stNipple
       1  I2S1_stPosShft
      94  I2S2_Init
       1  I2S2_stLR
       1  I2S2_stLROld
       2  I2S2_stNipple
       1  I2S2_stPosShft
     142  MIC1TO6_Init
       1  Main_stLR
       1  Main_stLROld
       8  Mic7Rec
       8  Mic8Rec
     942  PDM2PCMSDO78
     732  RecordUpdBuf
     564  SPI1_IRQHandler
     274  SPI1_Ini
       2  SPI1_stNipple
     574  SPI2_IRQHandler
     766  SPI4_IRQHandler
     124  SPI4_Init
       2  SPI4_stNipple
       1  SPI4_stPosShft
     236  SPI5_IRQHandler
     254  SPI5_Init
     224  SPI6_IRQHandler
     124  SPI6_Init
       6  SPI_I2S_ReceiveData
       6  SPI_I2S_SendData
    8192  TestSDO12
    8192  TestSDO34
    8192  TestSDO56
    8192  TestSDO7
    8192  TestSDO7_1
    8192  TestSDO8
    8192  TestSDO8_1
       1  WaveRecord_flgIni
       1  WaveRecord_flgInt
       1  WaveRecord_flgSDO7Finish
       1  WaveRecord_flgSDO8Finish
       4  bufPCMSens7
       4  bufPCMSens8
       2  cntPos
       2  cntPos7
       2  cntStrt
       2  cntTransFinish
      80  hdma_spi2_tx
      80  hdma_spi3_tx
      80  hdma_spi5_rx
      80  hdma_spi6_rx
      64  hi2s1
      64  hi2s2
     100  hspi1
     100  hspi2
     100  hspi5
     100  hspi6
       2  iSDO12
       2  iSDO34
       2  iSDO56
       2  idxFrmPDMMic8
       2  idxMic7
       2  idxMic8
     100  mySPI_SendData
     128  pDataMic7
     128  pDataMic8
      44  pHeaderBuff
      32  pPDM2PCM
     100  spi1_ins
     100  spi2_ins
       1  stLR
       1  stLROld
       1  swtSDO7
       1  swtSDO8
       2  vRawSens1
       2  vRawSens2
       2  vRawSens3
       2  vRawSens4
       2  vRawSens5
       2  vRawSens6

 
 58 891 bytes in section .bss
 98 784 bytes in section .bss  (abs)
  7 982 bytes in section .text
 
   7 982 bytes of CODE memory
 157 675 bytes of DATA memory

Errors: none
Warnings: 28
