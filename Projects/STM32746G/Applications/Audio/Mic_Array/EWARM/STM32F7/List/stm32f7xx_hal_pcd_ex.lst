###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       27/Feb/2016  00:32:37
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Drivers\STM32F7xx_HAL_Driver\Src\stm32f7xx_hal_pcd_ex.c
#    Command line =  
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Drivers\STM32F7xx_HAL_Driver\Src\stm32f7xx_hal_pcd_ex.c
#        -D USE_HAL_DRIVER -D STM32F746xx -D USE_STM32746G_DISCO -D
#        USE_IOEXPANDER -D USE_USB_FS -lC
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List
#        -lA
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List
#        -o
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\Obj
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M7 -e --fpu=VFPv5_sp --dlib_config
#        "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\Inc\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\CMSIS\Device\ST\STM32F7xx\Include\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\STM32F7xx_HAL_Driver\Inc\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\BSP\STM32746G-Discovery\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\BSP\Components\Common\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\Log\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\Fonts\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\CPU\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_Device_Library\Core\Inc\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_HOST_Library\Core\Inc\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_HOST_Library\Class\MSC\Inc\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\Third_Party\FatFs\src\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\Third_Party\FatFs\src\drivers\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_Audio\Addons\PDM\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_Device_Library\Class\AUDIO\Inc\
#        -Om --use_c++_inline --require_prototypes -I "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.3\arm\CMSIS\Include\" -D
#        ARM_MATH_CM7
#    List file    =  
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List\stm32f7xx_hal_pcd_ex.lst
#    Object file  =  
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\Obj\stm32f7xx_hal_pcd_ex.o
#
###############################################################################

H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Drivers\STM32F7xx_HAL_Driver\Src\stm32f7xx_hal_pcd_ex.c
      1          /**
      2            ******************************************************************************
      3            * @file    stm32f7xx_hal_pcd_ex.c
      4            * @author  MCD Application Team
      5            * @version V1.0.1
      6            * @date    25-June-2015
      7            * @brief   PCD HAL module driver.
      8            *          This file provides firmware functions to manage the following 
      9            *          functionalities of the USB Peripheral Controller:
     10            *           + Extended features functions
     11            *
     12            ******************************************************************************
     13            * @attention
     14            *
     15            * <h2><center>&copy; COPYRIGHT(c) 2015 STMicroelectronics</center></h2>
     16            *
     17            * Redistribution and use in source and binary forms, with or without modification,
     18            * are permitted provided that the following conditions are met:
     19            *   1. Redistributions of source code must retain the above copyright notice,
     20            *      this list of conditions and the following disclaimer.
     21            *   2. Redistributions in binary form must reproduce the above copyright notice,
     22            *      this list of conditions and the following disclaimer in the documentation
     23            *      and/or other materials provided with the distribution.
     24            *   3. Neither the name of STMicroelectronics nor the names of its contributors
     25            *      may be used to endorse or promote products derived from this software
     26            *      without specific prior written permission.
     27            *
     28            * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
     29            * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
     30            * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
     31            * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
     32            * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
     33            * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
     34            * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
     35            * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
     36            * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
     37            * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     38            *
     39            ******************************************************************************
     40            */ 
     41          
     42          /* Includes ------------------------------------------------------------------*/
     43          #include "stm32f7xx_hal.h"
     44          
     45          /** @addtogroup STM32F7xx_HAL_Driver
     46            * @{
     47            */
     48          
     49          /** @defgroup PCDEx PCDEx
     50            * @brief PCD Extended HAL module driver
     51            * @{
     52            */
     53          #ifdef HAL_PCD_MODULE_ENABLED
     54          
     55          /* Private types -------------------------------------------------------------*/
     56          /* Private variables ---------------------------------------------------------*/
     57          /* Private constants ---------------------------------------------------------*/
     58          /* Private macros ------------------------------------------------------------*/
     59          /* Private functions ---------------------------------------------------------*/
     60          /* Exported functions --------------------------------------------------------*/
     61          
     62          /** @defgroup PCDEx_Exported_Functions PCDEx Exported Functions
     63            * @{
     64            */
     65          
     66          /** @defgroup PCDEx_Exported_Functions_Group1 Peripheral Control functions
     67            * @brief    PCDEx control functions 
     68           *
     69          @verbatim   
     70           ===============================================================================
     71                           ##### Extended features functions #####
     72           ===============================================================================  
     73              [..]  This section provides functions allowing to:
     74                (+) Update FIFO configuration
     75          
     76          @endverbatim
     77            * @{
     78            */
     79          
     80          /**
     81            * @brief  Set Tx FIFO
     82            * @param  hpcd: PCD handle
     83            * @param  fifo: The number of Tx fifo
     84            * @param  size: Fifo size
     85            * @retval HAL status
     86            */

   \                                 In section .text, align 2, keep-with-next
     87          HAL_StatusTypeDef HAL_PCDEx_SetTxFiFo(PCD_HandleTypeDef *hpcd, uint8_t fifo, uint16_t size)
     88          {
   \                     HAL_PCDEx_SetTxFiFo: (+1)
   \   00000000   0xB4F0             PUSH     {R4-R7}
     89            uint8_t i = 0;
   \   00000002   0x2300             MOVS     R3,#+0
     90            uint32_t Tx_Offset = 0;
     91          
     92            /*  TXn min size = 16 words. (n  : Transmit FIFO index)
     93                When a TxFIFO is not used, the Configuration should be as follows: 
     94                    case 1 :  n > m    and Txn is not used    (n,m  : Transmit FIFO indexes)
     95                   --> Txm can use the space allocated for Txn.
     96                   case2  :  n < m    and Txn is not used    (n,m  : Transmit FIFO indexes)
     97                   --> Txn should be configured with the minimum space of 16 words
     98               The FIFO is used optimally when used TxFIFOs are allocated in the top 
     99                   of the FIFO.Ex: use EP1 and EP2 as IN instead of EP1 and EP3 as IN ones.
    100               When DMA is used 3n * FIFO locations should be reserved for internal DMA registers */
    101            
    102            Tx_Offset = hpcd->Instance->GRXFSIZ;
   \   00000004   0x6804             LDR      R4,[R0, #+0]
   \   00000006   0x6A65             LDR      R5,[R4, #+36]
    103            
    104            if(fifo == 0)
   \   00000008   0x2900             CMP      R1,#+0
   \   0000000A   0xD103             BNE.N    ??HAL_PCDEx_SetTxFiFo_0
    105            {
    106              hpcd->Instance->DIEPTXF0_HNPTXFSIZ = (size << 16) | Tx_Offset;
   \   0000000C   0xEA45 0x4002      ORR      R0,R5,R2, LSL #+16
   \   00000010   0x62A0             STR      R0,[R4, #+40]
   \   00000012   0xE016             B.N      ??HAL_PCDEx_SetTxFiFo_1
    107            }
    108            else
    109            {
    110              Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
   \                     ??HAL_PCDEx_SetTxFiFo_0: (+1)
   \   00000014   0x6AA4             LDR      R4,[R4, #+40]
   \   00000016   0xEB05 0x4514      ADD      R5,R5,R4, LSR #+16
    111              for (i = 0; i < (fifo - 1); i++)
   \   0000001A   0x1E4F             SUBS     R7,R1,#+1
   \   0000001C   0xE006             B.N      ??HAL_PCDEx_SetTxFiFo_2
    112              {
    113                Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
   \                     ??HAL_PCDEx_SetTxFiFo_3: (+1)
   \   0000001E   0xEB04 0x0486      ADD      R4,R4,R6, LSL #+2
   \   00000022   0xF8D4 0x4104      LDR      R4,[R4, #+260]
   \   00000026   0xEB05 0x4514      ADD      R5,R5,R4, LSR #+16
    114              }
   \   0000002A   0x1C5B             ADDS     R3,R3,#+1
   \                     ??HAL_PCDEx_SetTxFiFo_2: (+1)
   \   0000002C   0x6804             LDR      R4,[R0, #+0]
   \   0000002E   0xB2DB             UXTB     R3,R3
   \   00000030   0x461E             MOV      R6,R3
   \   00000032   0x42BE             CMP      R6,R7
   \   00000034   0xDBF3             BLT.N    ??HAL_PCDEx_SetTxFiFo_3
    115              
    116              /* Multiply Tx_Size by 2 to get higher performance */
    117              hpcd->Instance->DIEPTXF[fifo - 1] = (size << 16) | Tx_Offset;
   \   00000036   0xEA45 0x4002      ORR      R0,R5,R2, LSL #+16
   \   0000003A   0xEB04 0x0181      ADD      R1,R4,R1, LSL #+2
   \   0000003E   0xF8C1 0x0100      STR      R0,[R1, #+256]
    118              
    119            }
    120            
    121            return HAL_OK;
   \                     ??HAL_PCDEx_SetTxFiFo_1: (+1)
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0xBCF0             POP      {R4-R7}
   \   00000046   0x4770             BX       LR               ;; return
    122          }
    123          
    124          /**
    125            * @brief  Set Rx FIFO
    126            * @param  hpcd: PCD handle
    127            * @param  size: Size of Rx fifo
    128            * @retval HAL status
    129            */

   \                                 In section .text, align 2, keep-with-next
    130          HAL_StatusTypeDef HAL_PCDEx_SetRxFiFo(PCD_HandleTypeDef *hpcd, uint16_t size)
    131          {
    132            hpcd->Instance->GRXFSIZ = size;
   \                     HAL_PCDEx_SetRxFiFo: (+1)
   \   00000000   0x6800             LDR      R0,[R0, #+0]
   \   00000002   0x6241             STR      R1,[R0, #+36]
    133            
    134            return HAL_OK;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x4770             BX       LR               ;; return
    135          }
    136          
    137          /**
    138            * @brief  HAL_PCDEx_ActivateLPM : active LPM Feature
    139            * @param  hpcd: PCD handle
    140            * @retval HAL status
    141            */

   \                                 In section .text, align 2, keep-with-next
    142          HAL_StatusTypeDef HAL_PCDEx_ActivateLPM(PCD_HandleTypeDef *hpcd)
    143          {
    144            USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;  
   \                     HAL_PCDEx_ActivateLPM: (+1)
   \   00000000   0x6801             LDR      R1,[R0, #+0]
    145            
    146            hpcd->lpm_active = ENABLE;
   \   00000002   0xF500 0x706C      ADD      R0,R0,#+944
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0x6082             STR      R2,[R0, #+8]
    147            hpcd->LPM_State = LPM_L0;
   \   0000000A   0x2200             MOVS     R2,#+0
   \   0000000C   0x7002             STRB     R2,[R0, #+0]
    148            USBx->GINTMSK |= USB_OTG_GINTMSK_LPMINTM;
   \   0000000E   0x6988             LDR      R0,[R1, #+24]
   \   00000010   0xF040 0x6000      ORR      R0,R0,#0x8000000
   \   00000014   0x6188             STR      R0,[R1, #+24]
    149            USBx->GLPMCFG |= (USB_OTG_GLPMCFG_LPMEN | USB_OTG_GLPMCFG_LPMACK | USB_OTG_GLPMCFG_ENBESL);
   \   00000016   0x6D48             LDR      R0,[R1, #+84]
   \   00000018   0xF040 0x5080      ORR      R0,R0,#0x10000000
   \   0000001C   0xF040 0x0003      ORR      R0,R0,#0x3
   \   00000020   0x6548             STR      R0,[R1, #+84]
    150            
    151            return HAL_OK;  
   \   00000022   0x4610             MOV      R0,R2
   \   00000024   0x4770             BX       LR               ;; return
    152          }
    153          
    154          /**
    155            * @brief  HAL_PCDEx_DeActivateLPM : de-active LPM feature
    156            * @param  hpcd: PCD handle
    157            * @retval HAL status
    158            */

   \                                 In section .text, align 2, keep-with-next
    159          HAL_StatusTypeDef HAL_PCDEx_DeActivateLPM(PCD_HandleTypeDef *hpcd)
    160          {
    161            USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;  
   \                     HAL_PCDEx_DeActivateLPM: (+1)
   \   00000000   0x6801             LDR      R1,[R0, #+0]
    162            
    163            hpcd->lpm_active = DISABLE;
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0xF8C0 0x23B8      STR      R2,[R0, #+952]
    164            USBx->GINTMSK &= ~USB_OTG_GINTMSK_LPMINTM;
   \   00000008   0x6988             LDR      R0,[R1, #+24]
   \   0000000A   0xF020 0x6000      BIC      R0,R0,#0x8000000
   \   0000000E   0x6188             STR      R0,[R1, #+24]
    165            USBx->GLPMCFG &= ~(USB_OTG_GLPMCFG_LPMEN | USB_OTG_GLPMCFG_LPMACK | USB_OTG_GLPMCFG_ENBESL);
   \   00000010   0x6D48             LDR      R0,[R1, #+84]
   \   00000012   0x....             LDR.N    R2,??DataTable0  ;; 0xeffffffc
   \   00000014   0x4010             ANDS     R0,R2,R0
   \   00000016   0x6548             STR      R0,[R1, #+84]
    166            
    167            return HAL_OK;  
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x4770             BX       LR               ;; return
    168          }
    169          
    170          /**
    171            * @brief  HAL_PCDEx_LPM_Callback : Send LPM message to user layer
    172            * @param  hpcd: PCD handle
    173            * @param  msg: LPM message
    174            * @retval HAL status
    175            */

   \                                 In section .text, align 2, keep-with-next
    176          __weak void HAL_PCDEx_LPM_Callback(PCD_HandleTypeDef *hpcd, PCD_LPM_MsgTypeDef msg)
    177          {
    178          }
   \                     HAL_PCDEx_LPM_Callback: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0xEFFFFFFC         DC32     0xeffffffc
    179          
    180          /**
    181            * @}
    182            */
    183          
    184          /**
    185            * @}
    186            */
    187          
    188          #endif /* HAL_PCD_MODULE_ENABLED */
    189          /**
    190            * @}
    191            */
    192          
    193          /**
    194            * @}
    195            */
    196          
    197          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   HAL_PCDEx_ActivateLPM
       0   HAL_PCDEx_DeActivateLPM
       0   HAL_PCDEx_LPM_Callback
       0   HAL_PCDEx_SetRxFiFo
      16   HAL_PCDEx_SetTxFiFo


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
      38  HAL_PCDEx_ActivateLPM
      28  HAL_PCDEx_DeActivateLPM
       2  HAL_PCDEx_LPM_Callback
       8  HAL_PCDEx_SetRxFiFo
      72  HAL_PCDEx_SetTxFiFo

 
 152 bytes in section .text
 
 152 bytes of CODE memory

Errors: none
Warnings: none
