###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       12/Feb/2016  13:21:56
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\Src\stm32f7xx_it.c
#    Command line =  
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\Src\stm32f7xx_it.c
#        -D USE_HAL_DRIVER -D STM32F746xx -D USE_STM32746G_DISCO -D
#        USE_IOEXPANDER -D USE_USB_FS -lC
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List
#        -lA
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List
#        -o
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_sp --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.3\arm\INC\c\DLib_Config_Full.h"
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\Inc\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\CMSIS\Device\ST\STM32F7xx\Include\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\STM32F7xx_HAL_Driver\Inc\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\BSP\STM32746G-Discovery\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\BSP\Components\Common\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\Log\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\Fonts\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\CPU\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_Device_Library\Core\Inc\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_HOST_Library\Core\Inc\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_HOST_Library\Class\MSC\Inc\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\Third_Party\FatFs\src\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\Third_Party\FatFs\src\drivers\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_Audio\Addons\PDM\
#        -On --use_c++_inline --require_prototypes -I "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.3\arm\CMSIS\Include\" -D
#        ARM_MATH_CM7
#    List file    =  
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List\stm32f7xx_it.lst
#    Object file  =  
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\Obj\stm32f7xx_it.o
#
###############################################################################

H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\Src\stm32f7xx_it.c
      1          /**
      2            ******************************************************************************
      3            * @file    Audio/Audio_playback_and_record/Src/stm32f7xx_it.c
      4            * @author  MCD Application Team
      5            * @version V1.0.0
      6            * @date    25-June-2015
      7            * @brief   Main Interrupt Service Routines.
      8            *          This file provides template for all exceptions handler and 
      9            *          peripherals interrupt service routine.
     10            ******************************************************************************
     11            * @attention
     12            *
     13            * <h2><center>&copy; COPYRIGHT(c) 2015 STMicroelectronics</center></h2>
     14            *
     15            * Redistribution and use in source and binary forms, with or without modification,
     16            * are permitted provided that the following conditions are met:
     17            *   1. Redistributions of source code must retain the above copyright notice,
     18            *      this list of conditions and the following disclaimer.
     19            *   2. Redistributions in binary form must reproduce the above copyright notice,
     20            *      this list of conditions and the following disclaimer in the documentation
     21            *      and/or other materials provided with the distribution.
     22            *   3. Neither the name of STMicroelectronics nor the names of its contributors
     23            *      may be used to endorse or promote products derived from this software
     24            *      without specific prior written permission.
     25            *
     26            * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
     27            * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
     28            * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
     29            * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
     30            * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
     31            * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
     32            * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
     33            * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
     34            * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
     35            * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     36            *
     37            ******************************************************************************
     38            */
     39          
     40          /* Includes ------------------------------------------------------------------*/
     41          #include "main.h"
     42          #include "stm32f7xx_it.h"
     43          
     44          /* Private typedef -----------------------------------------------------------*/
     45          /* Private define ------------------------------------------------------------*/
     46          /* Private macro -------------------------------------------------------------*/
     47          /* Private variables ---------------------------------------------------------*/
     48          extern HCD_HandleTypeDef hhcd;
     49          extern __IO  char flg10ms;
     50          

   \                                 In section .bss, align 4
     51          uint32_t cntOS;
   \                     cntOS:
   \   00000000                      DS8 4
     52          
     53          
     54          extern I2C_HandleTypeDef hi2c1,hi2c2;
     55          extern UART_HandleTypeDef huart3;
     56          extern SPI_HandleTypeDef hspi5;
     57          
     58          /* Private function prototypes -----------------------------------------------*/
     59          /* Private functions ---------------------------------------------------------*/
     60          
     61          /******************************************************************************/
     62          /*            Cortex-M7 Processor Exceptions Handlers                         */
     63          /******************************************************************************/
     64          
     65          /**
     66            * @brief  This function handles NMI exception.
     67            * @param  None
     68            * @retval None
     69            */

   \                                 In section .text, align 2, keep-with-next
     70          void NMI_Handler(void)
     71          {
     72          }
   \                     NMI_Handler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
     73          
     74          /**
     75            * @brief  This function handles Hard Fault exception.
     76            * @param  None
     77            * @retval None
     78            */

   \                                 In section .text, align 2, keep-with-next
     79          void HardFault_Handler(void)
     80          {
     81            /* Go to infinite loop when Hard Fault exception occurs */
     82            while (1)
   \                     HardFault_Handler: (+1)
   \                     ??HardFault_Handler_0: (+1)
   \   00000000   0xE7FE             B.N      ??HardFault_Handler_0
     83            {
     84            }
     85          }
     86          
     87          /**
     88            * @brief  This function handles Memory Manage exception.
     89            * @param  None
     90            * @retval None
     91            */

   \                                 In section .text, align 2, keep-with-next
     92          void MemManage_Handler(void)
     93          {
     94            /* Go to infinite loop when Memory Manage exception occurs */
     95            while (1)
   \                     MemManage_Handler: (+1)
   \                     ??MemManage_Handler_0: (+1)
   \   00000000   0xE7FE             B.N      ??MemManage_Handler_0
     96            {
     97            }
     98          }
     99          
    100          /**
    101            * @brief  This function handles Bus Fault exception.
    102            * @param  None
    103            * @retval None
    104            */

   \                                 In section .text, align 2, keep-with-next
    105          void BusFault_Handler(void)
    106          {
    107            /* Go to infinite loop when Bus Fault exception occurs */
    108            while (1)
   \                     BusFault_Handler: (+1)
   \                     ??BusFault_Handler_0: (+1)
   \   00000000   0xE7FE             B.N      ??BusFault_Handler_0
    109            {
    110            }
    111          }
    112          
    113          /**
    114            * @brief  This function handles Usage Fault exception.
    115            * @param  None
    116            * @retval None
    117            */

   \                                 In section .text, align 2, keep-with-next
    118          void UsageFault_Handler(void)
    119          {
    120            /* Go to infinite loop when Usage Fault exception occurs */
    121            while (1)
   \                     UsageFault_Handler: (+1)
   \                     ??UsageFault_Handler_0: (+1)
   \   00000000   0xE7FE             B.N      ??UsageFault_Handler_0
    122            {
    123            }
    124          }
    125          
    126          /**
    127            * @brief  This function handles SVCall exception.
    128            * @param  None
    129            * @retval None
    130            */

   \                                 In section .text, align 2, keep-with-next
    131          void SVC_Handler(void)
    132          {
    133          }
   \                     SVC_Handler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    134          
    135          /**
    136            * @brief  This function handles Debug Monitor exception.
    137            * @param  None
    138            * @retval None
    139            */

   \                                 In section .text, align 2, keep-with-next
    140          void DebugMon_Handler(void)
    141          {
    142          }
   \                     DebugMon_Handler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    143          
    144          /**
    145            * @brief  This function handles PendSVC exception.
    146            * @param  None
    147            * @retval None
    148            */

   \                                 In section .text, align 2, keep-with-next
    149          void PendSV_Handler(void)
    150          {
    151          }
   \                     PendSV_Handler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    152          
    153          /**
    154            * @brief  This function handles SysTick Handler.
    155            * @param  None
    156            * @retval None
    157            */

   \                                 In section .text, align 2, keep-with-next
    158          void SysTick_Handler(void)
    159          {
   \                     SysTick_Handler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    160            HAL_IncTick(); 
   \   00000002   0x.... 0x....      BL       HAL_IncTick
    161            //Toggle_Leds();
    162          
    163            cntOS++;
   \   00000006   0x....             LDR.N    R0,??DataTable4
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x1C40             ADDS     R0,R0,#+1
   \   0000000C   0x....             LDR.N    R1,??DataTable4
   \   0000000E   0x6008             STR      R0,[R1, #+0]
    164          
    165            if (cntOS==10)
   \   00000010   0x....             LDR.N    R0,??DataTable4
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x280A             CMP      R0,#+10
   \   00000016   0xD105             BNE.N    ??SysTick_Handler_0
    166            {
    167                cntOS=0;
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x....             LDR.N    R1,??DataTable4
   \   0000001C   0x6008             STR      R0,[R1, #+0]
    168                flg10ms = 1;
   \   0000001E   0x2001             MOVS     R0,#+1
   \   00000020   0x....             LDR.N    R1,??DataTable4_1
   \   00000022   0x7008             STRB     R0,[R1, #+0]
    169            }
    170            	
    171          }
   \                     ??SysTick_Handler_0: (+1)
   \   00000024   0xBD01             POP      {R0,PC}          ;; return
    172          

   \                                 In section .text, align 2, keep-with-next
    173          void USART6_IRQHandler(void)
    174          {
    175          //  HAL_UART_IRQHandler(&huart6);
    176          }
   \                     USART6_IRQHandler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    177          

   \                                 In section .text, align 2, keep-with-next
    178          void USART3_IRQHandler(void)
    179          {
   \                     USART3_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    180            HAL_UART_IRQHandler(&huart3);
   \   00000002   0x....             LDR.N    R0,??DataTable4_2
   \   00000004   0x.... 0x....      BL       HAL_UART_IRQHandler
    181          }
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
    182          
    183          

   \                                 In section .text, align 2, keep-with-next
    184          void I2C1_EV_IRQHandler(void)
    185          {
   \                     I2C1_EV_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    186            /* USER CODE BEGIN I2C1_EV_IRQn 0 */
    187          
    188            /* USER CODE END I2C1_EV_IRQn 0 */
    189            HAL_I2C_EV_IRQHandler(&hi2c1);
   \   00000002   0x....             LDR.N    R0,??DataTable4_3
   \   00000004   0x.... 0x....      BL       HAL_I2C_EV_IRQHandler
    190            /* USER CODE BEGIN I2C1_EV_IRQn 1 */
    191          
    192            /* USER CODE END I2C1_EV_IRQn 1 */
    193          }
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
    194          
    195          

   \                                 In section .text, align 2, keep-with-next
    196          void I2C2_EV_IRQHandler(void)
    197          {
   \                     I2C2_EV_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    198            /* USER CODE BEGIN I2C1_EV_IRQn 0 */
    199          
    200            /* USER CODE END I2C1_EV_IRQn 0 */
    201            HAL_I2C_EV_IRQHandler(&hi2c2);
   \   00000002   0x....             LDR.N    R0,??DataTable4_4
   \   00000004   0x.... 0x....      BL       HAL_I2C_EV_IRQHandler
    202            /* USER CODE BEGIN I2C1_EV_IRQn 1 */
    203          
    204            /* USER CODE END I2C1_EV_IRQn 1 */
    205          }
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
    206          
    207          
    208          
    209          
    210          
    211          
    212          /******************************************************************************/
    213          /*                 STM32F7xx Peripherals Interrupt Handlers                   */
    214          /*  Add here the Interrupt Handler for the used peripheral(s) (PPP), for the  */
    215          /*  available peripheral interrupt handler's name please refer to the startup */
    216          /*  file (startup_stm32f7xx.s).                                               */
    217          /******************************************************************************/
    218          
    219          /**
    220            * @brief  This function handles USB-On-The-Go FS/HS global interrupt request.
    221            * @param  None
    222            * @retval None
    223            */
    224          #ifdef USE_USB_FS

   \                                 In section .text, align 2, keep-with-next
    225          void OTG_FS_IRQHandler(void)
    226          #else
    227          void OTG_HS_IRQHandler(void)
    228          #endif
    229          {
   \                     OTG_FS_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    230            HAL_HCD_IRQHandler(&hhcd);
   \   00000002   0x....             LDR.N    R0,??DataTable4_5
   \   00000004   0x.... 0x....      BL       HAL_HCD_IRQHandler
    231          }
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
    232          
    233          /**
    234            * @brief This function handles DMA2 Stream 4 interrupt request.
    235            * @param None
    236            * @retval None
    237            */

   \                                 In section .text, align 2, keep-with-next
    238          void AUDIO_OUT_SAIx_DMAx_IRQHandler(void)
    239          {
    240            //HAL_DMA_IRQHandler(haudio_out_sai.hdmatx);
    241          }
   \                     DMA2_Stream4_IRQHandler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    242          
    243          /**
    244            * @brief This function handles DMA2 Stream 7 interrupt request.
    245            * @param None
    246            * @retval None
    247            */

   \                                 In section .text, align 2, keep-with-next
    248          void AUDIO_IN_SAIx_DMAx_IRQHandler(void)
    249          {
    250            //HAL_DMA_IRQHandler(haudio_in_sai.hdmarx);
    251          }
   \                     DMA2_Stream7_IRQHandler: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     cntOS

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     flg10ms

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     huart3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     hi2c1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     hi2c2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x........         DC32     hhcd
    252          
    253          /**
    254            * @brief  This function handles PPP interrupt request.
    255            * @param  None
    256            * @retval None
    257            */
    258          /*void PPP_IRQHandler(void)
    259          {
    260          }*/
    261          
    262          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   BusFault_Handler
       0   DMA2_Stream4_IRQHandler
       0   DMA2_Stream7_IRQHandler
       0   DebugMon_Handler
       0   HardFault_Handler
       8   I2C1_EV_IRQHandler
         8   -> HAL_I2C_EV_IRQHandler
       8   I2C2_EV_IRQHandler
         8   -> HAL_I2C_EV_IRQHandler
       0   MemManage_Handler
       0   NMI_Handler
       8   OTG_FS_IRQHandler
         8   -> HAL_HCD_IRQHandler
       0   PendSV_Handler
       0   SVC_Handler
       8   SysTick_Handler
         8   -> HAL_IncTick
       8   USART3_IRQHandler
         8   -> HAL_UART_IRQHandler
       0   USART6_IRQHandler
       0   UsageFault_Handler


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       2  BusFault_Handler
       2  DMA2_Stream4_IRQHandler
       2  DMA2_Stream7_IRQHandler
       2  DebugMon_Handler
       2  HardFault_Handler
      10  I2C1_EV_IRQHandler
      10  I2C2_EV_IRQHandler
       2  MemManage_Handler
       2  NMI_Handler
      10  OTG_FS_IRQHandler
       2  PendSV_Handler
       2  SVC_Handler
      38  SysTick_Handler
      10  USART3_IRQHandler
       2  USART6_IRQHandler
       2  UsageFault_Handler
       4  cntOS

 
   4 bytes in section .bss
 124 bytes in section .text
 
 124 bytes of CODE memory
   4 bytes of DATA memory

Errors: none
Warnings: none
