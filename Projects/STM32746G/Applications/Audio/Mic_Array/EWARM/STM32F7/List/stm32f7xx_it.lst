###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       30/Mar/2016  19:08:26
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\Src\stm32f7xx_it.c
#    Command line =  
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\Src\stm32f7xx_it.c
#        -D USE_HAL_DRIVER -D STM32F746xx -D USE_STM32746G_DISCO -D
#        USE_IOEXPANDER -D USE_USB_FS -lC
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List
#        -lA
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List
#        -o
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\Obj
#        --no_unroll --debug --endian=little --cpu=Cortex-M7 -e --fpu=VFPv5_sp
#        --dlib_config "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\CMSIS\Device\ST\STM32F7xx\Include\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\STM32F7xx_HAL_Driver\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\BSP\STM32746G-Discovery\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\BSP\Components\Common\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\Log\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\Fonts\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\CPU\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_Device_Library\Core\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_HOST_Library\Core\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_HOST_Library\Class\MSC\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\Third_Party\FatFs\src\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\Third_Party\FatFs\src\drivers\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_Audio\Addons\PDM\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_Device_Library\Class\AUDIO\Inc\
#        -Ohs --use_c++_inline --require_prototypes -I "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.3\arm\CMSIS\Include\" -D
#        ARM_MATH_CM7 --relaxed_fp
#    List file    =  
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List\stm32f7xx_it.lst
#    Object file  =  
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\Obj\stm32f7xx_it.o
#
###############################################################################

D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\Src\stm32f7xx_it.c
      1          /**
      2            ******************************************************************************
      3            * @file    Audio/Audio_playback_and_record/Src/stm32f7xx_it.c
      4            * @author  MCD Application Team
      5            * @version V1.0.0
      6            * @date    25-June-2015
      7            * @brief   Main Interrupt Service Routines.
      8            *          This file provides template for all exceptions handler and 
      9            *          peripherals interrupt service routine.
     10            ******************************************************************************
     11            * @attention
     12            *
     13            * <h2><center>&copy; COPYRIGHT(c) 2015 STMicroelectronics</center></h2>
     14            *
     15            * Redistribution and use in source and binary forms, with or without modification,
     16            * are permitted provided that the following conditions are met:
     17            *   1. Redistributions of source code must retain the above copyright notice,
     18            *      this list of conditions and the following disclaimer.
     19            *   2. Redistributions in binary form must reproduce the above copyright notice,
     20            *      this list of conditions and the following disclaimer in the documentation
     21            *      and/or other materials provided with the distribution.
     22            *   3. Neither the name of STMicroelectronics nor the names of its contributors
     23            *      may be used to endorse or promote products derived from this software
     24            *      without specific prior written permission.
     25            *
     26            * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
     27            * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
     28            * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
     29            * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
     30            * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
     31            * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
     32            * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
     33            * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
     34            * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
     35            * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     36            *
     37            ******************************************************************************
     38            */
     39          
     40          /* Includes ------------------------------------------------------------------*/
     41          #include "main.h"
     42          #include "stm32f7xx_it.h"
     43          
     44          /* Private typedef -----------------------------------------------------------*/
     45          /* Private define ------------------------------------------------------------*/
     46          /* Private macro -------------------------------------------------------------*/
     47          /* Private variables ---------------------------------------------------------*/
     48          extern HCD_HandleTypeDef hhcd;
     49          extern PCD_HandleTypeDef hpcd;
     50          extern __IO  char flg10ms;
     51          

   \                                 In section .bss, align 4
     52          uint32_t cntOS;
   \                     cntOS:
   \   00000000                      DS8 4
     53          
     54          
     55          extern I2C_HandleTypeDef hi2c1,hi2c2;
     56          extern UART_HandleTypeDef huart3;
     57          extern SPI_HandleTypeDef hspi5;
     58          
     59          /* Private function prototypes -----------------------------------------------*/
     60          /* Private functions ---------------------------------------------------------*/
     61          
     62          /******************************************************************************/
     63          /*            Cortex-M7 Processor Exceptions Handlers                         */
     64          /******************************************************************************/
     65          
     66          /**
     67            * @brief  This function handles NMI exception.
     68            * @param  None
     69            * @retval None
     70            */

   \                                 In section .text, align 2, keep-with-next
     71          void NMI_Handler(void)
     72          {
     73          }
   \                     NMI_Handler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
     74          
     75          /**
     76            * @brief  This function handles Hard Fault exception.
     77            * @param  None
     78            * @retval None
     79            */

   \                                 In section .text, align 2, keep-with-next
     80          void HardFault_Handler(void)
     81          {
     82            /* Go to infinite loop when Hard Fault exception occurs */
     83            while (1)
   \                     HardFault_Handler: (+1)
   \                     ??HardFault_Handler_0: (+1)
   \   00000000   0xE7FE             B.N      ??HardFault_Handler_0
     84            {
     85            }
     86          }
     87          
     88          /**
     89            * @brief  This function handles Memory Manage exception.
     90            * @param  None
     91            * @retval None
     92            */

   \                                 In section .text, align 2, keep-with-next
     93          void MemManage_Handler(void)
     94          {
     95            /* Go to infinite loop when Memory Manage exception occurs */
     96            while (1)
   \                     MemManage_Handler: (+1)
   \                     ??MemManage_Handler_0: (+1)
   \   00000000   0xE7FE             B.N      ??MemManage_Handler_0
     97            {
     98            }
     99          }
    100          
    101          /**
    102            * @brief  This function handles Bus Fault exception.
    103            * @param  None
    104            * @retval None
    105            */

   \                                 In section .text, align 2, keep-with-next
    106          void BusFault_Handler(void)
    107          {
    108            /* Go to infinite loop when Bus Fault exception occurs */
    109            while (1)
   \                     BusFault_Handler: (+1)
   \                     ??BusFault_Handler_0: (+1)
   \   00000000   0xE7FE             B.N      ??BusFault_Handler_0
    110            {
    111            }
    112          }
    113          
    114          /**
    115            * @brief  This function handles Usage Fault exception.
    116            * @param  None
    117            * @retval None
    118            */

   \                                 In section .text, align 2, keep-with-next
    119          void UsageFault_Handler(void)
    120          {
    121            /* Go to infinite loop when Usage Fault exception occurs */
    122            while (1)
   \                     UsageFault_Handler: (+1)
   \                     ??UsageFault_Handler_0: (+1)
   \   00000000   0xE7FE             B.N      ??UsageFault_Handler_0
    123            {
    124            }
    125          }
    126          
    127          /**
    128            * @brief  This function handles SVCall exception.
    129            * @param  None
    130            * @retval None
    131            */

   \                                 In section .text, align 2, keep-with-next
    132          void SVC_Handler(void)
    133          {
    134          }
   \                     SVC_Handler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    135          
    136          /**
    137            * @brief  This function handles Debug Monitor exception.
    138            * @param  None
    139            * @retval None
    140            */

   \                                 In section .text, align 2, keep-with-next
    141          void DebugMon_Handler(void)
    142          {
    143          }
   \                     DebugMon_Handler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    144          
    145          /**
    146            * @brief  This function handles PendSVC exception.
    147            * @param  None
    148            * @retval None
    149            */

   \                                 In section .text, align 2, keep-with-next
    150          void PendSV_Handler(void)
    151          {
    152          }
   \                     PendSV_Handler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    153          
    154          /**
    155            * @brief  This function handles SysTick Handler.
    156            * @param  None
    157            * @retval None
    158            */

   \                                 In section .text, align 2, keep-with-next
    159          void SysTick_Handler(void)
    160          {
   \                     SysTick_Handler: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB081             SUB      SP,SP,#+4
    161            HAL_IncTick(); 
   \   00000004   0x.... 0x....      BL       HAL_IncTick
    162            //Toggle_Leds();
    163          
    164            cntOS++;
   \   00000008   0x....             LDR.N    R0,??DataTable4
   \   0000000A   0x6801             LDR      R1,[R0, #+0]
   \   0000000C   0x1C49             ADDS     R1,R1,#+1
    165          #if USB_STREAMING
    166            //if(cntOS%2==0)
    167            //{
    168                //AudioProcess();
    169            //}
    170          #endif   
    171            if (cntOS==10)
   \   0000000E   0x290A             CMP      R1,#+10
   \   00000010   0xD103             BNE.N    ??SysTick_Handler_0
    172            {
    173                cntOS=0;
    174                flg10ms = 1;
   \   00000012   0x2201             MOVS     R2,#+1
   \   00000014   0x....             LDR.N    R3,??DataTable4_1
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0x701A             STRB     R2,[R3, #+0]
   \                     ??SysTick_Handler_0: (+1)
   \   0000001A   0x6001             STR      R1,[R0, #+0]
    175            }
    176            	
    177          }
   \   0000001C   0xB001             ADD      SP,SP,#+4
   \   0000001E   0xBD00             POP      {PC}             ;; return
    178          

   \                                 In section .text, align 2, keep-with-next
    179          void USART6_IRQHandler(void)
    180          {
    181          //  HAL_UART_IRQHandler(&huart6);
    182          }
   \                     USART6_IRQHandler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    183          

   \                                 In section .text, align 2, keep-with-next
    184          void USART3_IRQHandler(void)
    185          {
    186            HAL_UART_IRQHandler(&huart3);
   \                     USART3_IRQHandler: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable4_2
   \   00000002   0x.... 0x....      B.W      HAL_UART_IRQHandler
    187          }
    188          
    189          

   \                                 In section .text, align 2, keep-with-next
    190          void I2C1_EV_IRQHandler(void)
    191          {
    192            /* USER CODE BEGIN I2C1_EV_IRQn 0 */
    193          
    194            /* USER CODE END I2C1_EV_IRQn 0 */
    195            HAL_I2C_EV_IRQHandler(&hi2c1);
   \                     I2C1_EV_IRQHandler: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable4_3
   \   00000002   0x.... 0x....      B.W      HAL_I2C_EV_IRQHandler
    196            /* USER CODE BEGIN I2C1_EV_IRQn 1 */
    197          
    198            /* USER CODE END I2C1_EV_IRQn 1 */
    199          }
    200          
    201          

   \                                 In section .text, align 2, keep-with-next
    202          void I2C2_EV_IRQHandler(void)
    203          {
    204            /* USER CODE BEGIN I2C1_EV_IRQn 0 */
    205          
    206            /* USER CODE END I2C1_EV_IRQn 0 */
    207            HAL_I2C_EV_IRQHandler(&hi2c2);
   \                     I2C2_EV_IRQHandler: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable4_4
   \   00000002   0x.... 0x....      B.W      HAL_I2C_EV_IRQHandler
    208            /* USER CODE BEGIN I2C1_EV_IRQn 1 */
    209          
    210            /* USER CODE END I2C1_EV_IRQn 1 */
    211          }
    212          
    213          
    214          
    215          
    216          
    217          
    218          /******************************************************************************/
    219          /*                 STM32F7xx Peripherals Interrupt Handlers                   */
    220          /*  Add here the Interrupt Handler for the used peripheral(s) (PPP), for the  */
    221          /*  available peripheral interrupt handler's name please refer to the startup */
    222          /*  file (startup_stm32f7xx.s).                                               */
    223          /******************************************************************************/
    224          
    225          /**
    226            * @brief  This function handles USB-On-The-Go FS/HS global interrupt request.
    227            * @param  None
    228            * @retval None
    229            */
    230          #ifdef USE_USB_FS

   \                                 In section .text, align 2, keep-with-next
    231          void OTG_FS_IRQHandler(void)
    232          #else
    233          void OTG_HS_IRQHandler(void)
    234          #endif
    235          {
    236            //sop1hc HAL_HCD_IRQHandler(&hhcd);
    237            HAL_PCD_IRQHandler(&hpcd);
   \                     OTG_FS_IRQHandler: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable4_5
   \   00000002   0x.... 0x....      B.W      HAL_PCD_IRQHandler
    238          }
    239          
    240          /**
    241            * @brief This function handles DMA2 Stream 4 interrupt request.
    242            * @param None
    243            * @retval None
    244            */

   \                                 In section .text, align 2, keep-with-next
    245          void AUDIO_OUT_SAIx_DMAx_IRQHandler(void)
    246          {
    247            //HAL_DMA_IRQHandler(haudio_out_sai.hdmatx);
    248          }
   \                     DMA2_Stream4_IRQHandler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    249          
    250          /**
    251            * @brief This function handles DMA2 Stream 7 interrupt request.
    252            * @param None
    253            * @retval None
    254            */

   \                                 In section .text, align 2, keep-with-next
    255          void AUDIO_IN_SAIx_DMAx_IRQHandler(void)
    256          {
    257            //HAL_DMA_IRQHandler(haudio_in_sai.hdmarx);
    258          }
   \                     DMA2_Stream7_IRQHandler: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     cntOS

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     flg10ms

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     huart3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     hi2c1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     hi2c2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x........         DC32     hpcd
    259          
    260          /**
    261            * @brief  This function handles PPP interrupt request.
    262            * @param  None
    263            * @retval None
    264            */
    265          /*void PPP_IRQHandler(void)
    266          {
    267          }*/
    268          
    269          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   BusFault_Handler
       0   DMA2_Stream4_IRQHandler
       0   DMA2_Stream7_IRQHandler
       0   DebugMon_Handler
       0   HardFault_Handler
       0   I2C1_EV_IRQHandler
         0   -> HAL_I2C_EV_IRQHandler
       0   I2C2_EV_IRQHandler
         0   -> HAL_I2C_EV_IRQHandler
       0   MemManage_Handler
       0   NMI_Handler
       0   OTG_FS_IRQHandler
         0   -> HAL_PCD_IRQHandler
       0   PendSV_Handler
       0   SVC_Handler
       8   SysTick_Handler
         8   -> HAL_IncTick
       0   USART3_IRQHandler
         0   -> HAL_UART_IRQHandler
       0   USART6_IRQHandler
       0   UsageFault_Handler


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       2  BusFault_Handler
       2  DMA2_Stream4_IRQHandler
       2  DMA2_Stream7_IRQHandler
       2  DebugMon_Handler
       2  HardFault_Handler
       6  I2C1_EV_IRQHandler
       6  I2C2_EV_IRQHandler
       2  MemManage_Handler
       2  NMI_Handler
       6  OTG_FS_IRQHandler
       2  PendSV_Handler
       2  SVC_Handler
      32  SysTick_Handler
       6  USART3_IRQHandler
       2  USART6_IRQHandler
       2  UsageFault_Handler
       4  cntOS

 
   4 bytes in section .bss
 102 bytes in section .text
 
 102 bytes of CODE memory
   4 bytes of DATA memory

Errors: none
Warnings: none
