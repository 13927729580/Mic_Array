###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       31/Mar/2016  20:53:44
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\Src\main.c
#    Command line =  
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\Src\main.c
#        -D USE_HAL_DRIVER -D STM32F746xx -D USE_STM32746G_DISCO -D
#        USE_IOEXPANDER -D USE_USB_FS -lC
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List
#        -lA
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List
#        -o
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\Obj
#        --no_unroll --debug --endian=little --cpu=Cortex-M7 -e --fpu=VFPv5_sp
#        --dlib_config "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\CMSIS\Device\ST\STM32F7xx\Include\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\STM32F7xx_HAL_Driver\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\BSP\STM32746G-Discovery\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\BSP\Components\Common\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\Log\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\Fonts\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\CPU\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_Device_Library\Core\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_HOST_Library\Core\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_HOST_Library\Class\MSC\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\Third_Party\FatFs\src\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\Third_Party\FatFs\src\drivers\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_Audio\Addons\PDM\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_Device_Library\Class\AUDIO\Inc\
#        -Ohs --use_c++_inline --require_prototypes -I "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.3\arm\CMSIS\Include\" -D
#        ARM_MATH_CM7 --relaxed_fp
#    List file    =  
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List\main.lst
#    Object file  =  
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\Obj\main.o
#
###############################################################################

D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\Src\main.c
      1          /*****************************************************************************
      2            *    Author: Phan Le Son                                                                                           
      3            *    Company: Autonomous.ai                                            
      4            *    email: plson03@gmail.com
      5            *****************************************************************************/
      6          
      7          
      8          
      9          /* Includes ------------------------------------------------------------------*/
     10          #include "main.h"
     11          #include "DSP.h"
     12          //#include "waveplayer.h"
     13          #include "waverecorder.h"
     14          #include "stm32f7xx_hal_usart.h"
     15          #include "pdm_filter.h"
     16          #include "arm_math.h"
     17          #include <stdio.h>
     18          
     19          
     20          /* Private typedef -----------------------------------------------------------*/
     21          /* Private define ------------------------------------------------------------*/
     22          /* Private macro -------------------------------------------------------------*/
     23          
     24          
     25          /* EXTERN VARIABLES ----------------------------------------------------------*/
     26          //extern __IO AUDIO_IN_BufferTypeDef Buffer1, Buffer2, BufferCtlRecIn;
     27          //AUDIO_IN_BufferTypeDef Buffer3;
     28          
     29          
     30          
     31          
     32          extern Mic_Array_Data Buffer1,Buffer2,Buffer3;
     33          
     34          extern __IO uint8_t XferCplt;
     35          extern __IO AUDIO_IN_BufferTypeDef BufferCtlRecIn;
     36          extern DMA_HandleTypeDef     DmaHandle;
     37          
     38          extern SAI_HandleTypeDef         haudio_out_sai;
     39          extern uint8_t WaveRecord_flgIni;
     40          extern uint32_t EnergySound,EnergyError;
     41          extern I2C_HandleTypeDef hi2c2;
     42          extern __IO uint16_t cntStrt;
     43          extern __IO int16_t SPI1_stNipple,I2S1_stNipple, I2S2_stNipple,SPI4_stNipple;
     44          extern __IO   uint8_t I2S1_stPosShft,I2S2_stPosShft,SPI4_stPosShft;
     45          extern USBD_AUDIO_ItfTypeDef  USBD_AUDIO_fops;
     46          /* GLOBAL VARIABLE -----------------------------------------------------------*/

   \                                 In section .bss, align 4
     47          USBH_HandleTypeDef hUSBHost;
   \                     hUSBHost:
   \   00000000                      DS8 696
     48          USBD_HandleTypeDef hUSBDDevice;

   \                                 In section .bss, align 1
     49          AUDIO_ApplicationTypeDef appli_state = APPLICATION_IDLE;//APPLICATION_IDLE
   \                     appli_state:
   \   00000000                      DS8 1
     50          

   \                                 In section .bss, align 4
     51          UART_HandleTypeDef huart3;
   \                     huart3:
   \   00000000                      DS8 112

   \                                 In section .bss, align 4
     52          SPI_HandleTypeDef hspi4;
   \                     hspi4:
   \   00000000                      DS8 100
     53          GPIO_InitTypeDef GPIO_INS;
     54          Mic_Array_Coef_f FacMic;
     55          	  

   \                                 In section .bss, align 4
     56          uint16_t bufferSum[6*AUDIO_OUT_BUFFER_SIZE+10];
   \                     bufferSum:
   \   00000000                      DS8 12308

   \                                 In section .bss, align 4
     57          float CrssCorVal78,CrssCorVal14,CrssCorVal25,CrssCorVal63;
   \                     CrssCorVal78:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     CrssCorVal14:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     CrssCorVal25:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     CrssCorVal63:
   \   00000000                      DS8 4
     58          
     59          __IO uint16_t  WaveRec_idxSens4,WaveRec_idxSens3,I2S2_idxTmp;
     60          __IO uint16_t  WaveRec_idxSens1,WaveRec_idxSens2;
     61          __IO uint16_t  WaveRec_idxSens5,WaveRec_idxSens6;
     62          __IO uint16_t  idxSPI5DataBuf3;

   \                                 In section .bss, align 2
     63          __IO uint16_t  cntRisingEXTI;
   \                     cntRisingEXTI:
   \   00000000                      DS8 2
     64          __IO uint8_t   btnSW1,btnSW2;
     65          __IO uint8_t   flgDlyUpd; 
     66          __IO uint8_t   cntBtnPress;
     67          
     68          extern __IO uint16_t  WaveRec_idxTest;
     69          extern __IO uint8_t  swtBufUSBOut;
     70          extern __IO uint8_t flgRacing;
     71          /* Buffer used for reception */

   \                                 In section .bss, align 4
     72          uint8_t aRxBuffer[1024];
   \                     aRxBuffer:
   \   00000000                      DS8 1024

   \                                 In section .bss, align 1
     73          uint8_t idxDec,stFrstFrmStore;
   \                     idxDec:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     stFrstFrmStore:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
     74          int16_t DeltaBuf1,DeltaBuf1Old;
   \                     DeltaBuf1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     DeltaBuf1Old:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     75          int16_t idxLatency13,idxLatency12,idxLatency14,idxLatency25,idxLatency63,idxLatency78;
   \                     idxLatency13:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     idxLatency12:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     idxLatency14:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     idxLatency25:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     idxLatency63:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     idxLatency78:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
     76          int16_t * LowPass_Mic1Old;
   \                     LowPass_Mic1Old:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     77          int16_t *LowPass_Mic2Old;
   \                     LowPass_Mic2Old:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     78          int16_t *LowPass_Mic3Old; 
   \                     LowPass_Mic3Old:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     79          int16_t *LowPass_Mic4Old;
   \                     LowPass_Mic4Old:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     80          int16_t *LowPass_Mic5Old;
   \                     LowPass_Mic5Old:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     81          int16_t *LowPass_Mic6Old;
   \                     LowPass_Mic6Old:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     82          int16_t *LowPass_Mic7Old;
   \                     LowPass_Mic7Old:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     83          int16_t *LowPass_Mic8Old;
   \                     LowPass_Mic8Old:
   \   00000000                      DS8 4
     84          
     85          __IO char flg10ms;

   \                                 In section .bss, align 1
     86          uint8_t flgSTAIni;
   \                     flgSTAIni:
   \   00000000                      DS8 1

   \                                 In section .data, align 4
   \                     GPIO_INS:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \                     FacMic:
   \   00000014   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000024   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \                     flgDlyUpd:
   \   0000002C   0x00               DC8 0
   \                     flg10ms:
   \   0000002D   0x00               DC8 0
     87          uint16_t cntTime200;
     88          
     89          uint8_t buffer_switch = 1;
   \                     buffer_switch:
   \   0000002E   0x01               DC8 1
   \   0000002F   0x00               DC8 0
   \                     WaveRec_idxSens4:
   \   00000030   0x00 0x00          DC8 0, 0
   \                     WaveRec_idxSens3:
   \   00000032   0x00 0x00          DC8 0, 0
   \                     I2S2_idxTmp:
   \   00000034   0x00 0x00          DC8 0, 0
   \                     WaveRec_idxSens1:
   \   00000036   0x00 0x00          DC8 0, 0
   \                     WaveRec_idxSens2:
   \   00000038   0x00 0x00          DC8 0, 0
   \                     WaveRec_idxSens5:
   \   0000003A   0x00 0x00          DC8 0, 0
   \                     WaveRec_idxSens6:
   \   0000003C   0x00 0x00          DC8 0, 0
   \                     idxSPI5DataBuf3:
   \   0000003E   0x00 0x00          DC8 0, 0
   \                     cntTime200:
   \   00000040   0x00 0x00          DC8 0, 0
   \   00000042   0x00 0x00          DC8 0, 0
   \                     hUSBDDevice:
   \   00000044   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000054   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000064   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000074   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000084   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000094   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000D4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000E4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000F4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000104   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000114   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000124   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000134   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000144   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000154   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000164   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000174   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000184   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000194   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001A4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001B4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001C4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001D4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001E4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001F4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000204   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000214   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000224   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000234   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000244   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000254   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     90          uint8_t Command_index=1;
     91          
     92          float fir256Coff[DSP_NUMCOFFHANNIING];
   \                     fir256Coff:
   \   00000268   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000278   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000288   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000298   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002A8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002B8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002C8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002D8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002E8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002F8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000308   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000318   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000328   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000338   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000348   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000358   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000368   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000378   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000388   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000398   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003A8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003B8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003C8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003D8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003E8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003F8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000408   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000418   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000428   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000438   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000448   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000458   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000468   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000478   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000488   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000498   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004A8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004B8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004C8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004D8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004E8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004F8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000508   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000518   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000528   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000538   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000548   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000558   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000568   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000578   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000588   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000598   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005A8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005B8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005C8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005D8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005E8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005F8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000608   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000618   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000628   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000638   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000648   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000658   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000668   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000678   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000688   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000698   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000006A8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000006B8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000006C8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000006D8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000006E8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000006F8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000708   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000718   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000728   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000738   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000748   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000758   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000768   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000778   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000788   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000798   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000007A8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000007B8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000007C8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000007D8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000007E8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000007F8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000808   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000818   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000828   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000838   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000848   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000858   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000868   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000878   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000888   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000898   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000008A8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000008B8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000008C8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000008D8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000008E8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000008F8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000908   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000918   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000928   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000938   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000948   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000958   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000968   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000978   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000988   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000998   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000009A8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000009B8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000009C8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000009D8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000009E8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000009F8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000A08   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000A18   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000A28   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000A38   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000A48   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000A58   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000A68   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000A78   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000A88   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000A98   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000AA8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000AB8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000AC8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000AD8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000AE8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000AF8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000B08   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000B18   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000B28   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000B38   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000B48   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000B58   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000B68   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000B78   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000B88   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000B98   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000BA8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000BB8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000BC8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000BD8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000BE8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000BF8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000C08   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000C18   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000C28   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000C38   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000C48   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000C58   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000C68   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000C78   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000C88   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000C98   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000CA8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000CB8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000CC8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000CD8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000CE8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000CF8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000D08   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000D18   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000D28   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000D38   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000D48   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000D58   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000D68   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000D78   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000D88   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000D98   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000DA8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000DB8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000DC8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000DD8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000DE8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000DF8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000E08   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000E18   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000E28   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000E38   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000E48   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000E58   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000E68   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000E78   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000E88   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000E98   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000EA8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000EB8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000EC8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000ED8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000EE8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000EF8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000F08   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000F18   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000F28   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000F38   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000F48   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000F58   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000F68   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000F78   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000F88   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000F98   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000FA8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000FB8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000FC8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000FD8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000FE8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000FF8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001008   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001018   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001028   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001038   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001048   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001058   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001068   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001078   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001088   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001098   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000010A8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000010B8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000010C8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000010D8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000010E8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000010F8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001108   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001118   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001128   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001138   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001148   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001158   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001168   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001178   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001188   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001198   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000011A8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000011B8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000011C8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000011D8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000011E8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000011F8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001208   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001218   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001228   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001238   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001248   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001258   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     93          //int16_t PreCalcBuff[129][256];
     94          
     95          
     96          #if MAIN_CRSCORR
     97          arm_rfft_instance_q15 RealFFT_Ins, RealIFFT_Ins;
     98          #endif
     99          
    100          //arm_cfft_radix4_instance_f32 SS,SS1,SS2,SS3,SS4,ISS; 
    101          //arm_rfft_instance_f32 S,S1,S2,S3,S4,IS;
    102          
    103          arm_rfft_fast_instance_f32 S,S1,S2,S3,S4,IS;
   \                     S:
   \   00001268   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00001278   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .data, align 1
   \                     btnSW1:
   \   00000000   0x00               DC8 0
   \                     btnSW2:
   \   00000001   0x00               DC8 0
   \                     cntBtnPress:
   \   00000002   0x00               DC8 0
   \                     Command_index:
   \   00000003   0x01               DC8 1

   \                                 In section .bss, align 4
   \                     `S1`:
   \   00000000                      DS8 24

   \                                 In section .bss, align 4
   \                     `S2`:
   \   00000000                      DS8 24

   \                                 In section .bss, align 4
   \                     `S3`:
   \   00000000                      DS8 24

   \                                 In section .bss, align 4
   \                     `S4`:
   \   00000000                      DS8 24

   \                                 In section .bss, align 4
   \                     IS:
   \   00000000                      DS8 24
    104          
    105          
    106          #if (DEBUG)
    107          uint8_t  pUARTBuf[128];
    108          uint32_t Main_CoefMor;
    109          uint8_t stDir,flgS2,flgS3,flgS4,flgS2Flt,flgS3Flt,flgS4Flt;
    110          uint8_t flgS2Ins,flgS3Ins,flgS4Ins;
    111          #endif
    112          
    113          #if USB_STREAMING
    114          extern __IO uint16_t idxFrmPDMMic8;
    115          #endif
    116          
    117          
    118          /* Private function prototypes -----------------------------------------------*/
    119          static void SystemClock_Config(void);
    120          static void USBH_UserProcess(USBH_HandleTypeDef *phost, uint8_t id);
    121          static void CPU_CACHE_Enable(void);
    122          
    123          
    124          
    125          
    126          void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c);
    127          void MX_I2C2_Init(void);
    128          void USART3_Init(void);
    129          void ReadSTASeq(uint8_t Addr, uint8_t *pBufOut,uint8_t Len );
    130          void WriteSTAByte(uint8_t Addr, uint8_t *pBufIn, uint8_t len);
    131          void SPI5_CallBack(SPI_HandleTypeDef *hspi);
    132          uint8_t StartPlay(void);
    133          
    134          
    135          /*--------------INLINE FUNCTION-----------------------------------------------*/
    136          
    137          inline static void FFT_Update(void)
    138          {
    139          
    140                PDM2PCMSDO78();      
    141                /* Hafl buffer is filled in by I2S data stream in */
    142                if((flgDlyUpd==0))
    143                {
    144                      
    145                      //HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_15); 
    146                      FactorUpd(&FacMic); 
    147                      //STM_EVAL_LEDOn(LED3);
    148                      flgDlyUpd = 1; 
    149          /*-------------------------------------------------------------------------------------------------------------
    150          			  
    151          	Sequence  Record Data                     Processing Data                 Player Data
    152          			  
    153          	1-------  Buffer1                         Buffer2                         Buffer3
    154          			  
    155          	2-------  Buffer3                         Buffer1                         Buffer2		  
    156          			  
    157          	3-------  Buffer2                         Buffer3                         Buffer1 
    158           ---------------------------------------------------------------------------------------------------------------*/
    159                      /* Processing Data */
    160          			switch (buffer_switch)  //buffer_switch
    161          			{             
    162          			    case BUF1_PLAY:
    163          #if MAIN_CRSCORR
    164                                      for (uint16_t i=0; i<(_MAX_SS/_MAX_SS);i++)
    165                                      {
    166                                          //uint16_t i=0;
    167                                              arm_rfft_q15(&RealFFT_Ins,    (q15_t *)&buffer3[i*128],    (q15_t *)&bufferFFT[i*256]);
    168                                              arm_rfft_q15(&RealFFT_Ins,    (q15_t *)&buffer3_1[i*128],   (q15_t *)&bufferFFT_1[i*256]);
    169                                      
    170                                              arm_add_q15((q15_t *)&bufferFFT[i*256],    (q15_t *)&bufferFFT_1[i*256],    (q15_t *)&bufferFFTSum[i*256],2*128);
    171                                      
    172                                              //for (uint16_t j=0; j<256;j++)
    173                                              //{
    174                                              //	  bufferFFTSum[i*256+j]<<=6;
    175                                              //}
    176                                              
    177                                              arm_rfft_q15(&RealIFFT_Ins,    (q15_t *)&bufferFFTSum[i*256],    (q15_t *)&bufferSum[i*128]);
    178                                      }
    179          #elif MAIN_FFT
    180                              /* Summing in Buffer3 */
    181                              Delay_Sum_FFT(&Buffer3,&FacMic,(int16_t *)bufferSum, 512);
    182                              //FFT_SUM((int16_t *)buffer3, (int16_t * )buffer3_1,fbuffer, 1024);				 	   
    183          #else
    184                              //LowPassIIR(Buffer3.bufMIC1,Buffer3.bufMIC1,LowPass_Mic1Old,AUDIO_OUT_BUFFER_SIZE,COEFLOWPASS_MIC);
    185                              //LowPassIIR(Buffer3.bufMIC2,Buffer3.bufMIC2,LowPass_Mic2Old,AUDIO_OUT_BUFFER_SIZE,COEFLOWPASS_MIC);
    186                              //LowPassIIR(Buffer3.bufMIC3,Buffer3.bufMIC3,LowPass_Mic3Old,AUDIO_OUT_BUFFER_SIZE,COEFLOWPASS_MIC);
    187                              //LowPassIIR(Buffer3.bufMIC4,Buffer3.bufMIC4,LowPass_Mic4Old,AUDIO_OUT_BUFFER_SIZE,COEFLOWPASS_MIC);
    188                              //LowPassIIR(Buffer3.bufMIC5,Buffer3.bufMIC5,LowPass_Mic5Old,AUDIO_OUT_BUFFER_SIZE,COEFLOWPASS_MIC);
    189                              //LowPassIIR(Buffer3.bufMIC6,Buffer3.bufMIC6,LowPass_Mic6Old,AUDIO_OUT_BUFFER_SIZE,COEFLOWPASS_MIC);
    190                              //LowPassIIR(Buffer3.bufMIC7,Buffer3.bufMIC7,LowPass_Mic7Old,AUDIO_OUT_BUFFER_SIZE,COEFLOWPASS_MIC);
    191                              //LowPassIIR(Buffer3.bufMIC8,Buffer3.bufMIC8,LowPass_Mic8Old,AUDIO_OUT_BUFFER_SIZE,COEFLOWPASS_MIC);
    192          
    193                              //idxLatency78 = GCC_PHAT(Buffer3.bufMIC7, Buffer3.bufMIC8, AUDIO_OUT_BUFFER_SIZE,&CrssCorVal78);
    194                              //idxLatency14 = GCC_PHAT(Buffer3.bufMIC1, Buffer3.bufMIC4, AUDIO_OUT_BUFFER_SIZE,&CrssCorVal14);
    195                              //idxLatency25 = GCC_PHAT(Buffer3.bufMIC5, Buffer3.bufMIC2, AUDIO_OUT_BUFFER_SIZE,&CrssCorVal25);
    196                              //idxLatency63 = GCC_PHAT(Buffer3.bufMIC6, Buffer3.bufMIC3, AUDIO_OUT_BUFFER_SIZE,&CrssCorVal63);
    197                             
    198          
    199                              SumDelay(&Buffer3);
    200          #endif
    201          					
    202          					break;
    203          				case BUF2_PLAY:
    204          
    205          #if MAIN_CRSCORR
    206                               for (uint16_t i=0; i<(_MAX_SS/128);i++)
    207                               { 
    208                                  //uint16_t i=0;
    209                                  arm_rfft_q15(&RealFFT_Ins,(q15_t *)&buffer1[i*128],(q15_t *)&bufferFFT[i*256]);
    210                                  arm_rfft_q15(&RealFFT_Ins,(q15_t *)&buffer1_1[i*128],(q15_t *)&bufferFFT_1[i*256]);
    211          
    212                                  arm_add_q15((q15_t *)&bufferFFT[i*256],    (q15_t *)&bufferFFT_1[i*256],    (q15_t *)&bufferFFTSum[i*256],
    213                                                  2*128);
    214          
    215                                  //for (uint16_t j=0; j<256;j++)
    216                                  //{
    217                                  //	   bufferFFTSum[i*256+j]<<=6;
    218                                  //}
    219          
    220          
    221                                  arm_rfft_q15(&RealIFFT_Ins,(q15_t *)&bufferFFTSum[i*256],(q15_t *)&bufferSum[i*128]);
    222                               }
    223          #elif MAIN_FFT
    224                              /* Summing in Buffer1 */	 
    225                              Delay_Sum_FFT(&Buffer1, &FacMic,(int16_t * )bufferSum,512);
    226                              //FFT_SUM((int16_t *)buffer1, (int16_t * )buffer1_1,fbuffer, 1024);
    227          
    228          #else
    229                          
    230                            //idxLatency13 = CrssCor(Buffer1.bufMIC1, Buffer1.bufMIC3, AUDIO_OUT_BUFFER_SIZE/2); 
    231                            //idxLatency12 = CrssCor(Buffer1.bufMIC1, Buffer1.bufMIC2, AUDIO_OUT_BUFFER_SIZE/2);
    232          					//LowPassIIR(Buffer1.bufMIC1,Buffer1.bufMIC1,LowPass_Mic1Old,AUDIO_OUT_BUFFER_SIZE,COEFLOWPASS_MIC);
    233          					//LowPassIIR(Buffer1.bufMIC2,Buffer1.bufMIC2,LowPass_Mic2Old,AUDIO_OUT_BUFFER_SIZE,COEFLOWPASS_MIC);
    234          					//LowPassIIR(Buffer1.bufMIC3,Buffer1.bufMIC3,LowPass_Mic3Old,AUDIO_OUT_BUFFER_SIZE,COEFLOWPASS_MIC);
    235          					//LowPassIIR(Buffer1.bufMIC4,Buffer1.bufMIC4,LowPass_Mic4Old,AUDIO_OUT_BUFFER_SIZE,COEFLOWPASS_MIC);
    236          					//LowPassIIR(Buffer1.bufMIC5,Buffer1.bufMIC5,LowPass_Mic5Old,AUDIO_OUT_BUFFER_SIZE,COEFLOWPASS_MIC);
    237          					//LowPassIIR(Buffer1.bufMIC6,Buffer1.bufMIC6,LowPass_Mic6Old,AUDIO_OUT_BUFFER_SIZE,COEFLOWPASS_MIC);
    238          					//LowPassIIR(Buffer1.bufMIC7,Buffer1.bufMIC7,LowPass_Mic7Old,AUDIO_OUT_BUFFER_SIZE,COEFLOWPASS_MIC);
    239          					//LowPassIIR(Buffer1.bufMIC8,Buffer1.bufMIC8,LowPass_Mic8Old,AUDIO_OUT_BUFFER_SIZE,COEFLOWPASS_MIC);
    240          					
    241                            //idxLatency78 = GCC_PHAT(Buffer1.bufMIC7, Buffer1.bufMIC8, AUDIO_OUT_BUFFER_SIZE,&CrssCorVal78);	
    242                            //idxLatency14 = GCC_PHAT(Buffer1.bufMIC1, Buffer1.bufMIC4, AUDIO_OUT_BUFFER_SIZE,&CrssCorVal14);
    243                            //idxLatency25 = GCC_PHAT(Buffer1.bufMIC5, Buffer1.bufMIC2, AUDIO_OUT_BUFFER_SIZE,&CrssCorVal25);
    244                            //idxLatency63 = GCC_PHAT(Buffer1.bufMIC6, Buffer1.bufMIC3, AUDIO_OUT_BUFFER_SIZE,&CrssCorVal63);
    245          
    246          
    247          
    248                            SumDelay(&Buffer1);
    249          #endif
    250          	    break;
    251          					
    252          	   case BUF3_PLAY:
    253          #if MAIN_CRSCORR
    254                    for (uint16_t i=0; i<(_MAX_SS/128);i++)
    255                    {
    256                        arm_rfft_q15(&RealFFT_Ins,(q15_t *)&buffer2[i*128],(q15_t *)&bufferFFT[i*256]);
    257                        arm_rfft_q15(&RealFFT_Ins,(q15_t *)&buffer2_1[i*128],(q15_t *)&bufferFFT_1[i*256]);
    258          
    259                        arm_add_q15((q15_t *)&bufferFFT[i*256],    (q15_t *)&bufferFFT_1[i*256],	(q15_t *)&bufferFFTSum[i*256],
    260                                           2*128);
    261          
    262                        //for (uint16_t j=0; j<256;j++)
    263                        //{
    264                        //   bufferFFTSum[i*256+j]<<=6;
    265                        //}
    266          
    267          
    268                        arm_rfft_q15(&RealIFFT_Ins,(q15_t *)&bufferFFTSum[i*256],(q15_t *)&bufferSum[i*128]);
    269                    }
    270          #elif MAIN_FFT
    271                  /* Summing in Buffer2 */
    272                  Delay_Sum_FFT(&Buffer2,&FacMic, (int16_t * )bufferSum, 512);
    273                  //FFT_SUM((int16_t *)buffer2, (int16_t * )buffer2_1,fbuffer, 1024);				
    274          #else
    275          
    276                    //idxLatency13 = CrssCor(Buffer2.bufMIC1, Buffer2.bufMIC3, AUDIO_OUT_BUFFER_SIZE/2); 
    277                    //idxLatency12 = CrssCor(Buffer2.bufMIC1, Buffer2.bufMIC2, AUDIO_OUT_BUFFER_SIZE/2);
    278          
    279          		  //LowPassIIR(Buffer2.bufMIC1,Buffer2.bufMIC1,LowPass_Mic1Old,AUDIO_OUT_BUFFER_SIZE,COEFLOWPASS_MIC);
    280          		  //LowPassIIR(Buffer2.bufMIC2,Buffer2.bufMIC2,LowPass_Mic2Old,AUDIO_OUT_BUFFER_SIZE,COEFLOWPASS_MIC);
    281          		  //LowPassIIR(Buffer2.bufMIC3,Buffer2.bufMIC3,LowPass_Mic3Old,AUDIO_OUT_BUFFER_SIZE,COEFLOWPASS_MIC);
    282          		  //LowPassIIR(Buffer2.bufMIC4,Buffer2.bufMIC4,LowPass_Mic4Old,AUDIO_OUT_BUFFER_SIZE,COEFLOWPASS_MIC);
    283          		  //LowPassIIR(Buffer2.bufMIC5,Buffer2.bufMIC5,LowPass_Mic5Old,AUDIO_OUT_BUFFER_SIZE,COEFLOWPASS_MIC);
    284          		  //LowPassIIR(Buffer2.bufMIC6,Buffer2.bufMIC6,LowPass_Mic6Old,AUDIO_OUT_BUFFER_SIZE,COEFLOWPASS_MIC);
    285          		  //LowPassIIR(Buffer2.bufMIC7,Buffer2.bufMIC7,LowPass_Mic7Old,AUDIO_OUT_BUFFER_SIZE,COEFLOWPASS_MIC);
    286          		  //LowPassIIR(Buffer2.bufMIC8,Buffer2.bufMIC8,LowPass_Mic8Old,AUDIO_OUT_BUFFER_SIZE,COEFLOWPASS_MIC);
    287          
    288                    //idxLatency78 = GCC_PHAT(Buffer2.bufMIC7, Buffer2.bufMIC8, AUDIO_OUT_BUFFER_SIZE,&CrssCorVal78);
    289                    //idxLatency14 = GCC_PHAT(Buffer2.bufMIC1, Buffer2.bufMIC4, AUDIO_OUT_BUFFER_SIZE,&CrssCorVal14);
    290                    //idxLatency25 = GCC_PHAT(Buffer2.bufMIC5, Buffer2.bufMIC2, AUDIO_OUT_BUFFER_SIZE,&CrssCorVal25);
    291                    //idxLatency63 = GCC_PHAT(Buffer2.bufMIC6, Buffer2.bufMIC3, AUDIO_OUT_BUFFER_SIZE,&CrssCorVal63);
    292          
    293                    SumDelay(&Buffer2);
    294          #endif
    295          					break;
    296          					
    297          				default:
    298          					break;
    299                         
    300          			}
    301          			AudioPlayerUpd();
    302          	       //HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_15);
    303          	  }
    304          	  
    305          
    306          }
    307          
    308          
    309          inline static void Audio_Play_Out(void)
    310          {
    311          
    312          /*-------------------------------------------------------------------------------------------------------------
    313          			  
    314          	Sequence  Record Data                     Processing Data                 Player Data
    315          			  
    316          	1-------  Buffer1                         Buffer2                          Buffer3
    317          			  
    318          	2-------  Buffer3                         Buffer1                           Buffer2		  
    319          			  
    320          	3-------  Buffer2                         Buffer3                           Buffer1 
    321           ---------------------------------------------------------------------------------------------------------------*/
    322              //Audio_MAL_Play((uint32_t)&bufferSum[idxFrmPDMMic8*AUDIO_CHANNELS*(6*AUDIO_SAMPLING_FREQUENCY/1000)], 2*6*AUDIO_CHANNELS*(AUDIO_SAMPLING_FREQUENCY/1000));
    323              //Audio_MAL_Play((uint32_t)&bufferSum, 2*3*AUDIO_CHANNELS*AUDIO_OUT_BUFFER_SIZE);
    324              flgRacing=0;
    325          
    326          #if USB_STREAMING
    327          			  AudioUSBSend(idxFrmPDMMic8);
    328          #endif
    329          
    330              ++idxFrmPDMMic8;
    331          	/* if player is finished for curent buffer                                  */ 
    332          	if (idxFrmPDMMic8 == AUDIO_OUT_BUFFER_SIZE/(AUDIO_SAMPLING_FREQUENCY/1000))
    333          	{
    334          	       RESET_IDX
    335          		   //MIC7Rec();
    336          		   //MIC8Rec();
    337                     WaveRec_idxTest=0;
    338                     idxFrmPDMMic8=0;
    339                      switch (buffer_switch)
    340                      {
    341                          case BUF1_PLAY:
    342                                /* set flag for switch buffer */		  
    343                            buffer_switch = BUF3_PLAY;
    344                            break;
    345                          case BUF2_PLAY:
    346                            /* set flag for switch buffer */
    347                            buffer_switch = BUF1_PLAY;        
    348                            break;
    349                          case BUF3_PLAY:
    350                            /* set flag for switch buffer */		  
    351                            buffer_switch = BUF2_PLAY;
    352                            break;
    353                          default:
    354                            break;
    355                      }
    356          
    357          			
    358                    if (cntStrt<100) cntStrt++;
    359          
    360          
    361          		 /* Tongle status to switch the USB audio buffer out */
    362          
    363          	}			 
    364          
    365          }
    366          
    367          
    368          /* Private functions ---------------------------------------------------------*/
    369          
    370          /**
    371            * @brief  Main program
    372            * @param  None
    373            * @retval None
    374            */

   \                                 In section .text, align 4, keep-with-next
    375          int main(void)
    376          {
   \                     main: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB0A3             SUB      SP,SP,#+140
    377            /* Enable the CPU Cache */
    378            CPU_CACHE_Enable();
   \   00000006   0xF3BF 0x8F4F      DSB      
   \   0000000A   0xF3BF 0x8F6F      ISB      
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable13  ;; 0xe000ed14
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0xF8C0 0x123C      STR      R1,[R0, #+572]
   \   00000018   0x6801             LDR      R1,[R0, #+0]
   \   0000001A   0xF441 0x3100      ORR      R1,R1,#0x20000
   \   0000001E   0x6001             STR      R1,[R0, #+0]
   \   00000020   0xF3BF 0x8F4F      DSB      
   \   00000024   0xF3BF 0x8F6F      ISB      
   \   00000028   0x2100             MOVS     R1,#+0
   \   0000002A   0x6701             STR      R1,[R0, #+112]
   \   0000002C   0xF3BF 0x8F4F      DSB      
   \   00000030   0xF8D0 0x106C      LDR.W    R1,[R0, #+108]
   \   00000034   0xF3C1 0x324E      UBFX     R2,R1,#+13,#+15
   \                     ??main_0: (+1)
   \   00000038   0xF643 0x74E0      MOVW     R4,#+16352
   \   0000003C   0xF3C1 0x03C9      UBFX     R3,R1,#+3,#+10
   \   00000040   0xEA04 0x1442      AND      R4,R4,R2, LSL #+5
   \                     ??main_1: (+1)
   \   00000044   0xEA44 0x7583      ORR      R5,R4,R3, LSL #+30
   \   00000048   0xF8C0 0x524C      STR      R5,[R0, #+588]
   \   0000004C   0x461D             MOV      R5,R3
   \   0000004E   0x1E6B             SUBS     R3,R5,#+1
   \   00000050   0x2D00             CMP      R5,#+0
   \   00000052   0xD1F7             BNE.N    ??main_1
   \   00000054   0x4613             MOV      R3,R2
   \   00000056   0x1E5A             SUBS     R2,R3,#+1
   \   00000058   0x2B00             CMP      R3,#+0
   \   0000005A   0xD1ED             BNE.N    ??main_0
   \   0000005C   0xF3BF 0x8F4F      DSB      
   \   00000060   0x6801             LDR      R1,[R0, #+0]
   \   00000062   0xF441 0x3180      ORR      R1,R1,#0x10000
   \   00000066   0x6001             STR      R1,[R0, #+0]
   \   00000068   0xF3BF 0x8F4F      DSB      
   \   0000006C   0xF3BF 0x8F6F      ISB      
    379            
    380            /* STM32F7xx HAL library initialization:
    381                 - Configure the Flash ART accelerator on ITCM interface
    382                 - Configure the Systick to generate an interrupt each 1 msec
    383                 - Set NVIC Group Priority to 4
    384                 - Global MSP (MCU Support Package) initialization
    385               */   
    386            HAL_Init();
   \   00000070   0x.... 0x....      BL       HAL_Init
    387            /* Configure the system clock to 216 MHz */
    388            //Test_SystemClock_Config(); 
    389            SystemClock_Config();
   \   00000074   0x.... 0x....      BL       SystemClock_Config
    390            BSP_AUDIO_OUT_ClockConfig(3*AUDIO_FREQ, NULL);
   \   00000078   0xA801             ADD      R0,SP,#+4
   \   0000007A   0x.... 0x....      LDR.W    R4,??DataTable13_1
   \   0000007E   0x.... 0x....      BL       HAL_RCCEx_GetPeriphCLKConfig
   \   00000082   0xF44F 0x1080      MOV      R0,#+1048576
   \   00000086   0x.... 0x....      LDR.W    R5,??DataTable13_2  ;; 0x40023830
   \   0000008A   0x9001             STR      R0,[SP, #+4]
   \   0000008C   0xF44F 0x0080      MOV      R0,#+4194304
   \   00000090   0x9011             STR      R0,[SP, #+68]
   \   00000092   0xF44F 0x70AC      MOV      R0,#+344
   \   00000096   0x9002             STR      R0,[SP, #+8]
   \   00000098   0x2007             MOVS     R0,#+7
   \   0000009A   0x9004             STR      R0,[SP, #+16]
   \   0000009C   0x2001             MOVS     R0,#+1
   \   0000009E   0x900A             STR      R0,[SP, #+40]
   \   000000A0   0xA801             ADD      R0,SP,#+4
   \   000000A2   0x.... 0x....      BL       HAL_RCCEx_PeriphCLKConfig
    391          #if EXT_RAM  
    392            /* Initialize the SDRAM */
    393            BSP_SDRAM_Init();
    394          #endif
    395            BSP_LED_Init(LED1);
   \   000000A6   0x2000             MOVS     R0,#+0
   \   000000A8   0x.... 0x....      LDR.W    R8,??DataTable13_3  ;; 0x40021000
   \   000000AC   0x.... 0x....      BL       BSP_LED_Init
    396            BSP_LED_Init(LED2);
   \   000000B0   0x2001             MOVS     R0,#+1
   \   000000B2   0x.... 0x....      BL       BSP_LED_Init
    397          
    398            /* Button Initialization */
    399            ButtonInit();
   \   000000B6   0x.... 0x....      BL       ButtonInit
    400            //BSP_PB_Init(BUTTON_KEY,BUTTON_MODE_EXTI);
    401          
    402            
    403            /* Init TS module */
    404             DFT_Init();	
   \   000000BA   0xF504 0x5090      ADD      R0,R4,#+4608
   \   000000BE   0xF44F 0x6180      MOV      R1,#+1024
   \   000000C2   0x3068             ADDS     R0,R0,#+104
   \   000000C4   0x.... 0x....      BL       arm_rfft_fast_init_f32
    405          
    406              /* ---------PA4: LCCKO(I2S2)-------------*/
    407              __GPIOA_CLK_ENABLE();
   \   000000C8   0x6828             LDR      R0,[R5, #+0]
    408              GPIO_INS.Pin = GPIO_PIN_4;
    409              GPIO_INS.Mode =GPIO_MODE_IT_RISING;
    410              GPIO_INS.Pull =GPIO_PULLUP;
    411              GPIO_INS.Speed =GPIO_SPEED_HIGH;
    412              HAL_GPIO_Init(GPIOA,&GPIO_INS);
   \   000000CA   0x4621             MOV      R1,R4
   \   000000CC   0xF040 0x0001      ORR      R0,R0,#0x1
   \   000000D0   0x6028             STR      R0,[R5, #+0]
   \   000000D2   0x6828             LDR      R0,[R5, #+0]
   \   000000D4   0xF000 0x0001      AND      R0,R0,#0x1
   \   000000D8   0x9000             STR      R0,[SP, #+0]
   \   000000DA   0x9800             LDR      R0,[SP, #+0]
   \   000000DC   0x2010             MOVS     R0,#+16
   \   000000DE   0x6020             STR      R0,[R4, #+0]
   \   000000E0   0x.... 0x....      LDR.W    R0,??DataTable13_4  ;; 0x10110000
   \   000000E4   0x6060             STR      R0,[R4, #+4]
   \   000000E6   0x2001             MOVS     R0,#+1
   \   000000E8   0x60A0             STR      R0,[R4, #+8]
   \   000000EA   0x2003             MOVS     R0,#+3
   \   000000EC   0x60E0             STR      R0,[R4, #+12]
   \   000000EE   0x.... 0x....      LDR.W    R0,??DataTable13_5  ;; 0x40020000
   \   000000F2   0x.... 0x....      BL       HAL_GPIO_Init
    413          
    414              /* Enable and set Button EXTI Interrupt to the lowest priority */
    415              HAL_NVIC_SetPriority((IRQn_Type)EXTI4_IRQn, INTERRUPT_PRI_EXT_LRCK, 0);
   \   000000F6   0x2200             MOVS     R2,#+0
   \   000000F8   0x2106             MOVS     R1,#+6
   \   000000FA   0x200A             MOVS     R0,#+10
   \   000000FC   0x.... 0x....      BL       HAL_NVIC_SetPriority
    416              HAL_NVIC_EnableIRQ((IRQn_Type)EXTI4_IRQn);
   \   00000100   0x200A             MOVS     R0,#+10
   \   00000102   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
    417              /*-----------------------*/
    418          
    419               /* ---------PB12: LCCKO (I2S2)-------------*/
    420              __GPIOB_CLK_ENABLE();
   \   00000106   0x6828             LDR      R0,[R5, #+0]
    421              GPIO_INS.Pin = GPIO_PIN_12;
    422              GPIO_INS.Mode =GPIO_MODE_INPUT;
    423              GPIO_INS.Pull =GPIO_PULLUP;
    424              GPIO_INS.Speed =GPIO_SPEED_HIGH;
    425              HAL_GPIO_Init(GPIOB,&GPIO_INS);
   \   00000108   0x4621             MOV      R1,R4
   \   0000010A   0xF040 0x0002      ORR      R0,R0,#0x2
   \   0000010E   0x6028             STR      R0,[R5, #+0]
   \   00000110   0x6828             LDR      R0,[R5, #+0]
   \   00000112   0xF000 0x0002      AND      R0,R0,#0x2
   \   00000116   0x9000             STR      R0,[SP, #+0]
   \   00000118   0x9800             LDR      R0,[SP, #+0]
   \   0000011A   0xF44F 0x5080      MOV      R0,#+4096
   \   0000011E   0x6020             STR      R0,[R4, #+0]
   \   00000120   0x2000             MOVS     R0,#+0
   \   00000122   0x6060             STR      R0,[R4, #+4]
   \   00000124   0x2001             MOVS     R0,#+1
   \   00000126   0x60A0             STR      R0,[R4, #+8]
   \   00000128   0x2003             MOVS     R0,#+3
   \   0000012A   0x60E0             STR      R0,[R4, #+12]
   \   0000012C   0x.... 0x....      LDR.W    R0,??DataTable13_6  ;; 0x40020400
   \   00000130   0x.... 0x....      BL       HAL_GPIO_Init
    426              /*-----------------------------------------*/
    427          
    428              /* ---------PE4: LCCKO --------------------*/
    429              __GPIOE_CLK_ENABLE();
   \   00000134   0x6828             LDR      R0,[R5, #+0]
    430              GPIO_INS.Pin = GPIO_PIN_4;
    431              GPIO_INS.Mode =GPIO_MODE_INPUT;
    432              GPIO_INS.Pull =GPIO_PULLUP;
    433              GPIO_INS.Speed =GPIO_SPEED_HIGH;
    434              HAL_GPIO_Init(GPIOE,&GPIO_INS);
   \   00000136   0x4621             MOV      R1,R4
   \   00000138   0xF040 0x0010      ORR      R0,R0,#0x10
   \   0000013C   0x6028             STR      R0,[R5, #+0]
   \   0000013E   0x6828             LDR      R0,[R5, #+0]
   \   00000140   0xF000 0x0010      AND      R0,R0,#0x10
   \   00000144   0x9000             STR      R0,[SP, #+0]
   \   00000146   0x9800             LDR      R0,[SP, #+0]
   \   00000148   0x2010             MOVS     R0,#+16
   \   0000014A   0x6020             STR      R0,[R4, #+0]
   \   0000014C   0x2000             MOVS     R0,#+0
   \   0000014E   0x6060             STR      R0,[R4, #+4]
   \   00000150   0x2001             MOVS     R0,#+1
   \   00000152   0x60A0             STR      R0,[R4, #+8]
   \   00000154   0x2003             MOVS     R0,#+3
   \   00000156   0x60E0             STR      R0,[R4, #+12]
   \   00000158   0x4640             MOV      R0,R8
   \   0000015A   0x.... 0x....      BL       HAL_GPIO_Init
    435              /*-----------------------------------------*/
    436          
    437              /*---------PE3: POWER DOWN-----------------*/
    438              __GPIOE_CLK_ENABLE();
   \   0000015E   0x6828             LDR      R0,[R5, #+0]
    439              GPIO_INS.Pin = GPIO_PIN_3;
    440              GPIO_INS.Mode = GPIO_MODE_OUTPUT_PP;
    441              GPIO_INS.Pull = GPIO_PULLUP;
    442              GPIO_INS.Speed = GPIO_SPEED_HIGH;
    443          
    444              HAL_GPIO_Init(GPIOE, &GPIO_INS);
   \   00000160   0x4621             MOV      R1,R4
   \   00000162   0xF040 0x0010      ORR      R0,R0,#0x10
   \   00000166   0x6028             STR      R0,[R5, #+0]
   \   00000168   0x6828             LDR      R0,[R5, #+0]
   \   0000016A   0xF000 0x0010      AND      R0,R0,#0x10
   \   0000016E   0x9000             STR      R0,[SP, #+0]
   \   00000170   0x9800             LDR      R0,[SP, #+0]
   \   00000172   0x2008             MOVS     R0,#+8
   \   00000174   0x6020             STR      R0,[R4, #+0]
   \   00000176   0x2001             MOVS     R0,#+1
   \   00000178   0x6060             STR      R0,[R4, #+4]
   \   0000017A   0x60A0             STR      R0,[R4, #+8]
   \   0000017C   0x2003             MOVS     R0,#+3
   \   0000017E   0x60E0             STR      R0,[R4, #+12]
   \   00000180   0x4640             MOV      R0,R8
   \   00000182   0x.... 0x....      BL       HAL_GPIO_Init
    445          
    446              HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, GPIO_PIN_RESET);
   \   00000186   0x2200             MOVS     R2,#+0
   \   00000188   0x2108             MOVS     R1,#+8
   \   0000018A   0x4640             MOV      R0,R8
   \   0000018C   0x.... 0x....      BL       HAL_GPIO_WritePin
    447              //HAL_Delay(300);
    448              /*----------------------------------------*/
    449          
    450          #if (DEBUG)  
    451              /* UART for debug */
    452              USART3_Init();
    453          #endif
    454          
    455          #if (USB_STREAMING)	
    456          		/* Initialize USB descriptor basing on channels number and sampling frequency */
    457          		USBD_AUDIO_Init_Microphone_Descriptor(&hUSBDDevice, 4*AUDIO_SAMPLING_FREQUENCY, AUDIO_CHANNELS);
   \   00000190   0x2202             MOVS     R2,#+2
   \   00000192   0xF44F 0x417A      MOV      R1,#+64000
   \   00000196   0xF104 0x0044      ADD      R0,R4,#+68
   \   0000019A   0x.... 0x....      BL       USBD_AUDIO_Init_Microphone_Descriptor
    458          		/* Init Device Library */
    459          		USBD_Init(&hUSBDDevice, &AUDIO_Desc, 0);
   \   0000019E   0x2200             MOVS     R2,#+0
   \   000001A0   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   000001A4   0xF104 0x0044      ADD      R0,R4,#+68
   \   000001A8   0x.... 0x....      BL       USBD_Init
    460          		/* Add Supported Class */
    461          		USBD_RegisterClass(&hUSBDDevice, &USBD_AUDIO);
   \   000001AC   0x.... 0x....      LDR.W    R1,??DataTable13_8
   \   000001B0   0xF104 0x0044      ADD      R0,R4,#+68
   \   000001B4   0x.... 0x....      BL       USBD_RegisterClass
    462          		/* Add Interface callbacks for AUDIO Class */  
    463          		USBD_AUDIO_RegisterInterface(&hUSBDDevice, &USBD_AUDIO_fops);
   \   000001B8   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   000001BC   0xF104 0x0044      ADD      R0,R4,#+68
   \   000001C0   0x.... 0x....      BL       USBD_AUDIO_RegisterInterface
    464          		/* Start Device Process */
    465          		USBD_Start(&hUSBDDevice);
   \   000001C4   0xF104 0x0044      ADD      R0,R4,#+68
   \   000001C8   0x.... 0x....      BL       USBD_Start
    466          	
    467          		/* Init Host Library */
    468          		//test GIT //USBH_Init(&hUSBHost, USBH_UserProcess, 0);
    469          	
    470          		/* Add Supported Class */
    471          		//test GIT //USBH_RegisterClass(&hUSBHost, USBH_MSC_CLASS);
    472          		
    473          		/* Start Host Process */
    474          		//test GIT //USBH_Start(&hUSBHost); 					  
    475          #endif 
    476          
    477             AUDIO_InitApplication();
   \   000001CC   0x.... 0x....      BL       AUDIO_InitApplication
    478           
    479           					  
    480          
    481              /*----------------------------------------*/
    482              MX_I2C2_Init(); //for STA321MP
   \   000001D0   0x.... 0x....      BL       MX_I2C2_Init
    483              STA321MP_Ini();
   \   000001D4   0x.... 0x....      BL       STA321MP_Ini
    484              BSP_LED_Toggle(LED1);
   \   000001D8   0x2000             MOVS     R0,#+0
   \   000001DA   0x.... 0x....      LDR.W    R5,??DataTable13_10
   \   000001DE   0x.... 0x....      BL       BSP_LED_Toggle
    485              /* Init Audio Application */
    486          #ifdef CS43L22_PLAY
    487              AUDIO_InitApplication();
    488          #endif
    489              BSP_LED_Toggle(LED2);
   \   000001E2   0x2001             MOVS     R0,#+1
   \   000001E4   0x.... 0x....      LDR.W    R8,??DataTable13_11
   \   000001E8   0x.... 0x....      BL       BSP_LED_Toggle
    490          
    491              buffer_switch = BUF3_PLAY;		 /* record data to buffer1 */
   \   000001EC   0x2002             MOVS     R0,#+2
   \   000001EE   0x.... 0x....      LDR.W    R10,??DataTable13_12
   \   000001F2   0xF884 0x002E      STRB     R0,[R4, #+46]
   \   000001F6   0x.... 0x....      LDR.W    R6,??DataTable13_13
    492              MIC1TO8_Init();
   \   000001FA   0x.... 0x....      BL       MIC1TO8_Init
    493              BSP_LED_Toggle(LED1);
   \   000001FE   0x2000             MOVS     R0,#+0
   \   00000200   0x.... 0x....      LDR.W    R9,??DataTable13_14
   \   00000204   0x.... 0x....      BL       BSP_LED_Toggle
    494          
    495              Window(fir256Coff);
   \   00000208   0xF504 0x701A      ADD      R0,R4,#+616
   \   0000020C   0x.... 0x....      LDR.W    R7,??DataTable13_15
   \   00000210   0x.... 0x....      BL       Window
    496          	EnergyNoiseCalc(AUDIO_OUT_BUFFER_SIZE/2);
   \   00000214   0xF44F 0x7000      MOV      R0,#+512
   \   00000218   0x.... 0x....      LDR.W    R11,??DataTable13_16
   \   0000021C   0x.... 0x....      BL       EnergyNoiseCalc
    497          	StartPlay();
   \   00000220   0x.... 0x....      BL       StartRecMic7_8
   \   00000224   0xF44F 0x71C0      MOV      R1,#+384
   \   00000228   0x.... 0x....      LDR.W    R0,??DataTable13_17
   \   0000022C   0x.... 0x....      BL       Audio_MAL_Play
   \   00000230   0x2000             MOVS     R0,#+0
   \   00000232   0x.... 0x....      LDR.W    R1,??DataTable13_18
   \   00000236   0x86E0             STRH     R0,[R4, #+54]
   \   00000238   0x8720             STRH     R0,[R4, #+56]
   \   0000023A   0x8660             STRH     R0,[R4, #+50]
   \   0000023C   0x8620             STRH     R0,[R4, #+48]
   \   0000023E   0x8760             STRH     R0,[R4, #+58]
   \   00000240   0x87A0             STRH     R0,[R4, #+60]
   \   00000242   0x8008             STRH     R0,[R1, #+0]
   \   00000244   0xF884 0x002E      STRB     R0,[R4, #+46]
   \   00000248   0xE016             B.N      ??main_2
    498          
    499              //Precalculation(Coef,PreCalcBuff);
    500          
    501              while (1)
    502              {
   \                     ??main_3: (+1)
   \   0000024A   0x4628             MOV      R0,R5
   \                     ??main_4: (+1)
   \   0000024C   0x.... 0x....      BL       SumDelay
   \                     ??main_5: (+1)
   \   00000250   0x.... 0x....      BL       AudioPlayerUpd
    503          
    504          
    505                          /* This calculation happens once time in power cycles */
    506                          /* After 5 times of full frame recieved interrupt */
    507                         if ((cntStrt>=5))
    508                         {
    509          		      if ((WaveRecord_flgIni<200))
    510          		      {
    511                            for(char i=0;i<16;i++)
    512                            {
    513                               if (ValBit(SPI4_stNipple,i)!=0) 
    514                               {
    515                                    SPI4_stPosShft = MAX(SPI4_stPosShft,i+1);
    516                               }
    517                            }
    518          		          WaveRecord_flgIni++;			
    519          		      }   
    520          		 }
    521          	
    522          		/* USB Host Background task */
    523          		//USBH_Process(&hUSBHost);
    524          
    525          		/* AUDIO Menu Process */
    526          		//AUDIO_MenuProcess();
    527          		
    528          		FFT_Update(); 
    529          
    530          		if (flg10ms==1)
   \                     ??main_6: (+1)
   \   00000254   0xF894 0x002D      LDRB     R0,[R4, #+45]
   \   00000258   0x2801             CMP      R0,#+1
   \   0000025A   0xD10D             BNE.N    ??main_2
    531          		{
    532          		    flg10ms=0;		   		      
   \   0000025C   0x2000             MOVS     R0,#+0
   \   0000025E   0xF884 0x002D      STRB     R0,[R4, #+45]
    533          	         cntTime200++;
   \   00000262   0xF8B4 0x0040      LDRH     R0,[R4, #+64]
   \   00000266   0x1C40             ADDS     R0,R0,#+1
   \   00000268   0xF8A4 0x0040      STRH     R0,[R4, #+64]
    534          	         if (cntTime200==40)
   \   0000026C   0xB280             UXTH     R0,R0
   \   0000026E   0x2828             CMP      R0,#+40
   \   00000270   0xBF04             ITT      EQ 
   \   00000272   0x2000             MOVEQ    R0,#+0
   \   00000274   0xF8A4 0x0040      STRHEQ   R0,[R4, #+64]
    535          	         {
    536          	 
    537          #if (DEBUG)
    538                             uint32_t tmpSNR63,tmpSNR14,tmpSNR78,tmpSNR25;
    539                             tmpSNR78 = (uint32_t)(CrssCorVal78/EnergyError);
    540                             tmpSNR25 = (uint32_t)(CrssCorVal25/EnergyError);
    541          				   tmpSNR14 = (uint32_t)(CrssCorVal14/EnergyError);
    542          				   tmpSNR63 = (uint32_t)(CrssCorVal63/EnergyError);
    543                              //if (tmpSNR>10)
    544                              {
    545                                  int16_t test[5];
    546                                  static uint8_t flagNotMin;
    547                                  test[0] = 0;
    548          						if (CrssCorVal63>10)						
    549                                      test[1]= idxLatency63;
    550          						else
    551          							test[1] = 0;
    552          
    553          						if (CrssCorVal14>10)
    554                                      test[2]= idxLatency14;
    555          						else
    556          							test[2] =0;
    557          
    558          						if (CrssCorVal25 > 10)
    559                                      test[3]= idxLatency25;
    560          						else
    561          							test[3] = 0;
    562          
    563                                  if (CrssCorVal78>10)
    564          						    test[4]= idxLatency78;                        
    565          						else
    566          							test[4]= 2;
    567          
    568          						if (((CrssCorVal63>10))||((CrssCorVal14>10))||((CrssCorVal25>10))||((CrssCorVal78>10)))
    569                                  {
    570                                       sprintf((char *)pUARTBuf,"%d:%d:%d:%d  ",idxLatency63,idxLatency14,idxLatency25,idxLatency78);
    571                                       flagNotMin=0 ;
    572                                        sprintf((char *)(pUARTBuf+15),"----------\r\n");
    573                                        if (test[3]>0)
    574                                        {
    575                                                sprintf((char *)(pUARTBuf+15),"Close Mic 5\r\n"); 
    576          									  flagNotMin=1;
    577                                        }
    578                                        else if (test[3]<0)
    579                                        {
    580                                              sprintf((char *)(pUARTBuf+15),"Clsoe Mic 2\r\n");
    581          									flagNotMin=1;
    582          
    583                                        }
    584                                        else
    585                                        {
    586                                             
    587                                        }	
    588          
    589          						
    590          				                if (test[2]>0)
    591          		                  	    {
    592          		                  	       if((CrssCorVal14>CrssCorVal25)||(flagNotMin==0))
    593          		                  	       {
    594          		                             sprintf((char *)(pUARTBuf+15),"Clsoe Mic 4\r\n");
    595          									 flagNotMin=2;
    596          		                  	       }
    597          		                  	    }
    598          		                        else if (test[2]<0)
    599          		                        {
    600          		                            if((CrssCorVal14>CrssCorVal25)||(flagNotMin==0))
    601          		                            {
    602          		                              sprintf((char *)(pUARTBuf+15),"Clsoe Mic 1\r\n");                             
    603          									  flagNotMin=2;
    604          		                            }
    605          		                        }
    606          		                        else
    607          		                        {
    608          
    609          		                        }
    610          
    611          						   
    612          		                        if (test[1]>0)
    613          		                  	    {
    614          		                  	       if((((CrssCorVal63>CrssCorVal25)&&(flagNotMin==1))||(flagNotMin==0))||((CrssCorVal63>CrssCorVal14)&&(flagNotMin==2)))
    615          		                  	       {
    616          								     sprintf((char *)(pUARTBuf+15),"Clsoe Mic 3\r\n");
    617          								     flagNotMin=3;
    618          		                  	       }
    619          		                  	    }
    620          		                        else if (test[1]<0)
    621          		                        {
    622          		                             if((((CrssCorVal63>CrssCorVal25)&&(flagNotMin==1))||(flagNotMin==0))||((CrssCorVal63>CrssCorVal14)&&(flagNotMin==2)))
    623          		                             {
    624          		                               sprintf((char *)(pUARTBuf+15),"Clsoe Mic 6\r\n"); 
    625          									   flagNotMin=3;
    626          		                             }
    627          		                        }
    628          		                        else
    629          		                        {
    630          
    631          		                        }
    632          
    633          
    634          	                            if ((test[4]>3))
    635          	                            {
    636          	                                if ((flagNotMin==0))                                     
    637          	                                    sprintf((char *)(pUARTBuf+15),"Clsoe Mic 7\r\n");
    638          								    else if ((flagNotMin==1))
    639          										if ((CrssCorVal78>CrssCorVal25))
    640          											sprintf((char *)(pUARTBuf+15),"Clsoe Mic 7\r\n");
    641          								    else if ((flagNotMin==2))
    642          										if ((CrssCorVal78>CrssCorVal14))
    643          											sprintf((char *)(pUARTBuf+15),"Clsoe Mic 7\r\n");	
    644          								    else if ((flagNotMin==3))
    645          										if ((CrssCorVal78>CrssCorVal63))
    646          											sprintf((char *)(pUARTBuf+15),"Clsoe Mic 7\r\n");
    647          									else
    648          										;
    649          									
    650          	                            }
    651          	                            else if (test<=0)
    652          	                            {
    653          	                                if ((flagNotMin==0))                                     
    654          	                                    sprintf((char *)(pUARTBuf+15),"Clsoe Mic 8\r\n");
    655          								    else if ((flagNotMin==1))
    656          										if ((CrssCorVal78>CrssCorVal25))
    657          											sprintf((char *)(pUARTBuf+15),"Clsoe Mic 8\r\n");
    658          								    else if ((flagNotMin==2))
    659          										if ((CrssCorVal78>CrssCorVal14))
    660          											sprintf((char *)(pUARTBuf+15),"Clsoe Mic 8\r\n");	
    661          								    else if ((flagNotMin==3))
    662          										if ((CrssCorVal78>CrssCorVal63))
    663          											sprintf((char *)(pUARTBuf+15),"Clsoe Mic 8\r\n");
    664          									else
    665          										;
    666          									
    667          	                            }                          
    668          	                            else
    669          	                            {
    670          	                            }
    671          
    672          
    673          			  //if (flagNotMin==0) sprintf((char *)(pUARTBuf+15),"----------- \r\n");
    674          									
    675                                    //HAL_UART_Transmit_IT(&huart3,pUARTBuf,15);
    676                                    SrvB_Debound(&flgS2Ins,&flgS2Flt, flgS2,2);
    677                                    SrvB_Debound(&flgS3Ins,&flgS3Flt, flgS3,2);
    678                                    SrvB_Debound(&flgS4Ins,&flgS4Flt, flgS4,2);
    679          
    680                                    stDir = (flgS2Flt<<2)|(flgS3Flt<<1)|(flgS4Flt); 
    681                                   
    682                                     sprintf((char *)(pUARTBuf+30),"%d:%d:%d:%d\n\r\n\r",CrssCorVal63,CrssCorVal14,CrssCorVal25,CrssCorVal78);
    683                                     HAL_UART_Transmit_IT(&huart3,pUARTBuf,15+15+15);		
    684                                   }
    685                              }//if(SNR)
    686          
    687          #endif
    688          	   	            cntTime200=0;
    689                  } //(cntTime200==40)
    690                }//if (flg10ms==1)	
   \                     ??main_2: (+1)
   \   00000278   0xF8BB 0x0000      LDRH     R0,[R11, #+0]
   \   0000027C   0x2805             CMP      R0,#+5
   \   0000027E   0xDB13             BLT.N    ??main_7
   \   00000280   0x7838             LDRB     R0,[R7, #+0]
   \   00000282   0x28C8             CMP      R0,#+200
   \   00000284   0xDA10             BGE.N    ??main_7
   \   00000286   0x2100             MOVS     R1,#+0
   \                     ??main_8: (+1)
   \   00000288   0xF9B9 0x2000      LDRSH    R2,[R9, #+0]
   \   0000028C   0x410A             ASRS     R2,R2,R1
   \   0000028E   0x07D2             LSLS     R2,R2,#+31
   \   00000290   0xD505             BPL.N    ??main_9
   \   00000292   0x7833             LDRB     R3,[R6, #+0]
   \   00000294   0x1C4A             ADDS     R2,R1,#+1
   \   00000296   0x429A             CMP      R2,R3
   \   00000298   0xBFB8             IT       LT 
   \   0000029A   0x7832             LDRBLT   R2,[R6, #+0]
   \   0000029C   0x7032             STRB     R2,[R6, #+0]
   \                     ??main_9: (+1)
   \   0000029E   0x1C49             ADDS     R1,R1,#+1
   \   000002A0   0x2910             CMP      R1,#+16
   \   000002A2   0xDBF1             BLT.N    ??main_8
   \   000002A4   0x1C40             ADDS     R0,R0,#+1
   \   000002A6   0x7038             STRB     R0,[R7, #+0]
   \                     ??main_7: (+1)
   \   000002A8   0x.... 0x....      BL       PDM2PCMSDO78
   \   000002AC   0xF894 0x002C      LDRB     R0,[R4, #+44]
   \   000002B0   0x2800             CMP      R0,#+0
   \   000002B2   0xD1CF             BNE.N    ??main_6
   \   000002B4   0xF104 0x0014      ADD      R0,R4,#+20
   \   000002B8   0x.... 0x....      BL       FactorUpd
   \   000002BC   0x2001             MOVS     R0,#+1
   \   000002BE   0xF884 0x002C      STRB     R0,[R4, #+44]
   \   000002C2   0xF894 0x002E      LDRB     R0,[R4, #+46]
   \   000002C6   0x2800             CMP      R0,#+0
   \   000002C8   0xD0BF             BEQ.N    ??main_3
   \   000002CA   0x2802             CMP      R0,#+2
   \   000002CC   0xD001             BEQ.N    ??main_10
   \   000002CE   0xD302             BCC.N    ??main_11
   \   000002D0   0xE7BE             B.N      ??main_5
   \                     ??main_10: (+1)
   \   000002D2   0x4650             MOV      R0,R10
   \   000002D4   0xE7BA             B.N      ??main_4
   \                     ??main_11: (+1)
   \   000002D6   0x4640             MOV      R0,R8
   \   000002D8   0xE7B8             B.N      ??main_4
    691            }
    692          }
    693          
    694          /**
    695            * @brief  Toggle Leds.
    696            * @param  None
    697            * @retval None
    698            */

   \                                 In section .text, align 2, keep-with-next
    699          void Toggle_Leds(void)
    700          {
    701            static uint32_t ticks = 0;
    702          
    703            if (ticks++ > 200)
   \                     Toggle_Leds: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable13_19
   \   00000004   0x6801             LDR      R1,[R0, #+0]
   \   00000006   0x1C4A             ADDS     R2,R1,#+1
   \   00000008   0x29C9             CMP      R1,#+201
   \   0000000A   0xBF28             IT       CS 
   \   0000000C   0x2200             MOVCS    R2,#+0
    704            {
    705              //BSP_LED_Toggle(LED1);
    706              ticks = 0;
   \   0000000E   0x6002             STR      R2,[R0, #+0]
    707            }
    708          }
   \   00000010   0x4770             BX       LR               ;; return

   \                                 In section .bss, align 4
   \                     ??ticks:
   \   00000000                      DS8 4
    709          
    710          
    711          /**
    712            * @brief  User Process
    713            * @param  phost: Host Handle
    714            * @param  id: Host Library user message ID
    715            * @retval None
    716            */
    717          static void USBH_UserProcess(USBH_HandleTypeDef *phost, uint8_t id)
    718          {
    719            switch(id)
    720            { 
    721            case HOST_USER_SELECT_CONFIGURATION:
    722              break;
    723              
    724            case HOST_USER_DISCONNECTION:
    725              appli_state = APPLICATION_DISCONNECT;
    726              break;
    727          
    728            case HOST_USER_CLASS_ACTIVE:
    729              appli_state = APPLICATION_READY;
    730              break;
    731           
    732            case HOST_USER_CONNECTION:
    733              appli_state = APPLICATION_START;
    734              break;
    735             
    736            default:
    737              break; 
    738            }
    739          }
    740          
    741          /**
    742            * @brief  System Clock Configuration
    743            *         The system Clock is configured as follow : 
    744            *            System Clock source            = PLL (HSE)
    745            *            SYSCLK(Hz)                     = 216000000
    746            *            HCLK(Hz)                       = 216000000
    747            *            AHB Prescaler                  = 1
    748            *            APB1 Prescaler                 = 4
    749            *            APB2 Prescaler                 = 2
    750            *            HSE Frequency(Hz)              = 25000000
    751            *            PLL_M                          = 25
    752            *            PLL_N                          = 432
    753            *            PLL_P                          = 2
    754            *            PLL_Q                          = 9
    755            *            VDD(V)                         = 3.3
    756            *            Main regulator output voltage  = Scale1 mode
    757            *            Flash Latency(WS)              = 7
    758            * @param  None
    759            * @retval None
    760            */

   \                                 In section .text, align 2, keep-with-next
    761          static void SystemClock_Config(void)
    762          {
   \                     SystemClock_Config: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB0B2             SUB      SP,SP,#+200
    763            RCC_ClkInitTypeDef RCC_ClkInitStruct;
    764            RCC_OscInitTypeDef RCC_OscInitStruct;
    765            RCC_PeriphCLKInitTypeDef PeriphClkInitStruct;
    766            HAL_StatusTypeDef ret = HAL_OK;
    767          
    768            /* Enable HSE Oscillator and activate PLL with HSE as source */
    769            RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
   \   00000004   0x2001             MOVS     R0,#+1
   \   00000006   0x9026             STR      R0,[SP, #+152]
    770            RCC_OscInitStruct.HSEState = RCC_HSE_ON;
   \   00000008   0xF44F 0x3080      MOV      R0,#+65536
   \   0000000C   0x9027             STR      R0,[SP, #+156]
    771            RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
   \   0000000E   0x2002             MOVS     R0,#+2
   \   00000010   0x902C             STR      R0,[SP, #+176]
    772            RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
    773            RCC_OscInitStruct.PLL.PLLM = 25;
   \   00000012   0x2019             MOVS     R0,#+25
   \   00000014   0x902E             STR      R0,[SP, #+184]
    774            RCC_OscInitStruct.PLL.PLLN = 432;  // 432
   \   00000016   0xF44F 0x70D8      MOV      R0,#+432
   \   0000001A   0x902F             STR      R0,[SP, #+188]
    775            RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
   \   0000001C   0x2002             MOVS     R0,#+2
   \   0000001E   0x9030             STR      R0,[SP, #+192]
    776            RCC_OscInitStruct.PLL.PLLQ = 9;
   \   00000020   0x2009             MOVS     R0,#+9
   \   00000022   0xF44F 0x0480      MOV      R4,#+4194304
   \   00000026   0x9031             STR      R0,[SP, #+196]
   \   00000028   0x942D             STR      R4,[SP, #+180]
    777          
    778            ret = HAL_RCC_OscConfig(&RCC_OscInitStruct);
   \   0000002A   0xA826             ADD      R0,SP,#+152
   \   0000002C   0x.... 0x....      BL       HAL_RCC_OscConfig
    779            if(ret != HAL_OK)
    780            {
    781              //while(1) { ; }
    782            }
    783          
    784            /* Activate the OverDrive to reach the 216 MHz Frequency */
    785            ret = HAL_PWREx_EnableOverDrive();
   \   00000030   0x.... 0x....      BL       HAL_PWREx_EnableOverDrive
    786            if(ret != HAL_OK)
    787            {
    788              //while(1) { ; }
    789            }
    790          
    791            /* Select PLLSAI output as USB clock source */
    792            PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_CLK48 ;
   \   00000034   0xF44F 0x1000      MOV      R0,#+2097152
   \   00000038   0x9005             STR      R0,[SP, #+20]
    793            PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLLSAIP;
   \   0000003A   0xF04F 0x6000      MOV      R0,#+134217728
   \   0000003E   0x9024             STR      R0,[SP, #+144]
    794          
    795            
    796            PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
   \   00000040   0x20C0             MOVS     R0,#+192
   \   00000042   0x900A             STR      R0,[SP, #+40]
    797            PeriphClkInitStruct.PLLSAI.PLLSAIQ = 4; 
   \   00000044   0x2004             MOVS     R0,#+4
   \   00000046   0x900B             STR      R0,[SP, #+44]
    798            PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV4;
   \   00000048   0x2001             MOVS     R0,#+1
   \   0000004A   0x900D             STR      R0,[SP, #+52]
    799            PeriphClkInitStruct.PLLSAI.PLLSAIR = 2;
   \   0000004C   0x2002             MOVS     R0,#+2
   \   0000004E   0x900C             STR      R0,[SP, #+48]
    800          
    801          
    802            ret = HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);
   \   00000050   0xA805             ADD      R0,SP,#+20
   \   00000052   0x.... 0x....      BL       HAL_RCCEx_PeriphCLKConfig
    803            
    804            if(ret != HAL_OK)
    805            {
    806              //while(1) { ; }
    807            }
    808            
    809            /* Select PLL as system clock source and configure the HCLK, PCLK1 and PCLK2 clocks dividers */
    810            RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2);
   \   00000056   0x200F             MOVS     R0,#+15
    811            RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
    812            RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
    813            RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;  
    814            RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
    815          
    816            ret = HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7);
   \   00000058   0x2107             MOVS     R1,#+7
   \   0000005A   0x9000             STR      R0,[SP, #+0]
   \   0000005C   0x2002             MOVS     R0,#+2
   \   0000005E   0x9001             STR      R0,[SP, #+4]
   \   00000060   0x2080             MOVS     R0,#+128
   \   00000062   0x9002             STR      R0,[SP, #+8]
   \   00000064   0xF44F 0x50A0      MOV      R0,#+5120
   \   00000068   0x9003             STR      R0,[SP, #+12]
   \   0000006A   0xF44F 0x5080      MOV      R0,#+4096
   \   0000006E   0x9004             STR      R0,[SP, #+16]
   \   00000070   0x4668             MOV      R0,SP
   \   00000072   0x.... 0x....      BL       HAL_RCC_ClockConfig
    817            if(ret != HAL_OK)
    818            {
    819              //while(1) { ; }
    820            }
    821            
    822           //sop1hc 344/7 = 49.142 MHz
    823            PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SAI2|RCC_PERIPHCLK_I2S;
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable13_20  ;; 0x100001
    824            PeriphClkInitStruct.Sai2ClockSelection = RCC_SAI2CLKSOURCE_PLLI2S;
   \   0000007A   0x9415             STR      R4,[SP, #+84]
   \   0000007C   0x9005             STR      R0,[SP, #+20]
    825            PeriphClkInitStruct.I2sClockSelection = RCC_I2SCLKSOURCE_PLLI2S;
   \   0000007E   0x2000             MOVS     R0,#+0
   \   00000080   0x9012             STR      R0,[SP, #+72]
    826            PeriphClkInitStruct.PLLI2S.PLLI2SP = 8;
   \   00000082   0x2008             MOVS     R0,#+8
   \   00000084   0x9009             STR      R0,[SP, #+36]
    827            PeriphClkInitStruct.PLLI2S.PLLI2SN = 344;//244
   \   00000086   0xF44F 0x70AC      MOV      R0,#+344
   \   0000008A   0x9006             STR      R0,[SP, #+24]
    828            PeriphClkInitStruct.PLLI2S.PLLI2SQ = 7;
   \   0000008C   0x2007             MOVS     R0,#+7
   \   0000008E   0x9008             STR      R0,[SP, #+32]
    829            PeriphClkInitStruct.PLLI2S.PLLI2SR = 7;
   \   00000090   0x9007             STR      R0,[SP, #+28]
    830            PeriphClkInitStruct.PLLI2SDivQ = 1;
   \   00000092   0x2001             MOVS     R0,#+1
   \   00000094   0x900E             STR      R0,[SP, #+56]
    831            HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);	
   \   00000096   0xA805             ADD      R0,SP,#+20
   \   00000098   0x.... 0x....      BL       HAL_RCCEx_PeriphCLKConfig
    832          }
   \   0000009C   0xB032             ADD      SP,SP,#+200
   \   0000009E   0xBD10             POP      {R4,PC}          ;; return
    833          
    834          /**
    835            * @brief  Clock Config.
    836            * @param  hsai: might be required to set audio peripheral predivider if any.
    837            * @param  AudioFreq: Audio frequency used to play the audio stream.
    838            * @note   This API is called by BSP_AUDIO_OUT_Init() and BSP_AUDIO_OUT_SetFrequency()
    839            *         Being __weak it can be overwritten by the application     
    840            * @retval None
    841            */

   \                                 In section .text, align 2, keep-with-next
    842          void BSP_AUDIO_OUT_ClockConfig(uint32_t AudioFreq, void *Params)
    843          {
   \                     BSP_AUDIO_OUT_ClockConfig: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB0A2             SUB      SP,SP,#+136
   \   00000004   0x4604             MOV      R4,R0
    844            RCC_PeriphCLKInitTypeDef RCC_ExCLKInitStruct;
    845          
    846            HAL_RCCEx_GetPeriphCLKConfig(&RCC_ExCLKInitStruct);
   \   00000006   0x4668             MOV      R0,SP
   \   00000008   0x.... 0x....      BL       HAL_RCCEx_GetPeriphCLKConfig
    847            
    848            /* Set the PLL configuration according to the audio frequency */
    849            if((AudioFreq == AUDIO_FREQUENCY_11K) || (AudioFreq == AUDIO_FREQUENCY_22K) || (AudioFreq == AUDIO_FREQUENCY_44K))
   \   0000000C   0xF642 0x3011      MOVW     R0,#+11025
   \   00000010   0x4284             CMP      R4,R0
   \   00000012   0xBF1F             ITTTT    NE 
   \   00000014   0xF245 0x6022      MOVWNE   R0,#+22050
   \   00000018   0x4284             CMPNE    R4,R0
   \   0000001A   0xF64A 0x4044      MOVWNE   R0,#+44100
   \   0000001E   0x4284             CMPNE    R4,R0
   \   00000020   0xD10E             BNE.N    ??BSP_AUDIO_OUT_ClockConfig_0
    850            {
    851              /* Configure PLLSAI prescalers */
    852              /* PLLI2S_VCO: VCO_429M
    853              SAI_CLK(first level) = PLLI2S_VCO/PLLSAIQ = 429/2 = 214.5 Mhz
    854              SAI_CLK_x = SAI_CLK(first level)/PLLI2SDivQ = 214.5/19 = 11.289 Mhz */
    855              RCC_ExCLKInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SAI2;
   \   00000022   0xF44F 0x1080      MOV      R0,#+1048576
   \   00000026   0x9000             STR      R0,[SP, #+0]
    856              RCC_ExCLKInitStruct.Sai2ClockSelection = RCC_SAI2CLKSOURCE_PLLI2S;
   \   00000028   0xF44F 0x0080      MOV      R0,#+4194304
   \   0000002C   0x9010             STR      R0,[SP, #+64]
    857              RCC_ExCLKInitStruct.PLLI2S.PLLI2SP = 8;
   \   0000002E   0x2008             MOVS     R0,#+8
   \   00000030   0x9004             STR      R0,[SP, #+16]
    858              RCC_ExCLKInitStruct.PLLI2S.PLLI2SN = 429;
   \   00000032   0xF240 0x10AD      MOVW     R0,#+429
   \   00000036   0x9001             STR      R0,[SP, #+4]
    859              RCC_ExCLKInitStruct.PLLI2S.PLLI2SQ = 2;
   \   00000038   0x2002             MOVS     R0,#+2
   \   0000003A   0x9003             STR      R0,[SP, #+12]
    860              RCC_ExCLKInitStruct.PLLI2SDivQ = 19;
   \   0000003C   0x2013             MOVS     R0,#+19
   \   0000003E   0xE00B             B.N      ??BSP_AUDIO_OUT_ClockConfig_1
    861              HAL_RCCEx_PeriphCLKConfig(&RCC_ExCLKInitStruct);
    862            }
    863            else /* AUDIO_FREQUENCY_8K, AUDIO_FREQUENCY_16K, AUDIO_FREQUENCY_48K), AUDIO_FREQUENCY_96K */
    864            {
    865              /* SAI clock config
    866              PLLI2S_VCO: VCO_344M
    867              SAI_CLK(first level) = PLLI2S_VCO/PLLSAIQ = 344/7 = 49.142 Mhz
    868              SAI_CLK_x = SAI_CLK(first level)/PLLI2SDivQ = 49.142/1 = 49.142 Mhz */
    869              RCC_ExCLKInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SAI2;
   \                     ??BSP_AUDIO_OUT_ClockConfig_0: (+1)
   \   00000040   0xF44F 0x1080      MOV      R0,#+1048576
   \   00000044   0x9000             STR      R0,[SP, #+0]
    870              RCC_ExCLKInitStruct.Sai2ClockSelection = RCC_SAI2CLKSOURCE_PLLI2S;
   \   00000046   0xF44F 0x0080      MOV      R0,#+4194304
   \   0000004A   0x9010             STR      R0,[SP, #+64]
    871          	//RCC_ExCLKInitStruct.I2sClockSelection = RCC_I2SCLKSOURCE_PLLI2S;
    872          //    RCC_ExCLKInitStruct.PLLI2S.PLLI2SP = 8;
    873              RCC_ExCLKInitStruct.PLLI2S.PLLI2SN = 344;//244
   \   0000004C   0xF44F 0x70AC      MOV      R0,#+344
   \   00000050   0x9001             STR      R0,[SP, #+4]
    874              RCC_ExCLKInitStruct.PLLI2S.PLLI2SQ = 7;
   \   00000052   0x2007             MOVS     R0,#+7
   \   00000054   0x9003             STR      R0,[SP, #+12]
    875          	//RCC_ExCLKInitStruct.PLLI2S.PLLI2SR = 1;
    876              RCC_ExCLKInitStruct.PLLI2SDivQ = 1;
   \   00000056   0x2001             MOVS     R0,#+1
   \                     ??BSP_AUDIO_OUT_ClockConfig_1: (+1)
   \   00000058   0x9009             STR      R0,[SP, #+36]
    877              HAL_RCCEx_PeriphCLKConfig(&RCC_ExCLKInitStruct);
   \   0000005A   0x4668             MOV      R0,SP
   \   0000005C   0x.... 0x....      BL       HAL_RCCEx_PeriphCLKConfig
    878            }
    879            
    880          }
   \   00000060   0xB022             ADD      SP,SP,#+136
   \   00000062   0xBD10             POP      {R4,PC}          ;; return
    881          
    882          
    883          
    884          #ifdef  USE_FULL_ASSERT
    885          /**
    886            * @brief  Reports the name of the source file and the source line number
    887            *         where the assert_param error has occurred.
    888            * @param  file: pointer to the source file name
    889            * @param  line: assert_param error line source number
    890            * @retval None
    891            */
    892          void assert_failed(uint8_t* file, uint32_t line)
    893          { 
    894            /* User can add his own implementation to report the file name and line number,
    895               ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
    896          
    897            /* Infinite loop */
    898            while (1)
    899            {
    900            }
    901          }
    902          #endif
    903          
    904          /**
    905            * @brief  CPU L1-Cache enable.
    906            * @param  None
    907            * @retval None
    908            */
    909          static void CPU_CACHE_Enable(void)
    910          {
    911            /* Enable I-Cache */
    912            SCB_EnableICache();
    913          
    914            /* Enable D-Cache */
    915            SCB_EnableDCache();
    916          }
    917          
    918          

   \                                 In section .text, align 2, keep-with-next
    919          void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
    920          {
   \                     HAL_I2C_MspInit: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
    921          
    922            GPIO_InitTypeDef GPIO_InitStruct;
    923              
    924            if(hi2c->Instance==I2C1)
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable13_21  ;; 0x40005400
   \   0000000A   0x4288             CMP      R0,R1
   \   0000000C   0xD12A             BNE.N    ??HAL_I2C_MspInit_0
    925            {
    926          	/* USER CODE BEGIN I2C1_MspInit 0 */
    927          
    928          	/*##-1- Configure the I2C clock source. The clock is derived from the SYSCLK #*/
    929          	//RCC_PeriphCLKInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
    930          	//RCC_PeriphCLKInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
    931          	//HAL_RCCEx_PeriphCLKConfig(&RCC_PeriphCLKInitStruct);
    932          
    933          	/*##-2- Enable peripherals and GPIO Clocks #################################*/
    934          	/* Enable GPIO TX/RX clock */
    935          	__HAL_RCC_GPIOB_CLK_ENABLE();
   \   0000000E   0x....             LDR.N    R4,??DataTable13_2  ;; 0x40023830
    936          
    937          	/**I2C1 GPIO Configuration	
    938          	PB6	  ------> I2C1_SCL (PB6)
    939          	PB7	  ------> I2C1_SDA (PB7) 
    940          	*/
    941          	GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
    942          	GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    943          	GPIO_InitStruct.Pull = GPIO_PULLUP;
    944          	GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
    945          	GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    946          	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
   \   00000010   0xA901             ADD      R1,SP,#+4
   \   00000012   0x6820             LDR      R0,[R4, #+0]
   \   00000014   0xF040 0x0002      ORR      R0,R0,#0x2
   \   00000018   0x6020             STR      R0,[R4, #+0]
   \   0000001A   0x6820             LDR      R0,[R4, #+0]
   \   0000001C   0xF000 0x0002      AND      R0,R0,#0x2
   \   00000020   0x9000             STR      R0,[SP, #+0]
   \   00000022   0x9800             LDR      R0,[SP, #+0]
   \   00000024   0x20C0             MOVS     R0,#+192
   \   00000026   0x9001             STR      R0,[SP, #+4]
   \   00000028   0x2012             MOVS     R0,#+18
   \   0000002A   0x9002             STR      R0,[SP, #+8]
   \   0000002C   0x2001             MOVS     R0,#+1
   \   0000002E   0x9003             STR      R0,[SP, #+12]
   \   00000030   0x2003             MOVS     R0,#+3
   \   00000032   0x9004             STR      R0,[SP, #+16]
   \   00000034   0x2004             MOVS     R0,#+4
   \   00000036   0x9005             STR      R0,[SP, #+20]
   \   00000038   0x....             LDR.N    R0,??DataTable13_6  ;; 0x40020400
   \   0000003A   0x.... 0x....      BL       HAL_GPIO_Init
    947          
    948          	/* Peripheral clock enable */
    949          	__HAL_RCC_I2C1_CLK_ENABLE();
   \   0000003E   0x6920             LDR      R0,[R4, #+16]
    950          	/* Peripheral interrupt init*/
    951          	HAL_NVIC_SetPriority(I2C1_EV_IRQn, 3, 0);
   \   00000040   0x2200             MOVS     R2,#+0
   \   00000042   0x2103             MOVS     R1,#+3
   \   00000044   0xF440 0x1000      ORR      R0,R0,#0x200000
   \   00000048   0x6120             STR      R0,[R4, #+16]
   \   0000004A   0x6920             LDR      R0,[R4, #+16]
   \   0000004C   0xF400 0x1000      AND      R0,R0,#0x200000
   \   00000050   0x9000             STR      R0,[SP, #+0]
   \   00000052   0x9800             LDR      R0,[SP, #+0]
   \   00000054   0x201F             MOVS     R0,#+31
   \   00000056   0x.... 0x....      BL       HAL_NVIC_SetPriority
    952          	HAL_NVIC_EnableIRQ(I2C1_EV_IRQn);
   \   0000005A   0x201F             MOVS     R0,#+31
   \   0000005C   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
    953          
    954            }
    955            else if(hi2c->Instance==I2C2)
    956            {
    957            /* USER CODE BEGIN I2C2_MspInit 0 */
    958          
    959            /* USER CODE END I2C2_MspInit 0 */
    960            
    961              /**I2C2 GPIO Configuration    
    962              PB10     ------> I2C2_SCL
    963              PB11     ------> I2C2_SDA 
    964              */
    965              __HAL_RCC_GPIOB_CLK_ENABLE();
    966              
    967              GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
    968              GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    969              GPIO_InitStruct.Pull = GPIO_NOPULL;
    970              GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
    971              GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
    972              HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
    973          
    974              /* Peripheral clock enable */
    975              __HAL_RCC_I2C2_CLK_ENABLE();
    976              /* Peripheral interrupt init*/
    977              //HAL_NVIC_SetPriority(I2C2_EV_IRQn, 3, 1);
    978              //HAL_NVIC_EnableIRQ(I2C2_EV_IRQn);
    979            }
    980          
    981          }
   \   00000060   0xB006             ADD      SP,SP,#+24
   \   00000062   0xBD10             POP      {R4,PC}
   \                     ??HAL_I2C_MspInit_0: (+1)
   \   00000064   0x....             LDR.N    R1,??DataTable13_22  ;; 0x40005800
   \   00000066   0x4288             CMP      R0,R1
   \   00000068   0xD121             BNE.N    ??HAL_I2C_MspInit_1
   \   0000006A   0x....             LDR.N    R4,??DataTable13_2  ;; 0x40023830
   \   0000006C   0xA901             ADD      R1,SP,#+4
   \   0000006E   0x6820             LDR      R0,[R4, #+0]
   \   00000070   0xF040 0x0002      ORR      R0,R0,#0x2
   \   00000074   0x6020             STR      R0,[R4, #+0]
   \   00000076   0x6820             LDR      R0,[R4, #+0]
   \   00000078   0xF000 0x0002      AND      R0,R0,#0x2
   \   0000007C   0x9000             STR      R0,[SP, #+0]
   \   0000007E   0x9800             LDR      R0,[SP, #+0]
   \   00000080   0xF44F 0x6040      MOV      R0,#+3072
   \   00000084   0x9001             STR      R0,[SP, #+4]
   \   00000086   0x2012             MOVS     R0,#+18
   \   00000088   0x9002             STR      R0,[SP, #+8]
   \   0000008A   0x2000             MOVS     R0,#+0
   \   0000008C   0x9003             STR      R0,[SP, #+12]
   \   0000008E   0x2003             MOVS     R0,#+3
   \   00000090   0x9004             STR      R0,[SP, #+16]
   \   00000092   0x2004             MOVS     R0,#+4
   \   00000094   0x9005             STR      R0,[SP, #+20]
   \   00000096   0x....             LDR.N    R0,??DataTable13_6  ;; 0x40020400
   \   00000098   0x.... 0x....      BL       HAL_GPIO_Init
   \   0000009C   0x6920             LDR      R0,[R4, #+16]
   \   0000009E   0xF440 0x0080      ORR      R0,R0,#0x400000
   \   000000A2   0x6120             STR      R0,[R4, #+16]
   \   000000A4   0x6920             LDR      R0,[R4, #+16]
   \   000000A6   0xF400 0x0080      AND      R0,R0,#0x400000
   \   000000AA   0x9000             STR      R0,[SP, #+0]
   \   000000AC   0x9800             LDR      R0,[SP, #+0]
   \                     ??HAL_I2C_MspInit_1: (+1)
   \   000000AE   0xB006             ADD      SP,SP,#+24
   \   000000B0   0xBD10             POP      {R4,PC}          ;; return
    982          
    983          /*---------------------------------------------------*/
    984          /*   UART                                            */
    985          /* UART4 init function */

   \                                 In section .text, align 2, keep-with-next
    986          void USART3_Init(void)
    987          {
    988          
    989            huart3.Instance = USART3;
   \                     USART3_Init: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable13_23
   \   00000002   0x....             LDR.N    R1,??DataTable13_24  ;; 0x40004800
   \   00000004   0x6001             STR      R1,[R0, #+0]
    990            huart3.Init.BaudRate = 115200;
   \   00000006   0xF44F 0x31E1      MOV      R1,#+115200
   \   0000000A   0x6041             STR      R1,[R0, #+4]
    991            huart3.Init.WordLength = UART_WORDLENGTH_8B;
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0x6081             STR      R1,[R0, #+8]
    992            huart3.Init.StopBits = UART_STOPBITS_1;
   \   00000010   0x60C1             STR      R1,[R0, #+12]
    993            huart3.Init.Parity = UART_PARITY_NONE;
   \   00000012   0x6101             STR      R1,[R0, #+16]
    994            huart3.Init.Mode = UART_MODE_TX_RX;
   \   00000014   0x210C             MOVS     R1,#+12
   \   00000016   0x6141             STR      R1,[R0, #+20]
    995            huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
   \   00000018   0x2100             MOVS     R1,#+0
   \   0000001A   0x6181             STR      R1,[R0, #+24]
    996            huart3.Init.OverSampling = UART_OVERSAMPLING_16;
   \   0000001C   0x61C1             STR      R1,[R0, #+28]
    997            huart3.Init.OneBitSampling = UART_ONEBIT_SAMPLING_DISABLED ;
   \   0000001E   0x6201             STR      R1,[R0, #+32]
    998            huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
   \   00000020   0x6241             STR      R1,[R0, #+36]
    999            HAL_UART_Init(&huart3);
   \   00000022   0x.... 0x....      B.W      HAL_UART_Init
   1000          
   1001            //HAL_NVIC_SetPriority(USART3_IRQn, 1, 1);
   1002            //HAL_NVIC_EnableIRQ(USART3_IRQn);
   1003          
   1004          }
   1005          
   1006          

   \                                 In section .text, align 2, keep-with-next
   1007          void HAL_UART_MspInit(UART_HandleTypeDef *huart)
   1008          {
   1009          
   1010            GPIO_InitTypeDef GPIO_InitStruct;
   1011            if(huart->Instance==USART3)
   \                     HAL_UART_MspInit: (+1)
   \   00000000   0x6800             LDR      R0,[R0, #+0]
   \   00000002   0x....             LDR.N    R1,??DataTable13_24  ;; 0x40004800
   \   00000004   0x4288             CMP      R0,R1
   \   00000006   0xD000             BEQ.N    ??HAL_UART_MspInit_0
   \   00000008   0x4770             BX       LR
   1012            {
   1013          
   1014          
   1015            /* USER CODE END UART4_MspInit 0 */
   1016              /* Peripheral clock enable */
   1017              __USART3_CLK_ENABLE();
   \                     ??HAL_UART_MspInit_0: (+1)
   \   0000000A   0xB500             PUSH     {LR}
   \   0000000C   0x....             LDR.N    R0,??DataTable13_2  ;; 0x40023830
   \   0000000E   0xB087             SUB      SP,SP,#+28
   \   00000010   0x6901             LDR      R1,[R0, #+16]
   \   00000012   0xF441 0x2180      ORR      R1,R1,#0x40000
   \   00000016   0x6101             STR      R1,[R0, #+16]
   \   00000018   0x6901             LDR      R1,[R0, #+16]
   \   0000001A   0xF401 0x2180      AND      R1,R1,#0x40000
   \   0000001E   0x9100             STR      R1,[SP, #+0]
   \   00000020   0x9900             LDR      R1,[SP, #+0]
   1018              __GPIOC_CLK_ENABLE();
   \   00000022   0x6801             LDR      R1,[R0, #+0]
   \   00000024   0xF041 0x0104      ORR      R1,R1,#0x4
   \   00000028   0x6001             STR      R1,[R0, #+0]
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   1019            
   1020              /**UART4 GPIO Configuration    
   1021              PC10     ------> USART3_TX
   1022              PC11     ------> USART3_RX
   1023              */
   1024              GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
   1025              GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   1026              GPIO_InitStruct.Pull = GPIO_PULLUP;
   1027              GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
   1028              GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
   1029              HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
   \   0000002C   0xA901             ADD      R1,SP,#+4
   \   0000002E   0xF000 0x0004      AND      R0,R0,#0x4
   \   00000032   0x9000             STR      R0,[SP, #+0]
   \   00000034   0x9800             LDR      R0,[SP, #+0]
   \   00000036   0xF44F 0x6040      MOV      R0,#+3072
   \   0000003A   0x9001             STR      R0,[SP, #+4]
   \   0000003C   0x2002             MOVS     R0,#+2
   \   0000003E   0x9002             STR      R0,[SP, #+8]
   \   00000040   0x2001             MOVS     R0,#+1
   \   00000042   0x9003             STR      R0,[SP, #+12]
   \   00000044   0x2003             MOVS     R0,#+3
   \   00000046   0x9004             STR      R0,[SP, #+16]
   \   00000048   0x2007             MOVS     R0,#+7
   \   0000004A   0x9005             STR      R0,[SP, #+20]
   \   0000004C   0x....             LDR.N    R0,??DataTable13_25  ;; 0x40020800
   \   0000004E   0x.... 0x....      BL       HAL_GPIO_Init
   1030          
   1031              /* NVIC for USART */
   1032              HAL_NVIC_SetPriority(USART3_IRQn, 7, 1);
   \   00000052   0x2201             MOVS     R2,#+1
   \   00000054   0x2107             MOVS     R1,#+7
   \   00000056   0x2027             MOVS     R0,#+39
   \   00000058   0x.... 0x....      BL       HAL_NVIC_SetPriority
   1033              HAL_NVIC_EnableIRQ(USART3_IRQn);
   \   0000005C   0x2027             MOVS     R0,#+39
   \   0000005E   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
   1034          
   1035            }
   1036          
   1037          }
   \   00000062   0xB007             ADD      SP,SP,#+28
   \   00000064   0xBD00             POP      {PC}             ;; return
   1038          
   1039          
   1040          

   \                                 In section .text, align 2, keep-with-next
   1041          void EXTI4_IRQHandler(void)
   1042          {
   \                     EXTI4_IRQHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1043              /* EXTI line interrupt detected */
   1044            if(__HAL_GPIO_EXTI_GET_IT(GPIO_PIN_4) != RESET)
   \   00000002   0x....             LDR.N    R4,??DataTable13_26  ;; 0x40013c14
   \   00000004   0x6820             LDR      R0,[R4, #+0]
   \   00000006   0x06C0             LSLS     R0,R0,#+27
   \   00000008   0xD50E             BPL.N    ??EXTI4_IRQHandler_0
   1045            {
   1046              
   1047               if (cntRisingEXTI==20)
   \   0000000A   0x....             LDR.N    R0,??DataTable13_27
   \   0000000C   0x8801             LDRH     R1,[R0, #+0]
   \   0000000E   0x2914             CMP      R1,#+20
   \   00000010   0xD105             BNE.N    ??EXTI4_IRQHandler_1
   1048               {
   1049              	/*--------------Enable read PCM data --------------------*/   
   1050                  //flgDlyUpd = 1;  
   1051                  //__HAL_SPI_ENABLE_IT(&hspi5, (SPI_IT_RXNE| SPI_IT_ERR));
   1052          		//__HAL_UNLOCK(&hspi5);
   1053                  //__HAL_SPI_ENABLE(&hspi5);
   1054                  cntRisingEXTI=0;
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0x8001             STRH     R1,[R0, #+0]
   1055          
   1056                  /*Disable external interrupt */
   1057                  HAL_NVIC_DisableIRQ((IRQn_Type)(EXTI4_IRQn));
   \   00000016   0x200A             MOVS     R0,#+10
   \   00000018   0x.... 0x....      BL       HAL_NVIC_DisableIRQ
   \   0000001C   0xE002             B.N      ??EXTI4_IRQHandler_2
   1058                  //HAL_GPIO_DeInit(GPIOB,GPIO_PIN_4);
   1059               }
   1060               else
   1061               {
   1062                  cntRisingEXTI++;
   \                     ??EXTI4_IRQHandler_1: (+1)
   \   0000001E   0x8801             LDRH     R1,[R0, #+0]
   \   00000020   0x1C49             ADDS     R1,R1,#+1
   \   00000022   0x8001             STRH     R1,[R0, #+0]
   1063                  //__HAL_SPI_DISABLE(&hspi5);
   1064               }
   1065               
   1066                __HAL_GPIO_EXTI_CLEAR_IT(GPIO_PIN_4);
   \                     ??EXTI4_IRQHandler_2: (+1)
   \   00000024   0x2010             MOVS     R0,#+16
   \   00000026   0x6020             STR      R0,[R4, #+0]
   1067          
   1068            }
   1069          }
   \                     ??EXTI4_IRQHandler_0: (+1)
   \   00000028   0xBD10             POP      {R4,PC}          ;; return
   1070                        

   \                                 In section .text, align 2, keep-with-next
   1071          void EXTI15_10_IRQHandler(void)
   1072          {
   1073          
   1074          }
   \                     EXTI15_10_IRQHandler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
   1075          
   1076          /* Events for Button Press */

   \                                 In section .text, align 2, keep-with-next
   1077          void EXTI9_5_IRQHandler(void)
   1078          {
   \                     EXTI9_5_IRQHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1079          
   1080            /* EXTI line interrupt detected */
   1081            if(__HAL_GPIO_EXTI_GET_IT(GPIO_PIN_8) != RESET)
   \   00000002   0x....             LDR.N    R4,??DataTable13_26  ;; 0x40013c14
   \   00000004   0x6820             LDR      R0,[R4, #+0]
   \   00000006   0x05C0             LSLS     R0,R0,#+23
   \   00000008   0xD510             BPL.N    ??EXTI9_5_IRQHandler_0
   1082            {
   1083          	  btnSW2 = 1;
   \   0000000A   0x....             LDR.N    R0,??DataTable13_28
   \   0000000C   0x2101             MOVS     R1,#+1
   \   0000000E   0x7041             STRB     R1,[R0, #+1]
   1084          	  if ((++cntBtnPress)==8) cntBtnPress=0;
   \   00000010   0x7881             LDRB     R1,[R0, #+2]
   \   00000012   0x1C49             ADDS     R1,R1,#+1
   \   00000014   0x7081             STRB     R1,[R0, #+2]
   \   00000016   0xB2C9             UXTB     R1,R1
   \   00000018   0x2908             CMP      R1,#+8
   \   0000001A   0xBF04             ITT      EQ 
   \   0000001C   0x2100             MOVEQ    R1,#+0
   \   0000001E   0x7081             STRBEQ   R1,[R0, #+2]
   1085          	  BSP_LED_Toggle(LED2);
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0x.... 0x....      BL       BSP_LED_Toggle
   1086          	  __HAL_GPIO_EXTI_CLEAR_IT(GPIO_PIN_8);
   \   00000026   0xF44F 0x7080      MOV      R0,#+256
   \   0000002A   0x6020             STR      R0,[R4, #+0]
   1087          
   1088            }
   1089          
   1090          
   1091            /* EXTI line interrupt detected */
   1092            if(__HAL_GPIO_EXTI_GET_IT(GPIO_PIN_9) != RESET)
   \                     ??EXTI9_5_IRQHandler_0: (+1)
   \   0000002C   0x6820             LDR      R0,[R4, #+0]
   \   0000002E   0x0580             LSLS     R0,R0,#+22
   \   00000030   0xD50C             BPL.N    ??EXTI9_5_IRQHandler_1
   1093            {
   1094          		btnSW1 = 1;
   \   00000032   0x....             LDR.N    R0,??DataTable13_28
   \   00000034   0x2101             MOVS     R1,#+1
   \   00000036   0x7001             STRB     R1,[R0, #+0]
   1095          		Command_index^=0x01;
   \   00000038   0x78C1             LDRB     R1,[R0, #+3]
   \   0000003A   0xF081 0x0101      EOR      R1,R1,#0x1
   \   0000003E   0x70C1             STRB     R1,[R0, #+3]
   1096          		BSP_LED_Toggle(LED1);
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x.... 0x....      BL       BSP_LED_Toggle
   1097          
   1098          	   __HAL_GPIO_EXTI_CLEAR_IT(GPIO_PIN_9);
   \   00000046   0xF44F 0x7000      MOV      R0,#+512
   \   0000004A   0x6020             STR      R0,[R4, #+0]
   1099            }
   1100          
   1101          }
   \                     ??EXTI9_5_IRQHandler_1: (+1)
   \   0000004C   0xBD10             POP      {R4,PC}          ;; return
   1102          
   1103          

   \                                 In section .text, align 2, keep-with-next
   1104          void DFT_Init(void)
   1105          {
   1106          #if MAIN_CRSCORR
   1107          		arm_rfft_init_q15(&RealFFT_Ins,(uint32_t)128,(uint32_t)0,(uint32_t)1);
   1108          		arm_rfft_init_q15(&RealIFFT_Ins,(uint32_t)128,(uint32_t)1,(uint32_t)1);
   1109          #endif  
   1110          		/* Initialize the CFFT/CIFFT module */
   1111          		//arm_rfft_init_f32(&S,&SS, 512,  0, 1);
   1112          		//arm_rfft_init_f32(&S1,&SS1, 512,  0, 1); 
   1113          		//arm_rfft_init_f32(&S2,&SS2, 512,  0, 1); 
   1114          		//arm_rfft_init_f32(&S3,&SS3, 512,  0, 1); 
   1115          		//arm_rfft_init_f32(&S4,&SS4, 512,  0, 1);
   1116          		//arm_rfft_init_f32(&IS,&ISS, 512,  1, 1);
   1117          		
   1118          
   1119          		//arm_rfft_fast_init_f32(&S1, 512);
   1120                  //arm_rfft_fast_init_f32(&S2, 512);
   1121          		//arm_rfft_fast_init_f32(&S3, 512);
   1122          		//arm_rfft_fast_init_f32(&S4, 512);
   1123          		//arm_rfft_fast_init_f32(&IS, 512);
   1124          		arm_rfft_fast_init_f32(&S, 1024);
   \                     DFT_Init: (+1)
   \   00000000   0xF44F 0x6180      MOV      R1,#+1024
   \   00000004   0x....             LDR.N    R0,??DataTable13_29
   \   00000006   0x.... 0x....      B.W      arm_rfft_fast_init_f32
   1125          }
   1126          
   1127          

   \                                 In section .text, align 4, keep-with-next
   1128          void SumDelay(Mic_Array_Data *BufferIn)
   1129          {
   1130              //if (idxLatency12>idxLatency13)
   1131              // {
   1132              //     if (idxLatency13 > idxLatency14)
   1133              //     {
   1134              //         /* MIC2 --> MIC3 --> MIC4 */
   1135              //     }
   1136              //             else if (idxLatency14 > idxLatency12)
   1137              //             {
   1138              //        /* MIC4-->MIC2-->MIC3  */
   1139              //            }
   1140              //             else
   1141              //             {
   1142              //       /* MIC2-->MIC4-->MIC3  */
   1143              //             }
   1144              // }
   1145              //else // idxLatency13>idxLatency12
   1146              //     {
   1147              //    if (idxLatency12 > idxLatency14)
   1148              //    {
   1149              //        //MIC3 --> MIC2 --> MIC4 
   1150              //    }
   1151              //        else if (idxLatency14 > idxLatency13)
   1152              //        {
   1153              //        //MIC4 --> MIC3 --> MIC2
   1154              //        }
   1155              //        else
   1156              //        {
   1157              //        //MIC3 --> MIC4 --> MIC2
   1158              //	   }
   1159              //}
   1160          	
   1161              for(uint16_t i=0;i<AUDIO_OUT_BUFFER_SIZE;i++)
   \                     SumDelay: (+1)
   \   00000000   0x....             LDR.N    R3,??DataTable13_1
   \   00000002   0x....             LDR.N    R1,??DataTable13_17
   \   00000004   0xF44F 0x6280      MOV      R2,#+1024
   \   00000008   0xED93 0x0A08      VLDR     S0,[R3, #+32]
   \   0000000C   0xEDD3 0x0A07      VLDR     S1,[R3, #+28]
   \   00000010   0xED93 0x1A06      VLDR     S2,[R3, #+24]
   \   00000014   0xEDD3 0x1A05      VLDR     S3,[R3, #+20]
   1162              {
   1163                bufferSum[6*i] = (uint16_t)(BufferIn->bufMIC1[i]*FacMic.facMIC1 + 
   1164                BufferIn->bufMIC2[i]*FacMic.facMIC2 + 
   1165                BufferIn->bufMIC3[i]*FacMic.facMIC3 + 
   1166                BufferIn->bufMIC4[i]*FacMic.facMIC4); 		
   \                     ??SumDelay_0: (+1)
   \   00000018   0xF9B0 0xC000      LDRSH    R12,[R0, #+0]
   \   0000001C   0xF500 0x5380      ADD      R3,R0,#+4096
   \   00000020   0xEE02 0xCA10      VMOV     S4,R12
   \   00000024   0xF9B0 0xC800      LDRSH    R12,[R0, #+2048]
   \   00000028   0xEEB8 0x2AC2      VCVT.F32.S32 S4,S4
   1167                bufferSum[6*i+1] = bufferSum[6*i];
   1168          	  bufferSum[6*i+2] = bufferSum[6*i];
   1169          	  bufferSum[6*i+3] = bufferSum[6*i];
   1170          	  bufferSum[6*i+4] = bufferSum[6*i];
   1171          	  bufferSum[6*i+5] = bufferSum[6*i];
   1172              }
   \   0000002C   0x1C80             ADDS     R0,R0,#+2
   \   0000002E   0xEE22 0x2A21      VMUL.F32 S4,S4,S3
   \   00000032   0xEE02 0xCA90      VMOV     S5,R12
   \   00000036   0xF9B3 0xC000      LDRSH    R12,[R3, #+0]
   \   0000003A   0xEEF8 0x2AE2      VCVT.F32.S32 S5,S5
   \   0000003E   0xF9B3 0x3800      LDRSH    R3,[R3, #+2048]
   \   00000042   0xEE02 0x2A81      VMLA.F32 S4,S5,S2
   \   00000046   0xEE02 0xCA90      VMOV     S5,R12
   \   0000004A   0xEEF8 0x2AE2      VCVT.F32.S32 S5,S5
   \   0000004E   0xEE02 0x2AA0      VMLA.F32 S4,S5,S1
   \   00000052   0xEE02 0x3A90      VMOV     S5,R3
   \   00000056   0xEEF8 0x2AE2      VCVT.F32.S32 S5,S5
   \   0000005A   0xEE02 0x2A80      VMLA.F32 S4,S5,S0
   \   0000005E   0xEEBD 0x2AC2      VCVT.S32.F32 S4,S4
   \   00000062   0xEE12 0x3A10      VMOV     R3,S4
   \   00000066   0x800B             STRH     R3,[R1, #+0]
   \   00000068   0x804B             STRH     R3,[R1, #+2]
   \   0000006A   0x808B             STRH     R3,[R1, #+4]
   \   0000006C   0x80CB             STRH     R3,[R1, #+6]
   \   0000006E   0x810B             STRH     R3,[R1, #+8]
   \   00000070   0x814B             STRH     R3,[R1, #+10]
   \   00000072   0x310C             ADDS     R1,R1,#+12
   \   00000074   0x1E52             SUBS     R2,R2,#+1
   \   00000076   0xD1CF             BNE.N    ??SumDelay_0
   1173            
   1174              
   1175          }
   \   00000078   0x4770             BX       LR               ;; return
   1176          
   1177          

   \                                 In section .text, align 2, keep-with-next
   1178          void ButtonInit(void)
   1179          {
   \                     ButtonInit: (+1)
   \   00000000   0xB500             PUSH     {LR}
   1180            /* PI8: SW2 */
   1181            /* PI9: SW1 */
   1182            /* ----------------------*/
   1183            __GPIOB_CLK_ENABLE();
   \   00000002   0x....             LDR.N    R0,??DataTable13_2  ;; 0x40023830
   \   00000004   0xB081             SUB      SP,SP,#+4
   \   00000006   0x6801             LDR      R1,[R0, #+0]
   \   00000008   0xF041 0x0102      ORR      R1,R1,#0x2
   \   0000000C   0x6001             STR      R1,[R0, #+0]
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   1184            GPIO_INS.Pin = GPIO_PIN_8|GPIO_PIN_9;
   \   00000010   0x....             LDR.N    R1,??DataTable13_1
   \   00000012   0xF000 0x0002      AND      R0,R0,#0x2
   \   00000016   0x9000             STR      R0,[SP, #+0]
   \   00000018   0x9800             LDR      R0,[SP, #+0]
   \   0000001A   0xF44F 0x7040      MOV      R0,#+768
   \   0000001E   0x6008             STR      R0,[R1, #+0]
   1185            GPIO_INS.Mode =GPIO_MODE_IT_RISING;
   \   00000020   0x....             LDR.N    R0,??DataTable13_4  ;; 0x10110000
   \   00000022   0x6048             STR      R0,[R1, #+4]
   1186            GPIO_INS.Pull =GPIO_NOPULL;
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x6088             STR      R0,[R1, #+8]
   1187            GPIO_INS.Speed =GPIO_SPEED_HIGH;
   \   00000028   0x2003             MOVS     R0,#+3
   \   0000002A   0x60C8             STR      R0,[R1, #+12]
   1188            HAL_GPIO_Init(GPIOI,&GPIO_INS);
   \   0000002C   0x....             LDR.N    R0,??DataTable13_30  ;; 0x40022000
   \   0000002E   0x.... 0x....      BL       HAL_GPIO_Init
   1189          
   1190            /* Enable and set Button EXTI Interrupt to the lowest priority */
   1191            HAL_NVIC_SetPriority((IRQn_Type)EXTI9_5_IRQn, 0x0F, 0x00);
   \   00000032   0x2200             MOVS     R2,#+0
   \   00000034   0x210F             MOVS     R1,#+15
   \   00000036   0x2017             MOVS     R0,#+23
   \   00000038   0x.... 0x....      BL       HAL_NVIC_SetPriority
   1192            HAL_NVIC_EnableIRQ((IRQn_Type)EXTI9_5_IRQn);
   \   0000003C   0xB001             ADD      SP,SP,#+4
   \   0000003E   0x2017             MOVS     R0,#+23
   \   00000040   0xF85D 0xEB04      POP      {LR}
   \   00000044   0x.... 0x....      B.W      HAL_NVIC_EnableIRQ
   1193            /*-----------------------*/
   1194          }
   1195          
   1196          
   1197          /* I2C2 init function */

   \                                 In section .text, align 2, keep-with-next
   1198          void MX_I2C2_Init(void)
   1199          {
   1200            __HAL_I2C_DISABLE(&hi2c2);
   \                     MX_I2C2_Init: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable13_31
   \   00000002   0x6801             LDR      R1,[R0, #+0]
   \   00000004   0x680A             LDR      R2,[R1, #+0]
   \   00000006   0x0852             LSRS     R2,R2,#+1
   \   00000008   0x0052             LSLS     R2,R2,#+1
   \   0000000A   0x600A             STR      R2,[R1, #+0]
   1201            hi2c2.Instance = I2C2;
   \   0000000C   0x....             LDR.N    R1,??DataTable13_22  ;; 0x40005800
   \   0000000E   0x6001             STR      R1,[R0, #+0]
   1202            hi2c2.Init.Timing =0x00A0689A ;//I2C_TIMING  0x00303D5D 0x00A0689A
   \   00000010   0x....             LDR.N    R1,??DataTable13_32  ;; 0xa0689a
   \   00000012   0x6041             STR      R1,[R0, #+4]
   1203            hi2c2.Init.OwnAddress1 = 0;
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x6081             STR      R1,[R0, #+8]
   1204            hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
   \   00000018   0x2101             MOVS     R1,#+1
   \   0000001A   0x60C1             STR      R1,[R0, #+12]
   1205            hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
   \   0000001C   0x2100             MOVS     R1,#+0
   \   0000001E   0x6101             STR      R1,[R0, #+16]
   1206            hi2c2.Init.OwnAddress2 = 0;
   \   00000020   0x6141             STR      R1,[R0, #+20]
   1207            hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
   \   00000022   0x6181             STR      R1,[R0, #+24]
   1208            hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
   \   00000024   0x61C1             STR      R1,[R0, #+28]
   1209            hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
   \   00000026   0x6201             STR      R1,[R0, #+32]
   1210            HAL_I2C_Init(&hi2c2);
   \   00000028   0x.... 0x....      B.W      HAL_I2C_Init
   1211          
   1212            /**Configure Analogue filter 
   1213            */
   1214            //HAL_I2CEx_AnalogFilter_Config(&hi2c2, I2C_ANALOGFILTER_ENABLE);
   1215          
   1216          }
   1217          

   \                                 In section .text, align 2, keep-with-next
   1218           void HAL_I2S_TxCpltCallback(I2S_HandleTypeDef *hi2s)
   1219          {  
   1220            //Audio_Play_Out();  
   1221            #if (AUDIO_OUT_STREAM_NORMAL)
   1222                Audio_MAL_Play((uint32_t)&bufferSum[AUDIO_CHANNELS*(6*AUDIO_SAMPLING_FREQUENCY/1000)], 2*6*AUDIO_CHANNELS*(AUDIO_SAMPLING_FREQUENCY/1000));
   1223            #else
   1224          
   1225            #endif  
   1226          
   1227            
   1228          }
   \                     HAL_I2S_TxCpltCallback: (+1)
   \   00000000   0x4770             BX       LR               ;; return
   1229          

   \                                 In section .text, align 2, keep-with-next
   1230           uint8_t StartPlay(void)
   1231           {
   \                     StartPlay: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB081             SUB      SP,SP,#+4
   1232           #if 0
   1233          	while (1)
   1234          	{
   1235          		 /* there is data in the buffer */	
   1236          		 if((WaveRec_idxSens1>=(AUDIO_OUT_BUFFER_SIZE-1))&&(stFrstFrmStore<3))
   1237          		 {
   1238          			 RESET_IDX
   1239          			 /* this is just run 1 time after 1st frame of I2S data full */
   1240          			 if ((stFrstFrmStore<3))
   1241          			 {
   1242                                       stFrstFrmStore++;
   1243                       
   1244                                       buffer_switch = BUF2_PLAY; /* record data to buffer3 */
   1245                       
   1246                                       if (stFrstFrmStore==2)
   1247                                       {
   1248                                           
   1249                   
   1250                                           /*------------------------PLAYER------------------------------------------*/
   1251                                           Audio_MAL_Play((uint32_t)bufferSum,2*6*AUDIO_CHANNELS*(AUDIO_SAMPLING_FREQUENCY/1000));
   1252                                           /*------------------------------------------------------------------------*/				 
   1253                                           buffer_switch = BUF1_PLAY;
   1254          								 uint16_t tdelay=100;
   1255          								 while(tdelay--);
   1256                                           //StartRecMic7_8();
   1257                                           return 0;		 
   1258                                       }				 
   1259                               
   1260          			 }
   1261          		 
   1262          		 }
   1263          	}
   1264          #endif	
   1265               StartRecMic7_8();	         
   \   00000004   0x.... 0x....      BL       StartRecMic7_8
   1266          	 /*------------------------PLAYER------------------------------------------*/
   1267          	 Audio_MAL_Play((uint32_t)bufferSum,2*6*AUDIO_CHANNELS*(AUDIO_SAMPLING_FREQUENCY/1000));
   \   00000008   0xF44F 0x71C0      MOV      R1,#+384
   \   0000000C   0x....             LDR.N    R0,??DataTable13_17
   \   0000000E   0x.... 0x....      BL       Audio_MAL_Play
   1268          	 /*------------------------------------------------------------------------*/	
   1269          	 WaveRec_idxSens1 = 0;
   \   00000012   0x....             LDR.N    R0,??DataTable13_1
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x86C1             STRH     R1,[R0, #+54]
   1270          	 WaveRec_idxSens2 = 0;
   1271          	 WaveRec_idxSens3 = 0;
   1272          	 WaveRec_idxSens4 = 0;
   1273          	 WaveRec_idxSens5 = 0;
   1274          	 WaveRec_idxSens6 = 0; 
   1275          	 idxFrmPDMMic8 = 0;
   \   00000018   0x....             LDR.N    R2,??DataTable13_18
   \   0000001A   0x8701             STRH     R1,[R0, #+56]
   \   0000001C   0x8641             STRH     R1,[R0, #+50]
   \   0000001E   0x8601             STRH     R1,[R0, #+48]
   \   00000020   0x8741             STRH     R1,[R0, #+58]
   \   00000022   0x8781             STRH     R1,[R0, #+60]
   \   00000024   0x8011             STRH     R1,[R2, #+0]
   1276          	 buffer_switch = BUF1_PLAY;
   \   00000026   0xF880 0x102E      STRB     R1,[R0, #+46]
   1277               //AudioUSBSend(idxFrmPDMMic8);	 
   1278          	 
   1279           }
                  ^
Warning[Pe940]: missing return statement at end of non-void function
          "StartPlay"

  static void USBH_UserProcess(USBH_HandleTypeDef *phost, uint8_t id)
              ^
"D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\Src\main.c",717  Warning[Pe177]: 
          function "USBH_UserProcess" was declared but never referenced
   \   0000002A   0xB001             ADD      SP,SP,#+4
   \   0000002C   0xBD00             POP      {PC}             ;; return
   1280          

   \                                 In section .text, align 2, keep-with-next
   1281          void SubFrameFinished(void)
   1282          {
   \                     SubFrameFinished: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1283              Audio_Play_Out();
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x....             LDR.N    R1,??DataTable13_33
   \   00000006   0x....             LDR.N    R4,??DataTable13_18
   \   00000008   0x7008             STRB     R0,[R1, #+0]
   \   0000000A   0x8820             LDRH     R0,[R4, #+0]
   \   0000000C   0x.... 0x....      BL       AudioUSBSend
   \   00000010   0x8820             LDRH     R0,[R4, #+0]
   \   00000012   0x1C40             ADDS     R0,R0,#+1
   \   00000014   0x8020             STRH     R0,[R4, #+0]
   \   00000016   0x8820             LDRH     R0,[R4, #+0]
   \   00000018   0x2840             CMP      R0,#+64
   \   0000001A   0xD137             BNE.N    ??SubFrameFinished_0
   \   0000001C   0x....             LDR.N    R0,??DataTable13_1
   \   0000001E   0x....             LDR.N    R2,??DataTable13_34
   \   00000020   0x8EC1             LDRH     R1,[R0, #+54]
   \   00000022   0x0589             LSLS     R1,R1,#+22
   \   00000024   0x0D89             LSRS     R1,R1,#+22
   \   00000026   0x86C1             STRH     R1,[R0, #+54]
   \   00000028   0x8F01             LDRH     R1,[R0, #+56]
   \   0000002A   0x0589             LSLS     R1,R1,#+22
   \   0000002C   0x0D89             LSRS     R1,R1,#+22
   \   0000002E   0x8701             STRH     R1,[R0, #+56]
   \   00000030   0x2100             MOVS     R1,#+0
   \   00000032   0x87C1             STRH     R1,[R0, #+62]
   \   00000034   0x8E41             LDRH     R1,[R0, #+50]
   \   00000036   0x0589             LSLS     R1,R1,#+22
   \   00000038   0x0D89             LSRS     R1,R1,#+22
   \   0000003A   0x8641             STRH     R1,[R0, #+50]
   \   0000003C   0x8E01             LDRH     R1,[R0, #+48]
   \   0000003E   0x0589             LSLS     R1,R1,#+22
   \   00000040   0x0D89             LSRS     R1,R1,#+22
   \   00000042   0x8601             STRH     R1,[R0, #+48]
   \   00000044   0x2100             MOVS     R1,#+0
   \   00000046   0x8681             STRH     R1,[R0, #+52]
   \   00000048   0x8F41             LDRH     R1,[R0, #+58]
   \   0000004A   0x0589             LSLS     R1,R1,#+22
   \   0000004C   0x0D89             LSRS     R1,R1,#+22
   \   0000004E   0x8741             STRH     R1,[R0, #+58]
   \   00000050   0x8F81             LDRH     R1,[R0, #+60]
   \   00000052   0x0589             LSLS     R1,R1,#+22
   \   00000054   0x0D89             LSRS     R1,R1,#+22
   \   00000056   0x8781             STRH     R1,[R0, #+60]
   \   00000058   0x2100             MOVS     R1,#+0
   \   0000005A   0xF880 0x102C      STRB     R1,[R0, #+44]
   \   0000005E   0x8011             STRH     R1,[R2, #+0]
   \   00000060   0x8021             STRH     R1,[R4, #+0]
   \   00000062   0xF890 0x102E      LDRB     R1,[R0, #+46]
   \   00000066   0xB139             CBZ.N    R1,??SubFrameFinished_1
   \   00000068   0x2902             CMP      R1,#+2
   \   0000006A   0xD001             BEQ.N    ??SubFrameFinished_2
   \   0000006C   0xD302             BCC.N    ??SubFrameFinished_3
   \   0000006E   0xE006             B.N      ??SubFrameFinished_4
   \                     ??SubFrameFinished_2: (+1)
   \   00000070   0x2101             MOVS     R1,#+1
   \   00000072   0xE002             B.N      ??SubFrameFinished_5
   \                     ??SubFrameFinished_3: (+1)
   \   00000074   0x2100             MOVS     R1,#+0
   \   00000076   0xE000             B.N      ??SubFrameFinished_5
   \                     ??SubFrameFinished_1: (+1)
   \   00000078   0x2102             MOVS     R1,#+2
   \                     ??SubFrameFinished_5: (+1)
   \   0000007A   0xF880 0x102E      STRB     R1,[R0, #+46]
   \                     ??SubFrameFinished_4: (+1)
   \   0000007E   0x....             LDR.N    R0,??DataTable13_16
   \   00000080   0x8801             LDRH     R1,[R0, #+0]
   \   00000082   0x2964             CMP      R1,#+100
   \   00000084   0xDA02             BGE.N    ??SubFrameFinished_0
   \   00000086   0x8801             LDRH     R1,[R0, #+0]
   \   00000088   0x1C49             ADDS     R1,R1,#+1
   \   0000008A   0x8001             STRH     R1,[R0, #+0]
   1284          }
   \                     ??SubFrameFinished_0: (+1)
   \   0000008C   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   0xE000ED14         DC32     0xe000ed14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_1:
   \   00000000   0x........         DC32     GPIO_INS

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_2:
   \   00000000   0x40023830         DC32     0x40023830

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_3:
   \   00000000   0x40021000         DC32     0x40021000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_4:
   \   00000000   0x10110000         DC32     0x10110000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_5:
   \   00000000   0x40020000         DC32     0x40020000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_6:
   \   00000000   0x40020400         DC32     0x40020400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_7:
   \   00000000   0x........         DC32     AUDIO_Desc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_8:
   \   00000000   0x........         DC32     USBD_AUDIO

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_9:
   \   00000000   0x........         DC32     USBD_AUDIO_fops

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_10:
   \   00000000   0x........         DC32     Buffer3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_11:
   \   00000000   0x........         DC32     Buffer1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_12:
   \   00000000   0x........         DC32     Buffer2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_13:
   \   00000000   0x........         DC32     SPI4_stPosShft

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_14:
   \   00000000   0x........         DC32     SPI4_stNipple

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_15:
   \   00000000   0x........         DC32     WaveRecord_flgIni

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_16:
   \   00000000   0x........         DC32     cntStrt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_17:
   \   00000000   0x........         DC32     bufferSum

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_18:
   \   00000000   0x........         DC32     idxFrmPDMMic8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_19:
   \   00000000   0x........         DC32     ??ticks

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_20:
   \   00000000   0x00100001         DC32     0x100001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_21:
   \   00000000   0x40005400         DC32     0x40005400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_22:
   \   00000000   0x40005800         DC32     0x40005800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_23:
   \   00000000   0x........         DC32     huart3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_24:
   \   00000000   0x40004800         DC32     0x40004800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_25:
   \   00000000   0x40020800         DC32     0x40020800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_26:
   \   00000000   0x40013C14         DC32     0x40013c14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_27:
   \   00000000   0x........         DC32     cntRisingEXTI

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_28:
   \   00000000   0x........         DC32     btnSW1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_29:
   \   00000000   0x........         DC32     GPIO_INS+0x1268

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_30:
   \   00000000   0x40022000         DC32     0x40022000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_31:
   \   00000000   0x........         DC32     hi2c2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_32:
   \   00000000   0x00A0689A         DC32     0xa0689a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_33:
   \   00000000   0x........         DC32     flgRacing

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_34:
   \   00000000   0x........         DC32     WaveRec_idxTest
   1285          /*****************************END OF FILE**************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
     144   BSP_AUDIO_OUT_ClockConfig
       144   -> HAL_RCCEx_GetPeriphCLKConfig
       144   -> HAL_RCCEx_PeriphCLKConfig
       8   ButtonInit
         8   -> HAL_GPIO_Init
         0   -> HAL_NVIC_EnableIRQ
         8   -> HAL_NVIC_SetPriority
       0   DFT_Init
         0   -> arm_rfft_fast_init_f32
       0   EXTI15_10_IRQHandler
       8   EXTI4_IRQHandler
         8   -> HAL_NVIC_DisableIRQ
       8   EXTI9_5_IRQHandler
         8   -> BSP_LED_Toggle
      32   HAL_I2C_MspInit
        32   -> HAL_GPIO_Init
        32   -> HAL_NVIC_EnableIRQ
        32   -> HAL_NVIC_SetPriority
       0   HAL_I2S_TxCpltCallback
      32   HAL_UART_MspInit
        32   -> HAL_GPIO_Init
        32   -> HAL_NVIC_EnableIRQ
        32   -> HAL_NVIC_SetPriority
       0   MX_I2C2_Init
         0   -> HAL_I2C_Init
       8   StartPlay
         8   -> Audio_MAL_Play
         8   -> StartRecMic7_8
       8   SubFrameFinished
         8   -> AudioUSBSend
       0   SumDelay
     208   SystemClock_Config
       208   -> HAL_PWREx_EnableOverDrive
       208   -> HAL_RCCEx_PeriphCLKConfig
       208   -> HAL_RCC_ClockConfig
       208   -> HAL_RCC_OscConfig
       0   Toggle_Leds
       0   USART3_Init
         0   -> HAL_UART_Init
     176   main
       176   -> AUDIO_InitApplication
       176   -> AudioPlayerUpd
       176   -> Audio_MAL_Play
       176   -> BSP_LED_Init
       176   -> BSP_LED_Toggle
       176   -> ButtonInit
       176   -> EnergyNoiseCalc
       176   -> FactorUpd
       176   -> HAL_GPIO_Init
       176   -> HAL_GPIO_WritePin
       176   -> HAL_Init
       176   -> HAL_NVIC_EnableIRQ
       176   -> HAL_NVIC_SetPriority
       176   -> HAL_RCCEx_GetPeriphCLKConfig
       176   -> HAL_RCCEx_PeriphCLKConfig
       176   -> MIC1TO8_Init
       176   -> MX_I2C2_Init
       176   -> PDM2PCMSDO78
       176   -> STA321MP_Ini
       176   -> StartRecMic7_8
       176   -> SumDelay
       176   -> SystemClock_Config
       176   -> USBD_AUDIO_Init_Microphone_Descriptor
       176   -> USBD_AUDIO_RegisterInterface
       176   -> USBD_Init
       176   -> USBD_RegisterClass
       176   -> USBD_Start
       176   -> Window
       176   -> arm_rfft_fast_init_f32


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable13
       4  ??DataTable13_1
       4  ??DataTable13_10
       4  ??DataTable13_11
       4  ??DataTable13_12
       4  ??DataTable13_13
       4  ??DataTable13_14
       4  ??DataTable13_15
       4  ??DataTable13_16
       4  ??DataTable13_17
       4  ??DataTable13_18
       4  ??DataTable13_19
       4  ??DataTable13_2
       4  ??DataTable13_20
       4  ??DataTable13_21
       4  ??DataTable13_22
       4  ??DataTable13_23
       4  ??DataTable13_24
       4  ??DataTable13_25
       4  ??DataTable13_26
       4  ??DataTable13_27
       4  ??DataTable13_28
       4  ??DataTable13_29
       4  ??DataTable13_3
       4  ??DataTable13_30
       4  ??DataTable13_31
       4  ??DataTable13_32
       4  ??DataTable13_33
       4  ??DataTable13_34
       4  ??DataTable13_4
       4  ??DataTable13_5
       4  ??DataTable13_6
       4  ??DataTable13_7
       4  ??DataTable13_8
       4  ??DataTable13_9
     100  BSP_AUDIO_OUT_ClockConfig
      72  ButtonInit
       4  CrssCorVal14
       4  CrssCorVal25
       4  CrssCorVal63
       4  CrssCorVal78
      10  DFT_Init
       2  DeltaBuf1
       2  DeltaBuf1Old
       2  EXTI15_10_IRQHandler
      42  EXTI4_IRQHandler
      78  EXTI9_5_IRQHandler
    4736  GPIO_INS
          FacMic
          flgDlyUpd
          flg10ms
          buffer_switch
          WaveRec_idxSens4
          WaveRec_idxSens3
          I2S2_idxTmp
          WaveRec_idxSens1
          WaveRec_idxSens2
          WaveRec_idxSens5
          WaveRec_idxSens6
          idxSPI5DataBuf3
          cntTime200
          hUSBDDevice
          fir256Coff
          S
     178  HAL_I2C_MspInit
       2  HAL_I2S_TxCpltCallback
     102  HAL_UART_MspInit
      24  IS
       4  LowPass_Mic1Old
       4  LowPass_Mic2Old
       4  LowPass_Mic3Old
       4  LowPass_Mic4Old
       4  LowPass_Mic5Old
       4  LowPass_Mic6Old
       4  LowPass_Mic7Old
       4  LowPass_Mic8Old
      44  MX_I2C2_Init
      24  S1
      24  S2
      24  S3
      24  S4
      46  StartPlay
     142  SubFrameFinished
     122  SumDelay
     160  SystemClock_Config
      18  Toggle_Leds
      38  USART3_Init
    1024  aRxBuffer
       1  appli_state
       4  btnSW1
          btnSW2
          cntBtnPress
          Command_index
   12308  bufferSum
       2  cntRisingEXTI
       1  flgSTAIni
     696  hUSBHost
     100  hspi4
     112  huart3
       1  idxDec
       2  idxLatency12
       2  idxLatency13
       2  idxLatency14
       2  idxLatency25
       2  idxLatency63
       2  idxLatency78
     730  main
       1  stFrstFrmStore
       4  ticks

 
 14 434 bytes in section .bss
  4 740 bytes in section .data
  2 026 bytes in section .text
 
  2 026 bytes of CODE memory
 19 174 bytes of DATA memory

Errors: none
Warnings: 2
