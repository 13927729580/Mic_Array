###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       22/Feb/2016  17:57:51
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Drivers\STM32F7xx_HAL_Driver\Src\stm32f7xx_hal_dma.c
#    Command line =  
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Drivers\STM32F7xx_HAL_Driver\Src\stm32f7xx_hal_dma.c
#        -D USE_HAL_DRIVER -D STM32F746xx -D USE_STM32746G_DISCO -D
#        USE_IOEXPANDER -D USE_USB_FS -lC
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List
#        -lA
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List
#        -o
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\Obj
#        --no_unroll --debug --endian=little --cpu=Cortex-M7 -e --fpu=VFPv5_sp
#        --dlib_config "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\CMSIS\Device\ST\STM32F7xx\Include\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\STM32F7xx_HAL_Driver\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\BSP\STM32746G-Discovery\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\BSP\Components\Common\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\Log\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\Fonts\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\CPU\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_Device_Library\Core\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_HOST_Library\Core\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_HOST_Library\Class\MSC\Inc\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\Third_Party\FatFs\src\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\Third_Party\FatFs\src\drivers\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_Audio\Addons\PDM\
#        -I
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_Device_Library\Class\AUDIO\Inc\
#        -Ohs --use_c++_inline --require_prototypes -I "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.3\arm\CMSIS\Include\" -D
#        ARM_MATH_CM7
#    List file    =  
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List\stm32f7xx_hal_dma.lst
#    Object file  =  
#        D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\Obj\stm32f7xx_hal_dma.o
#
###############################################################################

D:\sop1hc\Github\data\Mic_Array_V00\USB_STREAMING\Mic_Array\Drivers\STM32F7xx_HAL_Driver\Src\stm32f7xx_hal_dma.c
      1          /**
                   ^
Warning[Pa050]: non-native end of line sequence detected (this diagnostic is
          only issued once)
      2            ******************************************************************************
      3            * @file    stm32f7xx_hal_dma.c
      4            * @author  MCD Application Team
      5            * @version V1.0.1
      6            * @date    25-June-2015
      7            * @brief   DMA HAL module driver.
      8            *    
      9            *          This file provides firmware functions to manage the following 
     10            *          functionalities of the Direct Memory Access (DMA) peripheral:
     11            *           + Initialization and de-initialization functions
     12            *           + IO operation functions
     13            *           + Peripheral State and errors functions
     14            @verbatim     
     15            ==============================================================================      
     16                                  ##### How to use this driver #####
     17            ============================================================================== 
     18            [..]
     19             (#) Enable and configure the peripheral to be connected to the DMA Stream
     20                 (except for internal SRAM/FLASH memories: no initialization is 
     21                 necessary) please refer to Reference manual for connection between peripherals
     22                 and DMA requests . 
     23                    
     24             (#) For a given Stream, program the required configuration through the following parameters:   
     25                 Transfer Direction, Source and Destination data formats, 
     26                 Circular, Normal or peripheral flow control mode, Stream Priority level, 
     27                 Source and Destination Increment mode, FIFO mode and its Threshold (if needed), 
     28                 Burst mode for Source and/or Destination (if needed) using HAL_DMA_Init() function.
     29                               
     30               *** Polling mode IO operation ***
     31               =================================   
     32              [..] 
     33                    (+) Use HAL_DMA_Start() to start DMA transfer after the configuration of Source 
     34                        address and destination address and the Length of data to be transferred
     35                    (+) Use HAL_DMA_PollForTransfer() to poll for the end of current transfer, in this  
     36                        case a fixed Timeout can be configured by User depending from his application.
     37                         
     38               *** Interrupt mode IO operation ***    
     39               =================================== 
     40              [..]     
     41                    (+) Configure the DMA interrupt priority using HAL_NVIC_SetPriority()
     42                    (+) Enable the DMA IRQ handler using HAL_NVIC_EnableIRQ() 
     43                    (+) Use HAL_DMA_Start_IT() to start DMA transfer after the configuration of  
     44                        Source address and destination address and the Length of data to be transferred. In this 
     45                        case the DMA interrupt is configured 
     46                    (+) Use HAL_DMA_IRQHandler() called under DMA_IRQHandler() Interrupt subroutine
     47                    (+) At the end of data transfer HAL_DMA_IRQHandler() function is executed and user can 
     48                        add his own function by customization of function pointer XferCpltCallback and 
     49                        XferErrorCallback (i.e a member of DMA handle structure). 
     50              [..]                
     51               (#) Use HAL_DMA_GetState() function to return the DMA state and HAL_DMA_GetError() in case of error 
     52                   detection.
     53                   
     54               (#) Use HAL_DMA_Abort() function to abort the current transfer
     55               
     56               -@-   In Memory-to-Memory transfer mode, Circular mode is not allowed.
     57              
     58               -@-   The FIFO is used mainly to reduce bus usage and to allow data packing/unpacking: it is
     59                     possible to set different Data Sizes for the Peripheral and the Memory (ie. you can set
     60                     Half-Word data size for the peripheral to access its data register and set Word data size
     61                     for the Memory to gain in access time. Each two half words will be packed and written in
     62                     a single access to a Word in the Memory).
     63                
     64               -@-   When FIFO is disabled, it is not allowed to configure different Data Sizes for Source
     65                     and Destination. In this case the Peripheral Data Size will be applied to both Source
     66                     and Destination.               
     67            
     68               *** DMA HAL driver macros list ***
     69               ============================================= 
     70               [..]
     71                 Below the list of most used macros in DMA HAL driver.
     72                 
     73                (+) __HAL_DMA_ENABLE: Enable the specified DMA Stream.
     74                (+) __HAL_DMA_DISABLE: Disable the specified DMA Stream.
     75                (+) __HAL_DMA_GET_FS: Return the current DMA Stream FIFO filled level.
     76                (+) __HAL_DMA_GET_FLAG: Get the DMA Stream pending flags.
     77                (+) __HAL_DMA_CLEAR_FLAG: Clear the DMA Stream pending flags.
     78                (+) __HAL_DMA_ENABLE_IT: Enable the specified DMA Stream interrupts.
     79                (+) __HAL_DMA_DISABLE_IT: Disable the specified DMA Stream interrupts.
     80                (+) __HAL_DMA_GET_IT_SOURCE: Check whether the specified DMA Stream interrupt has occurred or not. 
     81               
     82               [..] 
     83                (@) You can refer to the DMA HAL driver header file for more useful macros  
     84            
     85            @endverbatim
     86            ******************************************************************************
     87            * @attention
     88            *
     89            * <h2><center>&copy; COPYRIGHT(c) 2015 STMicroelectronics</center></h2>
     90            *
     91            * Redistribution and use in source and binary forms, with or without modification,
     92            * are permitted provided that the following conditions are met:
     93            *   1. Redistributions of source code must retain the above copyright notice,
     94            *      this list of conditions and the following disclaimer.
     95            *   2. Redistributions in binary form must reproduce the above copyright notice,
     96            *      this list of conditions and the following disclaimer in the documentation
     97            *      and/or other materials provided with the distribution.
     98            *   3. Neither the name of STMicroelectronics nor the names of its contributors
     99            *      may be used to endorse or promote products derived from this software
    100            *      without specific prior written permission.
    101            *
    102            * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
    103            * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
    104            * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
    105            * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
    106            * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
    107            * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
    108            * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
    109            * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
    110            * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
    111            * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    112            *
    113            ******************************************************************************
    114            */ 
    115          
    116          /* Includes ------------------------------------------------------------------*/
    117          #include "stm32f7xx_hal.h"
    118          
    119          /** @addtogroup STM32F7xx_HAL_Driver
    120            * @{
    121            */
    122          
    123          /** @defgroup DMA DMA
    124            * @brief DMA HAL module driver
    125            * @{
    126            */
    127          
    128          #ifdef HAL_DMA_MODULE_ENABLED
    129          
    130          /* Private types -------------------------------------------------------------*/
    131          /* Private variables ---------------------------------------------------------*/
    132          /* Private constants ---------------------------------------------------------*/
    133          /** @addtogroup DMA_Private_Constants
    134           * @{
    135           */
    136           #define HAL_TIMEOUT_DMA_ABORT    ((uint32_t)1000)  /* 1s */
    137          /**
    138            * @}
    139            */
    140          /* Private macros ------------------------------------------------------------*/
    141          /* Private functions ---------------------------------------------------------*/
    142          /** @addtogroup DMA_Private_Functions
    143            * @{
    144            */
    145          
    146          /**
    147            * @brief  Sets the DMA Transfer parameter.
    148            * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
    149            *                     the configuration information for the specified DMA Stream.
    150            * @param  SrcAddress: The source memory Buffer address
    151            * @param  DstAddress: The destination memory Buffer address
    152            * @param  DataLength: The length of data to be transferred from source to destination
    153            * @retval HAL status
    154            */

   \                                 In section .text, align 2, keep-with-next
    155          void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
    156          {
   \                     DMA_SetConfig: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
    157            /* Clear DBM bit */
    158            hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
   \   00000002   0x6804             LDR      R4,[R0, #+0]
   \   00000004   0x6825             LDR      R5,[R4, #+0]
   \   00000006   0xF425 0x2580      BIC      R5,R5,#0x40000
   \   0000000A   0x6025             STR      R5,[R4, #+0]
    159          	
    160            /* Configure DMA Stream data length */
    161            hdma->Instance->NDTR = DataLength;
   \   0000000C   0x6063             STR      R3,[R4, #+4]
    162          
    163            /* Peripheral to Memory */
    164            if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
   \   0000000E   0x6880             LDR      R0,[R0, #+8]
   \   00000010   0x2840             CMP      R0,#+64
   \   00000012   0xBF07             ITTEE    EQ 
   \   00000014   0x60A2             STREQ    R2,[R4, #+8]
   \   00000016   0x60E1             STREQ    R1,[R4, #+12]
   \   00000018   0x60A1             STRNE    R1,[R4, #+8]
   \   0000001A   0x60E2             STRNE    R2,[R4, #+12]
    165            {
    166              /* Configure DMA Stream destination address */
    167              hdma->Instance->PAR = DstAddress;
    168          
    169              /* Configure DMA Stream source address */
    170              hdma->Instance->M0AR = SrcAddress;
    171            }
    172            /* Memory to Peripheral */
    173            else
    174            {
    175              /* Configure DMA Stream source address */
    176              hdma->Instance->PAR = SrcAddress;
    177              
    178              /* Configure DMA Stream destination address */
    179              hdma->Instance->M0AR = DstAddress;
    180            }
    181          }
   \   0000001C   0xBC30             POP      {R4,R5}
   \   0000001E   0x4770             BX       LR               ;; return
    182          
    183          /**
    184            * @}
    185            */  
    186            
    187          /* Exported functions ---------------------------------------------------------*/
    188          /** @addtogroup DMA_Exported_Functions
    189            * @{
    190            */
    191          
    192          /** @addtogroup DMA_Exported_Functions_Group1
    193            *
    194          @verbatim   
    195           ===============================================================================
    196                       ##### Initialization and de-initialization functions  #####
    197           ===============================================================================  
    198              [..]
    199              This section provides functions allowing to initialize the DMA Stream source
    200              and destination addresses, incrementation and data sizes, transfer direction, 
    201              circular/normal mode selection, memory-to-memory mode selection and Stream priority value.
    202              [..]
    203              The HAL_DMA_Init() function follows the DMA configuration procedures as described in
    204              reference manual.  
    205          
    206          @endverbatim
    207            * @{
    208            */
    209            
    210          /**
    211            * @brief  Initializes the DMA according to the specified
    212            *         parameters in the DMA_InitTypeDef and create the associated handle.
    213            * @param  hdma: Pointer to a DMA_HandleTypeDef structure that contains
    214            *               the configuration information for the specified DMA Stream.  
    215            * @retval HAL status
    216            */

   \                                 In section .text, align 2, keep-with-next
    217          HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
    218          { 
    219            uint32_t tmp = 0;
    220            
    221            /* Check the DMA peripheral state */
    222            if(hdma == NULL)
   \                     HAL_DMA_Init: (+1)
   \   00000000   0xB908             CBNZ.N   R0,??HAL_DMA_Init_0
    223            {
    224              return HAL_ERROR;
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x4770             BX       LR
    225            }
    226          
    227            /* Check the parameters */
    228            assert_param(IS_DMA_STREAM_ALL_INSTANCE(hdma->Instance));
    229            assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
    230            assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
    231            assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
    232            assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
    233            assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
    234            assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
    235            assert_param(IS_DMA_MODE(hdma->Init.Mode));
    236            assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
    237            assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
    238            /* Check the memory burst, peripheral burst and FIFO threshold parameters only
    239               when FIFO mode is enabled */
    240            if(hdma->Init.FIFOMode != DMA_FIFOMODE_DISABLE)
    241            {
    242              assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
    243              assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
    244              assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
    245            }
    246          
    247            /* Change DMA peripheral state */
    248            hdma->State = HAL_DMA_STATE_BUSY;
   \                     ??HAL_DMA_Init_0: (+1)
   \   00000006   0x2102             MOVS     R1,#+2
    249          
    250            /* Get the CR register value */
    251            tmp = hdma->Instance->CR;
    252          
    253            /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
    254            tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
    255                                DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
    256                                DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
    257                                DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));
    258          
    259            /* Prepare the DMA Stream configuration */
    260            tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
    261                    hdma->Init.PeriphInc           | hdma->Init.MemInc           |
    262                    hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
    263                    hdma->Init.Mode                | hdma->Init.Priority;
   \   00000008   0x.... 0x....      LDR.W    R3,??DataTable1  ;; 0xf010803f
   \   0000000C   0xF880 0x1035      STRB     R1,[R0, #+53]
   \   00000010   0x6801             LDR      R1,[R0, #+0]
   \   00000012   0x680A             LDR      R2,[R1, #+0]
   \   00000014   0x401A             ANDS     R2,R3,R2
   \   00000016   0x6843             LDR      R3,[R0, #+4]
   \   00000018   0x431A             ORRS     R2,R3,R2
   \   0000001A   0x6883             LDR      R3,[R0, #+8]
   \   0000001C   0x431A             ORRS     R2,R3,R2
   \   0000001E   0x68C3             LDR      R3,[R0, #+12]
   \   00000020   0x431A             ORRS     R2,R3,R2
   \   00000022   0x6903             LDR      R3,[R0, #+16]
   \   00000024   0x431A             ORRS     R2,R3,R2
   \   00000026   0x6943             LDR      R3,[R0, #+20]
   \   00000028   0x431A             ORRS     R2,R3,R2
   \   0000002A   0x6983             LDR      R3,[R0, #+24]
   \   0000002C   0x431A             ORRS     R2,R3,R2
   \   0000002E   0x69C3             LDR      R3,[R0, #+28]
   \   00000030   0x431A             ORRS     R2,R3,R2
   \   00000032   0x6A03             LDR      R3,[R0, #+32]
   \   00000034   0x431A             ORRS     R2,R3,R2
    264          
    265            /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
    266            if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
   \   00000036   0x6A43             LDR      R3,[R0, #+36]
   \   00000038   0x2B04             CMP      R3,#+4
   \   0000003A   0xD105             BNE.N    ??HAL_DMA_Init_1
    267            {
    268              /* Get memory burst and peripheral burst */
    269              tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
   \   0000003C   0x6AC3             LDR      R3,[R0, #+44]
   \   0000003E   0xF8D0 0xC030      LDR      R12,[R0, #+48]
   \   00000042   0xEA4C 0x0303      ORR      R3,R12,R3
   \   00000046   0x431A             ORRS     R2,R3,R2
    270            }
    271            
    272            /* Write to DMA Stream CR register */
    273            hdma->Instance->CR = tmp;  
   \                     ??HAL_DMA_Init_1: (+1)
   \   00000048   0x600A             STR      R2,[R1, #+0]
    274          
    275            /* Get the FCR register value */
    276            tmp = hdma->Instance->FCR;
   \   0000004A   0x6801             LDR      R1,[R0, #+0]
   \   0000004C   0x694A             LDR      R2,[R1, #+20]
    277          
    278            /* Clear Direct mode and FIFO threshold bits */
    279            tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
    280          
    281            /* Prepare the DMA Stream FIFO configuration */
    282            tmp |= hdma->Init.FIFOMode;
   \   0000004E   0x6A43             LDR      R3,[R0, #+36]
   \   00000050   0x08D2             LSRS     R2,R2,#+3
    283          
    284            /* the FIFO threshold is not used when the FIFO mode is disabled */
    285            if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
   \   00000052   0x2B04             CMP      R3,#+4
   \   00000054   0xEA43 0x02C2      ORR      R2,R3,R2, LSL #+3
   \   00000058   0xBF04             ITT      EQ 
   \   0000005A   0x6A83             LDREQ    R3,[R0, #+40]
   \   0000005C   0x431A             ORREQ    R2,R3,R2
    286            {
    287              /* Get the FIFO threshold */
    288              tmp |= hdma->Init.FIFOThreshold;
    289            }
    290            
    291            /* Write to DMA Stream FCR */
    292            hdma->Instance->FCR = tmp;
   \   0000005E   0x614A             STR      R2,[R1, #+20]
    293          
    294            /* Initialize the error code */
    295            hdma->ErrorCode = HAL_DMA_ERROR_NONE;
   \   00000060   0x2100             MOVS     R1,#+0
   \   00000062   0x64C1             STR      R1,[R0, #+76]
    296          
    297            /* Initialize the DMA state */
    298            hdma->State = HAL_DMA_STATE_READY;
   \   00000064   0x2101             MOVS     R1,#+1
   \   00000066   0xF880 0x1035      STRB     R1,[R0, #+53]
    299          
    300            return HAL_OK;
   \   0000006A   0x2000             MOVS     R0,#+0
   \   0000006C   0x4770             BX       LR               ;; return
    301          }
    302          
    303          /**
    304            * @brief  DeInitializes the DMA peripheral 
    305            * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
    306            *               the configuration information for the specified DMA Stream.  
    307            * @retval HAL status
    308            */

   \                                 In section .text, align 2, keep-with-next
    309          HAL_StatusTypeDef HAL_DMA_DeInit(DMA_HandleTypeDef *hdma)
    310          {
    311            /* Check the DMA peripheral state */
    312            if(hdma == NULL)
   \                     HAL_DMA_DeInit: (+1)
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xB470             PUSH     {R4-R6}
   \   00000004   0xBF1A             ITTE     NE 
   \   00000006   0xF890 0x1035      LDRBNE   R1,[R0, #+53]
   \   0000000A   0x2902             CMPNE    R1,#+2
   \   0000000C   0x2001             MOVEQ    R0,#+1
    313            {
    314              return HAL_ERROR;
    315            }
    316            
    317            /* Check the DMA peripheral state */
    318            if(hdma->State == HAL_DMA_STATE_BUSY)
    319            {
    320               return HAL_ERROR;
   \   0000000E   0xF000 0x81E5      BEQ.W    ??HAL_DMA_DeInit_0
    321            }
    322          
    323            /* Disable the selected DMA Streamx */
    324            __HAL_DMA_DISABLE(hdma);
   \   00000012   0x6801             LDR      R1,[R0, #+0]
    325          
    326            /* Reset DMA Streamx control register */
    327            hdma->Instance->CR   = 0;
    328          
    329            /* Reset DMA Streamx number of data to transfer register */
    330            hdma->Instance->NDTR = 0;
    331          
    332            /* Reset DMA Streamx peripheral address register */
    333            hdma->Instance->PAR  = 0;
    334          
    335            /* Reset DMA Streamx memory 0 address register */
    336            hdma->Instance->M0AR = 0;
    337          
    338            /* Reset DMA Streamx memory 1 address register */
    339            hdma->Instance->M1AR = 0;
    340          
    341            /* Reset DMA Streamx FIFO control register */
    342            hdma->Instance->FCR  = (uint32_t)0x00000021;
    343          
    344            /* Clear all flags */
    345            __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_DME_FLAG_INDEX(hdma));
   \   00000014   0x.... 0x....      LDR.W    R4,??DataTable1_1  ;; 0x40026459
   \   00000018   0x.... 0x....      LDR.W    R3,??DataTable1_2  ;; 0x40026470
   \   0000001C   0x680A             LDR      R2,[R1, #+0]
   \   0000001E   0x0852             LSRS     R2,R2,#+1
   \   00000020   0x0052             LSLS     R2,R2,#+1
   \   00000022   0x600A             STR      R2,[R1, #+0]
   \   00000024   0x6802             LDR      R2,[R0, #+0]
   \   00000026   0x2100             MOVS     R1,#+0
   \   00000028   0x6011             STR      R1,[R2, #+0]
   \   0000002A   0x6802             LDR      R2,[R0, #+0]
   \   0000002C   0x6051             STR      R1,[R2, #+4]
   \   0000002E   0x6802             LDR      R2,[R0, #+0]
   \   00000030   0x6091             STR      R1,[R2, #+8]
   \   00000032   0x6802             LDR      R2,[R0, #+0]
   \   00000034   0x60D1             STR      R1,[R2, #+12]
   \   00000036   0x6802             LDR      R2,[R0, #+0]
   \   00000038   0x6111             STR      R1,[R2, #+16]
   \   0000003A   0x6802             LDR      R2,[R0, #+0]
   \   0000003C   0x2121             MOVS     R1,#+33
   \   0000003E   0x6151             STR      R1,[R2, #+20]
   \   00000040   0x6805             LDR      R5,[R0, #+0]
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable1_3  ;; 0x40026008
   \   00000046   0x.... 0x....      LDR.W    R2,??DataTable1_4  ;; 0x400260b9
   \   0000004A   0x42A5             CMP      R5,R4
   \   0000004C   0xD316             BCC.N    ??HAL_DMA_DeInit_1
   \   0000004E   0x429D             CMP      R5,R3
   \   00000050   0xBF08             IT       EQ 
   \   00000052   0x.... 0x....      LDREQ.W  R5,??DataTable1_5  ;; 0x800004
   \   00000056   0xD00E             BEQ.N    ??HAL_DMA_DeInit_2
   \   00000058   0x.... 0x....      LDR.W    R6,??DataTable1_6  ;; 0x40026488
   \   0000005C   0x42B5             CMP      R5,R6
   \   0000005E   0xBF08             IT       EQ 
   \   00000060   0xF44F 0x7580      MOVEQ    R5,#+256
   \   00000064   0xD007             BEQ.N    ??HAL_DMA_DeInit_2
   \   00000066   0x.... 0x....      LDR.W    R6,??DataTable1_7  ;; 0x400264a0
   \   0000006A   0x42B5             CMP      R5,R6
   \   0000006C   0xBF0C             ITE      EQ 
   \   0000006E   0xF44F 0x2580      MOVEQ    R5,#+262144
   \   00000072   0xF04F 0x7580      MOVNE    R5,#+16777216
   \                     ??HAL_DMA_DeInit_2: (+1)
   \   00000076   0xF8C1 0x5404      STR      R5,[R1, #+1028]
   \   0000007A   0xE04C             B.N      ??HAL_DMA_DeInit_3
   \                     ??HAL_DMA_DeInit_1: (+1)
   \   0000007C   0x4295             CMP      R5,R2
   \   0000007E   0xD318             BCC.N    ??HAL_DMA_DeInit_4
   \   00000080   0x.... 0x....      LDR.W    R6,??DataTable1_8  ;; 0x40026410
   \   00000084   0x42B5             CMP      R5,R6
   \   00000086   0xBF08             IT       EQ 
   \   00000088   0x.... 0x....      LDREQ.W  R5,??DataTable1_5  ;; 0x800004
   \   0000008C   0xD00E             BEQ.N    ??HAL_DMA_DeInit_5
   \   0000008E   0x.... 0x....      LDR.W    R6,??DataTable1_9  ;; 0x40026428
   \   00000092   0x42B5             CMP      R5,R6
   \   00000094   0xBF08             IT       EQ 
   \   00000096   0xF44F 0x7580      MOVEQ    R5,#+256
   \   0000009A   0xD007             BEQ.N    ??HAL_DMA_DeInit_5
   \   0000009C   0x.... 0x....      LDR.W    R6,??DataTable1_10  ;; 0x40026440
   \   000000A0   0x42B5             CMP      R5,R6
   \   000000A2   0xBF0C             ITE      EQ 
   \   000000A4   0xF44F 0x2580      MOVEQ    R5,#+262144
   \   000000A8   0xF04F 0x7580      MOVNE    R5,#+16777216
   \                     ??HAL_DMA_DeInit_5: (+1)
   \   000000AC   0xF8C1 0x5400      STR      R5,[R1, #+1024]
   \   000000B0   0xE031             B.N      ??HAL_DMA_DeInit_3
   \                     ??HAL_DMA_DeInit_4: (+1)
   \   000000B2   0x.... 0x....      LDR.W    R6,??DataTable1_11  ;; 0x40026059
   \   000000B6   0x42B5             CMP      R5,R6
   \   000000B8   0xD317             BCC.N    ??HAL_DMA_DeInit_6
   \   000000BA   0x.... 0x....      LDR.W    R6,??DataTable1_12  ;; 0x40026070
   \   000000BE   0x42B5             CMP      R5,R6
   \   000000C0   0xBF08             IT       EQ 
   \   000000C2   0x.... 0x....      LDREQ.W  R5,??DataTable1_5  ;; 0x800004
   \   000000C6   0xD00E             BEQ.N    ??HAL_DMA_DeInit_7
   \   000000C8   0x.... 0x....      LDR.W    R6,??DataTable1_13  ;; 0x40026088
   \   000000CC   0x42B5             CMP      R5,R6
   \   000000CE   0xBF08             IT       EQ 
   \   000000D0   0xF44F 0x7580      MOVEQ    R5,#+256
   \   000000D4   0xD007             BEQ.N    ??HAL_DMA_DeInit_7
   \   000000D6   0x.... 0x....      LDR.W    R6,??DataTable1_14  ;; 0x400260a0
   \   000000DA   0x42B5             CMP      R5,R6
   \   000000DC   0xBF0C             ITE      EQ 
   \   000000DE   0xF44F 0x2580      MOVEQ    R5,#+262144
   \   000000E2   0xF04F 0x7580      MOVNE    R5,#+16777216
   \                     ??HAL_DMA_DeInit_7: (+1)
   \   000000E6   0x604D             STR      R5,[R1, #+4]
   \   000000E8   0xE015             B.N      ??HAL_DMA_DeInit_3
   \                     ??HAL_DMA_DeInit_6: (+1)
   \   000000EA   0x.... 0x....      LDR.W    R6,??DataTable1_15  ;; 0x40026010
   \   000000EE   0x42B5             CMP      R5,R6
   \   000000F0   0xBF08             IT       EQ 
   \   000000F2   0x....             LDREQ.N  R5,??DataTable1_5  ;; 0x800004
   \   000000F4   0xD00E             BEQ.N    ??HAL_DMA_DeInit_8
   \   000000F6   0x.... 0x....      LDR.W    R6,??DataTable1_16  ;; 0x40026028
   \   000000FA   0x42B5             CMP      R5,R6
   \   000000FC   0xBF08             IT       EQ 
   \   000000FE   0xF44F 0x7580      MOVEQ    R5,#+256
   \   00000102   0xD007             BEQ.N    ??HAL_DMA_DeInit_8
   \   00000104   0x.... 0x....      LDR.W    R6,??DataTable1_17  ;; 0x40026040
   \   00000108   0x42B5             CMP      R5,R6
   \   0000010A   0xBF0C             ITE      EQ 
   \   0000010C   0xF44F 0x2580      MOVEQ    R5,#+262144
   \   00000110   0xF04F 0x7580      MOVNE    R5,#+16777216
   \                     ??HAL_DMA_DeInit_8: (+1)
   \   00000114   0x600D             STR      R5,[R1, #+0]
    346            __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma));
   \                     ??HAL_DMA_DeInit_3: (+1)
   \   00000116   0x6805             LDR      R5,[R0, #+0]
   \   00000118   0x42A5             CMP      R5,R4
   \   0000011A   0xD313             BCC.N    ??HAL_DMA_DeInit_9
   \   0000011C   0x429D             CMP      R5,R3
   \   0000011E   0xBF08             IT       EQ 
   \   00000120   0x2520             MOVEQ    R5,#+32
   \   00000122   0xD00C             BEQ.N    ??HAL_DMA_DeInit_10
   \   00000124   0x....             LDR.N    R6,??DataTable1_6  ;; 0x40026488
   \   00000126   0x42B5             CMP      R5,R6
   \   00000128   0xBF08             IT       EQ 
   \   0000012A   0xF44F 0x6500      MOVEQ    R5,#+2048
   \   0000012E   0xD006             BEQ.N    ??HAL_DMA_DeInit_10
   \   00000130   0x....             LDR.N    R6,??DataTable1_7  ;; 0x400264a0
   \   00000132   0x42B5             CMP      R5,R6
   \   00000134   0xBF0C             ITE      EQ 
   \   00000136   0xF44F 0x1500      MOVEQ    R5,#+2097152
   \   0000013A   0xF04F 0x6500      MOVNE    R5,#+134217728
   \                     ??HAL_DMA_DeInit_10: (+1)
   \   0000013E   0xF8C1 0x5404      STR      R5,[R1, #+1028]
   \   00000142   0xE040             B.N      ??HAL_DMA_DeInit_11
   \                     ??HAL_DMA_DeInit_9: (+1)
   \   00000144   0x4295             CMP      R5,R2
   \   00000146   0xD314             BCC.N    ??HAL_DMA_DeInit_12
   \   00000148   0x....             LDR.N    R6,??DataTable1_8  ;; 0x40026410
   \   0000014A   0x42B5             CMP      R5,R6
   \   0000014C   0xBF08             IT       EQ 
   \   0000014E   0x2520             MOVEQ    R5,#+32
   \   00000150   0xD00C             BEQ.N    ??HAL_DMA_DeInit_13
   \   00000152   0x....             LDR.N    R6,??DataTable1_9  ;; 0x40026428
   \   00000154   0x42B5             CMP      R5,R6
   \   00000156   0xBF08             IT       EQ 
   \   00000158   0xF44F 0x6500      MOVEQ    R5,#+2048
   \   0000015C   0xD006             BEQ.N    ??HAL_DMA_DeInit_13
   \   0000015E   0x....             LDR.N    R6,??DataTable1_10  ;; 0x40026440
   \   00000160   0x42B5             CMP      R5,R6
   \   00000162   0xBF0C             ITE      EQ 
   \   00000164   0xF44F 0x1500      MOVEQ    R5,#+2097152
   \   00000168   0xF04F 0x6500      MOVNE    R5,#+134217728
   \                     ??HAL_DMA_DeInit_13: (+1)
   \   0000016C   0xF8C1 0x5400      STR      R5,[R1, #+1024]
   \   00000170   0xE029             B.N      ??HAL_DMA_DeInit_11
   \                     ??HAL_DMA_DeInit_12: (+1)
   \   00000172   0x....             LDR.N    R6,??DataTable1_11  ;; 0x40026059
   \   00000174   0x42B5             CMP      R5,R6
   \   00000176   0xD313             BCC.N    ??HAL_DMA_DeInit_14
   \   00000178   0x....             LDR.N    R6,??DataTable1_12  ;; 0x40026070
   \   0000017A   0x42B5             CMP      R5,R6
   \   0000017C   0xBF08             IT       EQ 
   \   0000017E   0x2520             MOVEQ    R5,#+32
   \   00000180   0xD00C             BEQ.N    ??HAL_DMA_DeInit_15
   \   00000182   0x....             LDR.N    R6,??DataTable1_13  ;; 0x40026088
   \   00000184   0x42B5             CMP      R5,R6
   \   00000186   0xBF08             IT       EQ 
   \   00000188   0xF44F 0x6500      MOVEQ    R5,#+2048
   \   0000018C   0xD006             BEQ.N    ??HAL_DMA_DeInit_15
   \   0000018E   0x....             LDR.N    R6,??DataTable1_14  ;; 0x400260a0
   \   00000190   0x42B5             CMP      R5,R6
   \   00000192   0xBF0C             ITE      EQ 
   \   00000194   0xF44F 0x1500      MOVEQ    R5,#+2097152
   \   00000198   0xF04F 0x6500      MOVNE    R5,#+134217728
   \                     ??HAL_DMA_DeInit_15: (+1)
   \   0000019C   0x604D             STR      R5,[R1, #+4]
   \   0000019E   0xE012             B.N      ??HAL_DMA_DeInit_11
   \                     ??HAL_DMA_DeInit_14: (+1)
   \   000001A0   0x....             LDR.N    R6,??DataTable1_15  ;; 0x40026010
   \   000001A2   0x42B5             CMP      R5,R6
   \   000001A4   0xBF08             IT       EQ 
   \   000001A6   0x2520             MOVEQ    R5,#+32
   \   000001A8   0xD00C             BEQ.N    ??HAL_DMA_DeInit_16
   \   000001AA   0x....             LDR.N    R6,??DataTable1_16  ;; 0x40026028
   \   000001AC   0x42B5             CMP      R5,R6
   \   000001AE   0xBF08             IT       EQ 
   \   000001B0   0xF44F 0x6500      MOVEQ    R5,#+2048
   \   000001B4   0xD006             BEQ.N    ??HAL_DMA_DeInit_16
   \   000001B6   0x....             LDR.N    R6,??DataTable1_17  ;; 0x40026040
   \   000001B8   0x42B5             CMP      R5,R6
   \   000001BA   0xBF0C             ITE      EQ 
   \   000001BC   0xF44F 0x1500      MOVEQ    R5,#+2097152
   \   000001C0   0xF04F 0x6500      MOVNE    R5,#+134217728
   \                     ??HAL_DMA_DeInit_16: (+1)
   \   000001C4   0x600D             STR      R5,[R1, #+0]
    347            __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TE_FLAG_INDEX(hdma));
   \                     ??HAL_DMA_DeInit_11: (+1)
   \   000001C6   0x6805             LDR      R5,[R0, #+0]
   \   000001C8   0x42A5             CMP      R5,R4
   \   000001CA   0xD313             BCC.N    ??HAL_DMA_DeInit_17
   \   000001CC   0x429D             CMP      R5,R3
   \   000001CE   0xBF08             IT       EQ 
   \   000001D0   0x2508             MOVEQ    R5,#+8
   \   000001D2   0xD00C             BEQ.N    ??HAL_DMA_DeInit_18
   \   000001D4   0x....             LDR.N    R6,??DataTable1_6  ;; 0x40026488
   \   000001D6   0x42B5             CMP      R5,R6
   \   000001D8   0xBF08             IT       EQ 
   \   000001DA   0xF44F 0x7500      MOVEQ    R5,#+512
   \   000001DE   0xD006             BEQ.N    ??HAL_DMA_DeInit_18
   \   000001E0   0x....             LDR.N    R6,??DataTable1_7  ;; 0x400264a0
   \   000001E2   0x42B5             CMP      R5,R6
   \   000001E4   0xBF0C             ITE      EQ 
   \   000001E6   0xF44F 0x2500      MOVEQ    R5,#+524288
   \   000001EA   0xF04F 0x7500      MOVNE    R5,#+33554432
   \                     ??HAL_DMA_DeInit_18: (+1)
   \   000001EE   0xF8C1 0x5404      STR      R5,[R1, #+1028]
   \   000001F2   0xE040             B.N      ??HAL_DMA_DeInit_19
   \                     ??HAL_DMA_DeInit_17: (+1)
   \   000001F4   0x4295             CMP      R5,R2
   \   000001F6   0xD314             BCC.N    ??HAL_DMA_DeInit_20
   \   000001F8   0x....             LDR.N    R6,??DataTable1_8  ;; 0x40026410
   \   000001FA   0x42B5             CMP      R5,R6
   \   000001FC   0xBF08             IT       EQ 
   \   000001FE   0x2508             MOVEQ    R5,#+8
   \   00000200   0xD00C             BEQ.N    ??HAL_DMA_DeInit_21
   \   00000202   0x....             LDR.N    R6,??DataTable1_9  ;; 0x40026428
   \   00000204   0x42B5             CMP      R5,R6
   \   00000206   0xBF08             IT       EQ 
   \   00000208   0xF44F 0x7500      MOVEQ    R5,#+512
   \   0000020C   0xD006             BEQ.N    ??HAL_DMA_DeInit_21
   \   0000020E   0x....             LDR.N    R6,??DataTable1_10  ;; 0x40026440
   \   00000210   0x42B5             CMP      R5,R6
   \   00000212   0xBF0C             ITE      EQ 
   \   00000214   0xF44F 0x2500      MOVEQ    R5,#+524288
   \   00000218   0xF04F 0x7500      MOVNE    R5,#+33554432
   \                     ??HAL_DMA_DeInit_21: (+1)
   \   0000021C   0xF8C1 0x5400      STR      R5,[R1, #+1024]
   \   00000220   0xE029             B.N      ??HAL_DMA_DeInit_19
   \                     ??HAL_DMA_DeInit_20: (+1)
   \   00000222   0x....             LDR.N    R6,??DataTable1_11  ;; 0x40026059
   \   00000224   0x42B5             CMP      R5,R6
   \   00000226   0xD313             BCC.N    ??HAL_DMA_DeInit_22
   \   00000228   0x....             LDR.N    R6,??DataTable1_12  ;; 0x40026070
   \   0000022A   0x42B5             CMP      R5,R6
   \   0000022C   0xBF08             IT       EQ 
   \   0000022E   0x2508             MOVEQ    R5,#+8
   \   00000230   0xD00C             BEQ.N    ??HAL_DMA_DeInit_23
   \   00000232   0x....             LDR.N    R6,??DataTable1_13  ;; 0x40026088
   \   00000234   0x42B5             CMP      R5,R6
   \   00000236   0xBF08             IT       EQ 
   \   00000238   0xF44F 0x7500      MOVEQ    R5,#+512
   \   0000023C   0xD006             BEQ.N    ??HAL_DMA_DeInit_23
   \   0000023E   0x....             LDR.N    R6,??DataTable1_14  ;; 0x400260a0
   \   00000240   0x42B5             CMP      R5,R6
   \   00000242   0xBF0C             ITE      EQ 
   \   00000244   0xF44F 0x2500      MOVEQ    R5,#+524288
   \   00000248   0xF04F 0x7500      MOVNE    R5,#+33554432
   \                     ??HAL_DMA_DeInit_23: (+1)
   \   0000024C   0x604D             STR      R5,[R1, #+4]
   \   0000024E   0xE012             B.N      ??HAL_DMA_DeInit_19
   \                     ??HAL_DMA_DeInit_22: (+1)
   \   00000250   0x....             LDR.N    R6,??DataTable1_15  ;; 0x40026010
   \   00000252   0x42B5             CMP      R5,R6
   \   00000254   0xBF08             IT       EQ 
   \   00000256   0x2508             MOVEQ    R5,#+8
   \   00000258   0xD00C             BEQ.N    ??HAL_DMA_DeInit_24
   \   0000025A   0x....             LDR.N    R6,??DataTable1_16  ;; 0x40026028
   \   0000025C   0x42B5             CMP      R5,R6
   \   0000025E   0xBF08             IT       EQ 
   \   00000260   0xF44F 0x7500      MOVEQ    R5,#+512
   \   00000264   0xD006             BEQ.N    ??HAL_DMA_DeInit_24
   \   00000266   0x....             LDR.N    R6,??DataTable1_17  ;; 0x40026040
   \   00000268   0x42B5             CMP      R5,R6
   \   0000026A   0xBF0C             ITE      EQ 
   \   0000026C   0xF44F 0x2500      MOVEQ    R5,#+524288
   \   00000270   0xF04F 0x7500      MOVNE    R5,#+33554432
   \                     ??HAL_DMA_DeInit_24: (+1)
   \   00000274   0x600D             STR      R5,[R1, #+0]
    348            __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_FE_FLAG_INDEX(hdma));
   \                     ??HAL_DMA_DeInit_19: (+1)
   \   00000276   0x6805             LDR      R5,[R0, #+0]
   \   00000278   0x42A5             CMP      R5,R4
   \   0000027A   0xD312             BCC.N    ??HAL_DMA_DeInit_25
   \   0000027C   0x429D             CMP      R5,R3
   \   0000027E   0xBF08             IT       EQ 
   \   00000280   0x....             LDREQ.N  R5,??DataTable1_18  ;; 0x800001
   \   00000282   0xD00B             BEQ.N    ??HAL_DMA_DeInit_26
   \   00000284   0x....             LDR.N    R6,??DataTable1_6  ;; 0x40026488
   \   00000286   0x42B5             CMP      R5,R6
   \   00000288   0xBF08             IT       EQ 
   \   0000028A   0x2540             MOVEQ    R5,#+64
   \   0000028C   0xD006             BEQ.N    ??HAL_DMA_DeInit_26
   \   0000028E   0x....             LDR.N    R6,??DataTable1_7  ;; 0x400264a0
   \   00000290   0x42B5             CMP      R5,R6
   \   00000292   0xBF0C             ITE      EQ 
   \   00000294   0xF44F 0x3580      MOVEQ    R5,#+65536
   \   00000298   0xF44F 0x0580      MOVNE    R5,#+4194304
   \                     ??HAL_DMA_DeInit_26: (+1)
   \   0000029C   0xF8C1 0x5404      STR      R5,[R1, #+1028]
   \   000002A0   0xE03D             B.N      ??HAL_DMA_DeInit_27
   \                     ??HAL_DMA_DeInit_25: (+1)
   \   000002A2   0x4295             CMP      R5,R2
   \   000002A4   0xD313             BCC.N    ??HAL_DMA_DeInit_28
   \   000002A6   0x....             LDR.N    R6,??DataTable1_8  ;; 0x40026410
   \   000002A8   0x42B5             CMP      R5,R6
   \   000002AA   0xBF08             IT       EQ 
   \   000002AC   0x....             LDREQ.N  R5,??DataTable1_18  ;; 0x800001
   \   000002AE   0xD00B             BEQ.N    ??HAL_DMA_DeInit_29
   \   000002B0   0x....             LDR.N    R6,??DataTable1_9  ;; 0x40026428
   \   000002B2   0x42B5             CMP      R5,R6
   \   000002B4   0xBF08             IT       EQ 
   \   000002B6   0x2540             MOVEQ    R5,#+64
   \   000002B8   0xD006             BEQ.N    ??HAL_DMA_DeInit_29
   \   000002BA   0x....             LDR.N    R6,??DataTable1_10  ;; 0x40026440
   \   000002BC   0x42B5             CMP      R5,R6
   \   000002BE   0xBF0C             ITE      EQ 
   \   000002C0   0xF44F 0x3580      MOVEQ    R5,#+65536
   \   000002C4   0xF44F 0x0580      MOVNE    R5,#+4194304
   \                     ??HAL_DMA_DeInit_29: (+1)
   \   000002C8   0xF8C1 0x5400      STR      R5,[R1, #+1024]
   \   000002CC   0xE027             B.N      ??HAL_DMA_DeInit_27
   \                     ??HAL_DMA_DeInit_28: (+1)
   \   000002CE   0x....             LDR.N    R6,??DataTable1_11  ;; 0x40026059
   \   000002D0   0x42B5             CMP      R5,R6
   \   000002D2   0xD312             BCC.N    ??HAL_DMA_DeInit_30
   \   000002D4   0x....             LDR.N    R6,??DataTable1_12  ;; 0x40026070
   \   000002D6   0x42B5             CMP      R5,R6
   \   000002D8   0xBF08             IT       EQ 
   \   000002DA   0x....             LDREQ.N  R5,??DataTable1_18  ;; 0x800001
   \   000002DC   0xD00B             BEQ.N    ??HAL_DMA_DeInit_31
   \   000002DE   0x....             LDR.N    R6,??DataTable1_13  ;; 0x40026088
   \   000002E0   0x42B5             CMP      R5,R6
   \   000002E2   0xBF08             IT       EQ 
   \   000002E4   0x2540             MOVEQ    R5,#+64
   \   000002E6   0xD006             BEQ.N    ??HAL_DMA_DeInit_31
   \   000002E8   0x....             LDR.N    R6,??DataTable1_14  ;; 0x400260a0
   \   000002EA   0x42B5             CMP      R5,R6
   \   000002EC   0xBF0C             ITE      EQ 
   \   000002EE   0xF44F 0x3580      MOVEQ    R5,#+65536
   \   000002F2   0xF44F 0x0580      MOVNE    R5,#+4194304
   \                     ??HAL_DMA_DeInit_31: (+1)
   \   000002F6   0x604D             STR      R5,[R1, #+4]
   \   000002F8   0xE011             B.N      ??HAL_DMA_DeInit_27
   \                     ??HAL_DMA_DeInit_30: (+1)
   \   000002FA   0x....             LDR.N    R6,??DataTable1_15  ;; 0x40026010
   \   000002FC   0x42B5             CMP      R5,R6
   \   000002FE   0xBF08             IT       EQ 
   \   00000300   0x....             LDREQ.N  R5,??DataTable1_18  ;; 0x800001
   \   00000302   0xD00B             BEQ.N    ??HAL_DMA_DeInit_32
   \   00000304   0x....             LDR.N    R6,??DataTable1_16  ;; 0x40026028
   \   00000306   0x42B5             CMP      R5,R6
   \   00000308   0xBF08             IT       EQ 
   \   0000030A   0x2540             MOVEQ    R5,#+64
   \   0000030C   0xD006             BEQ.N    ??HAL_DMA_DeInit_32
   \   0000030E   0x....             LDR.N    R6,??DataTable1_17  ;; 0x40026040
   \   00000310   0x42B5             CMP      R5,R6
   \   00000312   0xBF0C             ITE      EQ 
   \   00000314   0xF44F 0x3580      MOVEQ    R5,#+65536
   \   00000318   0xF44F 0x0580      MOVNE    R5,#+4194304
   \                     ??HAL_DMA_DeInit_32: (+1)
   \   0000031C   0x600D             STR      R5,[R1, #+0]
    349            __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
   \                     ??HAL_DMA_DeInit_27: (+1)
   \   0000031E   0x6805             LDR      R5,[R0, #+0]
   \   00000320   0x42A5             CMP      R5,R4
   \   00000322   0xD313             BCC.N    ??HAL_DMA_DeInit_33
   \   00000324   0x429D             CMP      R5,R3
   \   00000326   0xBF08             IT       EQ 
   \   00000328   0x2210             MOVEQ    R2,#+16
   \   0000032A   0xD00C             BEQ.N    ??HAL_DMA_DeInit_34
   \   0000032C   0x....             LDR.N    R2,??DataTable1_6  ;; 0x40026488
   \   0000032E   0x4295             CMP      R5,R2
   \   00000330   0xBF08             IT       EQ 
   \   00000332   0xF44F 0x6280      MOVEQ    R2,#+1024
   \   00000336   0xD006             BEQ.N    ??HAL_DMA_DeInit_34
   \   00000338   0x....             LDR.N    R2,??DataTable1_7  ;; 0x400264a0
   \   0000033A   0x4295             CMP      R5,R2
   \   0000033C   0xBF0C             ITE      EQ 
   \   0000033E   0xF44F 0x1280      MOVEQ    R2,#+1048576
   \   00000342   0xF04F 0x6280      MOVNE    R2,#+67108864
   \                     ??HAL_DMA_DeInit_34: (+1)
   \   00000346   0xF8C1 0x2404      STR      R2,[R1, #+1028]
   \   0000034A   0xE040             B.N      ??HAL_DMA_DeInit_35
   \                     ??HAL_DMA_DeInit_33: (+1)
   \   0000034C   0x4295             CMP      R5,R2
   \   0000034E   0xD314             BCC.N    ??HAL_DMA_DeInit_36
   \   00000350   0x....             LDR.N    R2,??DataTable1_8  ;; 0x40026410
   \   00000352   0x4295             CMP      R5,R2
   \   00000354   0xBF08             IT       EQ 
   \   00000356   0x2210             MOVEQ    R2,#+16
   \   00000358   0xD00C             BEQ.N    ??HAL_DMA_DeInit_37
   \   0000035A   0x....             LDR.N    R2,??DataTable1_9  ;; 0x40026428
   \   0000035C   0x4295             CMP      R5,R2
   \   0000035E   0xBF08             IT       EQ 
   \   00000360   0xF44F 0x6280      MOVEQ    R2,#+1024
   \   00000364   0xD006             BEQ.N    ??HAL_DMA_DeInit_37
   \   00000366   0x....             LDR.N    R2,??DataTable1_10  ;; 0x40026440
   \   00000368   0x4295             CMP      R5,R2
   \   0000036A   0xBF0C             ITE      EQ 
   \   0000036C   0xF44F 0x1280      MOVEQ    R2,#+1048576
   \   00000370   0xF04F 0x6280      MOVNE    R2,#+67108864
   \                     ??HAL_DMA_DeInit_37: (+1)
   \   00000374   0xF8C1 0x2400      STR      R2,[R1, #+1024]
   \   00000378   0xE029             B.N      ??HAL_DMA_DeInit_35
   \                     ??HAL_DMA_DeInit_36: (+1)
   \   0000037A   0x....             LDR.N    R2,??DataTable1_11  ;; 0x40026059
   \   0000037C   0x4295             CMP      R5,R2
   \   0000037E   0xD313             BCC.N    ??HAL_DMA_DeInit_38
   \   00000380   0x....             LDR.N    R2,??DataTable1_12  ;; 0x40026070
   \   00000382   0x4295             CMP      R5,R2
   \   00000384   0xBF08             IT       EQ 
   \   00000386   0x2210             MOVEQ    R2,#+16
   \   00000388   0xD00C             BEQ.N    ??HAL_DMA_DeInit_39
   \   0000038A   0x....             LDR.N    R2,??DataTable1_13  ;; 0x40026088
   \   0000038C   0x4295             CMP      R5,R2
   \   0000038E   0xBF08             IT       EQ 
   \   00000390   0xF44F 0x6280      MOVEQ    R2,#+1024
   \   00000394   0xD006             BEQ.N    ??HAL_DMA_DeInit_39
   \   00000396   0x....             LDR.N    R2,??DataTable1_14  ;; 0x400260a0
   \   00000398   0x4295             CMP      R5,R2
   \   0000039A   0xBF0C             ITE      EQ 
   \   0000039C   0xF44F 0x1280      MOVEQ    R2,#+1048576
   \   000003A0   0xF04F 0x6280      MOVNE    R2,#+67108864
   \                     ??HAL_DMA_DeInit_39: (+1)
   \   000003A4   0x604A             STR      R2,[R1, #+4]
   \   000003A6   0xE012             B.N      ??HAL_DMA_DeInit_35
   \                     ??HAL_DMA_DeInit_38: (+1)
   \   000003A8   0x....             LDR.N    R2,??DataTable1_15  ;; 0x40026010
   \   000003AA   0x4295             CMP      R5,R2
   \   000003AC   0xBF08             IT       EQ 
   \   000003AE   0x2210             MOVEQ    R2,#+16
   \   000003B0   0xD00C             BEQ.N    ??HAL_DMA_DeInit_40
   \   000003B2   0x....             LDR.N    R2,??DataTable1_16  ;; 0x40026028
   \   000003B4   0x4295             CMP      R5,R2
   \   000003B6   0xBF08             IT       EQ 
   \   000003B8   0xF44F 0x6280      MOVEQ    R2,#+1024
   \   000003BC   0xD006             BEQ.N    ??HAL_DMA_DeInit_40
   \   000003BE   0x....             LDR.N    R2,??DataTable1_17  ;; 0x40026040
   \   000003C0   0x4295             CMP      R5,R2
   \   000003C2   0xBF0C             ITE      EQ 
   \   000003C4   0xF44F 0x1280      MOVEQ    R2,#+1048576
   \   000003C8   0xF04F 0x6280      MOVNE    R2,#+67108864
   \                     ??HAL_DMA_DeInit_40: (+1)
   \   000003CC   0x600A             STR      R2,[R1, #+0]
    350          
    351            /* Initialize the error code */
    352            hdma->ErrorCode = HAL_DMA_ERROR_NONE;
   \                     ??HAL_DMA_DeInit_35: (+1)
   \   000003CE   0x2100             MOVS     R1,#+0
   \   000003D0   0x64C1             STR      R1,[R0, #+76]
    353          
    354            /* Initialize the DMA state */
    355            hdma->State = HAL_DMA_STATE_RESET;
   \   000003D2   0xF880 0x1035      STRB     R1,[R0, #+53]
    356          
    357            /* Release Lock */
    358            __HAL_UNLOCK(hdma);
   \   000003D6   0xF880 0x1034      STRB     R1,[R0, #+52]
    359          
    360            return HAL_OK;
   \   000003DA   0x2000             MOVS     R0,#+0
   \                     ??HAL_DMA_DeInit_0: (+1)
   \   000003DC   0xBC70             POP      {R4-R6}
   \   000003DE   0x4770             BX       LR               ;; return
    361          }
    362          
    363          /**
    364            * @}
    365            */
    366          
    367          /** @addtogroup DMA_Exported_Functions_Group2
    368            *
    369          @verbatim   
    370           ===============================================================================
    371                                #####  IO operation functions  #####
    372           ===============================================================================  
    373              [..]  This section provides functions allowing to:
    374                (+) Configure the source, destination address and data length and Start DMA transfer
    375                (+) Configure the source, destination address and data length and 
    376                    Start DMA transfer with interrupt
    377                (+) Abort DMA transfer
    378                (+) Poll for transfer complete
    379                (+) Handle DMA interrupt request  
    380          
    381          @endverbatim
    382            * @{
    383            */
    384          
    385          /**
    386            * @brief  Starts the DMA Transfer.
    387            * @param  hdma      : pointer to a DMA_HandleTypeDef structure that contains
    388            *                     the configuration information for the specified DMA Stream.  
    389            * @param  SrcAddress: The source memory Buffer address
    390            * @param  DstAddress: The destination memory Buffer address
    391            * @param  DataLength: The length of data to be transferred from source to destination
    392            * @retval HAL status
    393            */

   \                                 In section .text, align 2, keep-with-next
    394          HAL_StatusTypeDef HAL_DMA_Start(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
    395          {
   \                     HAL_DMA_Start: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
    396            /* Process locked */
    397            __HAL_LOCK(hdma);
   \   00000002   0xF890 0x4034      LDRB     R4,[R0, #+52]
   \   00000006   0x2C01             CMP      R4,#+1
   \   00000008   0xBF08             IT       EQ 
   \   0000000A   0x2002             MOVEQ    R0,#+2
   \   0000000C   0xD022             BEQ.N    ??HAL_DMA_Start_0
   \   0000000E   0x2401             MOVS     R4,#+1
   \   00000010   0xF880 0x4034      STRB     R4,[R0, #+52]
    398          
    399            /* Change DMA peripheral state */
    400            hdma->State = HAL_DMA_STATE_BUSY;
   \   00000014   0x2402             MOVS     R4,#+2
   \   00000016   0xF880 0x4035      STRB     R4,[R0, #+53]
    401          
    402             /* Check the parameters */
    403            assert_param(IS_DMA_BUFFER_SIZE(DataLength));
    404          
    405            /* Disable the peripheral */
    406            __HAL_DMA_DISABLE(hdma);
   \   0000001A   0x6804             LDR      R4,[R0, #+0]
   \   0000001C   0x6825             LDR      R5,[R4, #+0]
   \   0000001E   0x086D             LSRS     R5,R5,#+1
   \   00000020   0x006D             LSLS     R5,R5,#+1
   \   00000022   0x6025             STR      R5,[R4, #+0]
    407          
    408            /* Configure the source, destination address and the data length */
    409            DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
   \   00000024   0x6804             LDR      R4,[R0, #+0]
   \   00000026   0x6825             LDR      R5,[R4, #+0]
   \   00000028   0xF425 0x2580      BIC      R5,R5,#0x40000
   \   0000002C   0x6025             STR      R5,[R4, #+0]
   \   0000002E   0x6804             LDR      R4,[R0, #+0]
   \   00000030   0x6063             STR      R3,[R4, #+4]
   \   00000032   0x6883             LDR      R3,[R0, #+8]
   \   00000034   0x2B40             CMP      R3,#+64
   \   00000036   0x6803             LDR      R3,[R0, #+0]
   \   00000038   0xD103             BNE.N    ??HAL_DMA_Start_1
   \   0000003A   0x609A             STR      R2,[R3, #+8]
   \   0000003C   0x6802             LDR      R2,[R0, #+0]
   \   0000003E   0x60D1             STR      R1,[R2, #+12]
   \   00000040   0xE002             B.N      ??HAL_DMA_Start_2
   \                     ??HAL_DMA_Start_1: (+1)
   \   00000042   0x6099             STR      R1,[R3, #+8]
   \   00000044   0x6801             LDR      R1,[R0, #+0]
   \   00000046   0x60CA             STR      R2,[R1, #+12]
    410          
    411            /* Enable the Peripheral */
    412            __HAL_DMA_ENABLE(hdma);
   \                     ??HAL_DMA_Start_2: (+1)
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0x6801             LDR      R1,[R0, #+0]
   \   0000004C   0xF041 0x0101      ORR      R1,R1,#0x1
   \   00000050   0x6001             STR      R1,[R0, #+0]
    413          
    414            return HAL_OK; 
   \   00000052   0x2000             MOVS     R0,#+0
   \                     ??HAL_DMA_Start_0: (+1)
   \   00000054   0xBC30             POP      {R4,R5}
   \   00000056   0x4770             BX       LR               ;; return
    415          }
    416          
    417          /**
    418            * @brief  Start the DMA Transfer with interrupt enabled.
    419            * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
    420            *                     the configuration information for the specified DMA Stream.  
    421            * @param  SrcAddress: The source memory Buffer address
    422            * @param  DstAddress: The destination memory Buffer address
    423            * @param  DataLength: The length of data to be transferred from source to destination
    424            * @retval HAL status
    425            */

   \                                 In section .text, align 2, keep-with-next
    426          HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
    427          {
   \                     HAL_DMA_Start_IT: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
    428            /* Process locked */
    429            __HAL_LOCK(hdma);
   \   00000002   0xF890 0x4034      LDRB     R4,[R0, #+52]
   \   00000006   0x2C01             CMP      R4,#+1
   \   00000008   0xBF08             IT       EQ 
   \   0000000A   0x2002             MOVEQ    R0,#+2
   \   0000000C   0xD03B             BEQ.N    ??HAL_DMA_Start_IT_0
   \   0000000E   0x2401             MOVS     R4,#+1
   \   00000010   0xF880 0x4034      STRB     R4,[R0, #+52]
    430          
    431            /* Change DMA peripheral state */
    432            hdma->State = HAL_DMA_STATE_BUSY;
   \   00000014   0x2402             MOVS     R4,#+2
   \   00000016   0xF880 0x4035      STRB     R4,[R0, #+53]
    433          
    434             /* Check the parameters */
    435            assert_param(IS_DMA_BUFFER_SIZE(DataLength));
    436          
    437            /* Disable the peripheral */
    438            __HAL_DMA_DISABLE(hdma);
   \   0000001A   0x6804             LDR      R4,[R0, #+0]
   \   0000001C   0x6825             LDR      R5,[R4, #+0]
   \   0000001E   0x086D             LSRS     R5,R5,#+1
   \   00000020   0x006D             LSLS     R5,R5,#+1
   \   00000022   0x6025             STR      R5,[R4, #+0]
    439          
    440            /* Configure the source, destination address and the data length */
    441            DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
   \   00000024   0x6804             LDR      R4,[R0, #+0]
   \   00000026   0x6825             LDR      R5,[R4, #+0]
   \   00000028   0xF425 0x2580      BIC      R5,R5,#0x40000
   \   0000002C   0x6025             STR      R5,[R4, #+0]
   \   0000002E   0x6804             LDR      R4,[R0, #+0]
   \   00000030   0x6063             STR      R3,[R4, #+4]
   \   00000032   0x6883             LDR      R3,[R0, #+8]
   \   00000034   0x2B40             CMP      R3,#+64
   \   00000036   0x6803             LDR      R3,[R0, #+0]
   \   00000038   0xD103             BNE.N    ??HAL_DMA_Start_IT_1
   \   0000003A   0x609A             STR      R2,[R3, #+8]
   \   0000003C   0x6802             LDR      R2,[R0, #+0]
   \   0000003E   0x60D1             STR      R1,[R2, #+12]
   \   00000040   0xE002             B.N      ??HAL_DMA_Start_IT_2
   \                     ??HAL_DMA_Start_IT_1: (+1)
   \   00000042   0x6099             STR      R1,[R3, #+8]
   \   00000044   0x6801             LDR      R1,[R0, #+0]
   \   00000046   0x60CA             STR      R2,[R1, #+12]
    442          
    443            /* Enable the transfer complete interrupt */
    444            __HAL_DMA_ENABLE_IT(hdma, DMA_IT_TC);
   \                     ??HAL_DMA_Start_IT_2: (+1)
   \   00000048   0x6801             LDR      R1,[R0, #+0]
   \   0000004A   0x680A             LDR      R2,[R1, #+0]
   \   0000004C   0xF042 0x0210      ORR      R2,R2,#0x10
   \   00000050   0x600A             STR      R2,[R1, #+0]
    445          
    446            /* Enable the Half transfer complete interrupt */
    447            __HAL_DMA_ENABLE_IT(hdma, DMA_IT_HT);  
   \   00000052   0x6801             LDR      R1,[R0, #+0]
   \   00000054   0x680A             LDR      R2,[R1, #+0]
   \   00000056   0xF042 0x0208      ORR      R2,R2,#0x8
   \   0000005A   0x600A             STR      R2,[R1, #+0]
    448          
    449            /* Enable the transfer Error interrupt */
    450            __HAL_DMA_ENABLE_IT(hdma, DMA_IT_TE);
   \   0000005C   0x6801             LDR      R1,[R0, #+0]
   \   0000005E   0x680A             LDR      R2,[R1, #+0]
   \   00000060   0xF042 0x0204      ORR      R2,R2,#0x4
   \   00000064   0x600A             STR      R2,[R1, #+0]
    451          
    452            /* Enable the FIFO Error interrupt */
    453            __HAL_DMA_ENABLE_IT(hdma, DMA_IT_FE);
   \   00000066   0x6801             LDR      R1,[R0, #+0]
   \   00000068   0x694A             LDR      R2,[R1, #+20]
   \   0000006A   0xF042 0x0280      ORR      R2,R2,#0x80
   \   0000006E   0x614A             STR      R2,[R1, #+20]
    454          
    455            /* Enable the direct mode Error interrupt */
    456            __HAL_DMA_ENABLE_IT(hdma, DMA_IT_DME);
   \   00000070   0x6801             LDR      R1,[R0, #+0]
   \   00000072   0x680A             LDR      R2,[R1, #+0]
   \   00000074   0xF042 0x0202      ORR      R2,R2,#0x2
   \   00000078   0x600A             STR      R2,[R1, #+0]
    457          
    458             /* Enable the Peripheral */
    459            __HAL_DMA_ENABLE(hdma);
   \   0000007A   0x6800             LDR      R0,[R0, #+0]
   \   0000007C   0x6801             LDR      R1,[R0, #+0]
   \   0000007E   0xF041 0x0101      ORR      R1,R1,#0x1
   \   00000082   0x6001             STR      R1,[R0, #+0]
    460          
    461            return HAL_OK;
   \   00000084   0x2000             MOVS     R0,#+0
   \                     ??HAL_DMA_Start_IT_0: (+1)
   \   00000086   0xBC30             POP      {R4,R5}
   \   00000088   0x4770             BX       LR               ;; return
    462          } 
    463          
    464          /**
    465            * @brief  Aborts the DMA Transfer.
    466            * @param  hdma  : pointer to a DMA_HandleTypeDef structure that contains
    467            *                 the configuration information for the specified DMA Stream.
    468            *                   
    469            * @note  After disabling a DMA Stream, a check for wait until the DMA Stream is 
    470            *        effectively disabled is added. If a Stream is disabled 
    471            *        while a data transfer is ongoing, the current data will be transferred
    472            *        and the Stream will be effectively disabled only after the transfer of
    473            *        this single data is finished.  
    474            * @retval HAL status
    475            */

   \                                 In section .text, align 2, keep-with-next
    476          HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
    477          {
   \                     HAL_DMA_Abort: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
    478            uint32_t tickstart = 0;
    479          
    480            /* Disable the stream */
    481            __HAL_DMA_DISABLE(hdma);
   \   00000004   0xF240 0x36E9      MOVW     R6,#+1001
   \   00000008   0x6820             LDR      R0,[R4, #+0]
   \   0000000A   0x6801             LDR      R1,[R0, #+0]
   \   0000000C   0x0849             LSRS     R1,R1,#+1
   \   0000000E   0x0049             LSLS     R1,R1,#+1
   \   00000010   0x6001             STR      R1,[R0, #+0]
    482          
    483            /* Get tick */
    484            tickstart = HAL_GetTick();
   \   00000012   0x.... 0x....      BL       HAL_GetTick
   \   00000016   0x4605             MOV      R5,R0
    485          
    486            /* Check if the DMA Stream is effectively disabled */
    487            while((hdma->Instance->CR & DMA_SxCR_EN) != 0)
   \                     ??HAL_DMA_Abort_0: (+1)
   \   00000018   0x6820             LDR      R0,[R4, #+0]
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0x07C0             LSLS     R0,R0,#+31
   \   0000001E   0xD50F             BPL.N    ??HAL_DMA_Abort_1
    488            {
    489              /* Check for the Timeout */
    490              if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
   \   00000020   0x.... 0x....      BL       HAL_GetTick
   \   00000024   0x1B40             SUBS     R0,R0,R5
   \   00000026   0x42B0             CMP      R0,R6
   \   00000028   0xD3F6             BCC.N    ??HAL_DMA_Abort_0
    491              {
    492                /* Update error code */
    493                hdma->ErrorCode |= HAL_DMA_ERROR_TIMEOUT;
   \   0000002A   0x6CE0             LDR      R0,[R4, #+76]
   \   0000002C   0xF040 0x0020      ORR      R0,R0,#0x20
   \   00000030   0x64E0             STR      R0,[R4, #+76]
    494                
    495                /* Process Unlocked */
    496                __HAL_UNLOCK(hdma);
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0xF884 0x0034      STRB     R0,[R4, #+52]
    497                
    498                /* Change the DMA state */
    499                hdma->State = HAL_DMA_STATE_TIMEOUT;
   \   00000038   0x2003             MOVS     R0,#+3
   \   0000003A   0xF884 0x0035      STRB     R0,[R4, #+53]
    500                
    501                return HAL_TIMEOUT;
   \   0000003E   0xBD70             POP      {R4-R6,PC}
    502              }
    503            }
    504            /* Process Unlocked */
    505            __HAL_UNLOCK(hdma);
   \                     ??HAL_DMA_Abort_1: (+1)
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0xF884 0x0034      STRB     R0,[R4, #+52]
    506          
    507            /* Change the DMA state*/
    508            hdma->State = HAL_DMA_STATE_READY;
   \   00000046   0x2001             MOVS     R0,#+1
   \   00000048   0xF884 0x0035      STRB     R0,[R4, #+53]
    509          
    510            return HAL_OK;
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0xBD70             POP      {R4-R6,PC}       ;; return
    511          }
    512          
    513          /**
    514            * @brief  Polling for transfer complete.
    515            * @param  hdma:          pointer to a DMA_HandleTypeDef structure that contains
    516            *                        the configuration information for the specified DMA Stream.
    517            * @param  CompleteLevel: Specifies the DMA level complete.  
    518            * @param  Timeout:       Timeout duration.
    519            * @retval HAL status
    520            */

   \                                 In section .text, align 2, keep-with-next
    521          HAL_StatusTypeDef HAL_DMA_PollForTransfer(DMA_HandleTypeDef *hdma, uint32_t CompleteLevel, uint32_t Timeout)
    522          {
   \                     HAL_DMA_PollForTransfer: (+1)
   \   00000000   0xE92D 0x4FF6      PUSH     {R1,R2,R4-R11,LR}
   \   00000004   0x4604             MOV      R4,R0
    523            uint32_t temp, tmp, tmp1, tmp2;
    524            uint32_t tickstart = 0; 
    525          
    526            /* Get the level transfer complete flag */
    527            if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
   \   00000006   0x2900             CMP      R1,#+0
   \   00000008   0xB081             SUB      SP,SP,#+4
   \   0000000A   0x.... 0x....      LDR.W    R9,??DataTable2  ;; 0x40026010
   \   0000000E   0x6820             LDR      R0,[R4, #+0]
   \   00000010   0xD138             BNE.N    ??HAL_DMA_PollForTransfer_0
    528            {
    529              /* Transfer Complete flag */
    530              temp = __HAL_DMA_GET_TC_FLAG_INDEX(hdma);
   \   00000012   0x4548             CMP      R0,R9
   \   00000014   0xBF1C             ITT      NE 
   \   00000016   0x.... 0x....      LDRNE.W  R1,??DataTable2_1  ;; 0x40026410
   \   0000001A   0x4288             CMPNE    R0,R1
   \   0000001C   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_1
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable2_2  ;; 0x40026070
   \   00000022   0x4288             CMP      R0,R1
   \   00000024   0xBF1C             ITT      NE 
   \   00000026   0x.... 0x....      LDRNE.W  R1,??DataTable2_3  ;; 0x40026470
   \   0000002A   0x4288             CMPNE    R0,R1
   \   0000002C   0xD101             BNE.N    ??HAL_DMA_PollForTransfer_2
   \                     ??HAL_DMA_PollForTransfer_1: (+1)
   \   0000002E   0x2620             MOVS     R6,#+32
   \   00000030   0xE060             B.N      ??HAL_DMA_PollForTransfer_3
   \                     ??HAL_DMA_PollForTransfer_2: (+1)
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable2_4  ;; 0x40026028
   \   00000036   0x4288             CMP      R0,R1
   \   00000038   0xBF1C             ITT      NE 
   \   0000003A   0x.... 0x....      LDRNE.W  R1,??DataTable2_5  ;; 0x40026428
   \   0000003E   0x4288             CMPNE    R0,R1
   \   00000040   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_4
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable2_6  ;; 0x40026088
   \   00000046   0x4288             CMP      R0,R1
   \   00000048   0xBF1C             ITT      NE 
   \   0000004A   0x.... 0x....      LDRNE.W  R1,??DataTable2_7  ;; 0x40026488
   \   0000004E   0x4288             CMPNE    R0,R1
   \   00000050   0xD102             BNE.N    ??HAL_DMA_PollForTransfer_5
   \                     ??HAL_DMA_PollForTransfer_4: (+1)
   \   00000052   0xF44F 0x6600      MOV      R6,#+2048
   \   00000056   0xE04D             B.N      ??HAL_DMA_PollForTransfer_3
   \                     ??HAL_DMA_PollForTransfer_5: (+1)
   \   00000058   0x.... 0x....      LDR.W    R1,??DataTable2_8  ;; 0x40026040
   \   0000005C   0x4288             CMP      R0,R1
   \   0000005E   0xBF1C             ITT      NE 
   \   00000060   0x.... 0x....      LDRNE.W  R1,??DataTable2_9  ;; 0x40026440
   \   00000064   0x4288             CMPNE    R0,R1
   \   00000066   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_6
   \   00000068   0x.... 0x....      LDR.W    R1,??DataTable2_10  ;; 0x400260a0
   \   0000006C   0x4288             CMP      R0,R1
   \   0000006E   0xBF1C             ITT      NE 
   \   00000070   0x.... 0x....      LDRNE.W  R1,??DataTable2_11  ;; 0x400264a0
   \   00000074   0x4288             CMPNE    R0,R1
   \   00000076   0xD102             BNE.N    ??HAL_DMA_PollForTransfer_7
   \                     ??HAL_DMA_PollForTransfer_6: (+1)
   \   00000078   0xF44F 0x1600      MOV      R6,#+2097152
   \   0000007C   0xE03A             B.N      ??HAL_DMA_PollForTransfer_3
   \                     ??HAL_DMA_PollForTransfer_7: (+1)
   \   0000007E   0xF04F 0x6600      MOV      R6,#+134217728
   \   00000082   0xE037             B.N      ??HAL_DMA_PollForTransfer_3
    531            }
    532            else
    533            {
    534              /* Half Transfer Complete flag */
    535              temp = __HAL_DMA_GET_HT_FLAG_INDEX(hdma);
   \                     ??HAL_DMA_PollForTransfer_0: (+1)
   \   00000084   0x4548             CMP      R0,R9
   \   00000086   0xBF1C             ITT      NE 
   \   00000088   0x.... 0x....      LDRNE.W  R1,??DataTable2_1  ;; 0x40026410
   \   0000008C   0x4288             CMPNE    R0,R1
   \   0000008E   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_8
   \   00000090   0x.... 0x....      LDR.W    R1,??DataTable2_2  ;; 0x40026070
   \   00000094   0x4288             CMP      R0,R1
   \   00000096   0xBF1C             ITT      NE 
   \   00000098   0x.... 0x....      LDRNE.W  R1,??DataTable2_3  ;; 0x40026470
   \   0000009C   0x4288             CMPNE    R0,R1
   \   0000009E   0xD101             BNE.N    ??HAL_DMA_PollForTransfer_9
   \                     ??HAL_DMA_PollForTransfer_8: (+1)
   \   000000A0   0x2610             MOVS     R6,#+16
   \   000000A2   0xE027             B.N      ??HAL_DMA_PollForTransfer_3
   \                     ??HAL_DMA_PollForTransfer_9: (+1)
   \   000000A4   0x.... 0x....      LDR.W    R1,??DataTable2_4  ;; 0x40026028
   \   000000A8   0x4288             CMP      R0,R1
   \   000000AA   0xBF1C             ITT      NE 
   \   000000AC   0x.... 0x....      LDRNE.W  R1,??DataTable2_5  ;; 0x40026428
   \   000000B0   0x4288             CMPNE    R0,R1
   \   000000B2   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_10
   \   000000B4   0x.... 0x....      LDR.W    R1,??DataTable2_6  ;; 0x40026088
   \   000000B8   0x4288             CMP      R0,R1
   \   000000BA   0xBF1C             ITT      NE 
   \   000000BC   0x.... 0x....      LDRNE.W  R1,??DataTable2_7  ;; 0x40026488
   \   000000C0   0x4288             CMPNE    R0,R1
   \   000000C2   0xD102             BNE.N    ??HAL_DMA_PollForTransfer_11
   \                     ??HAL_DMA_PollForTransfer_10: (+1)
   \   000000C4   0xF44F 0x6680      MOV      R6,#+1024
   \   000000C8   0xE014             B.N      ??HAL_DMA_PollForTransfer_3
   \                     ??HAL_DMA_PollForTransfer_11: (+1)
   \   000000CA   0x.... 0x....      LDR.W    R1,??DataTable2_8  ;; 0x40026040
   \   000000CE   0x4288             CMP      R0,R1
   \   000000D0   0xBF1C             ITT      NE 
   \   000000D2   0x.... 0x....      LDRNE.W  R1,??DataTable2_9  ;; 0x40026440
   \   000000D6   0x4288             CMPNE    R0,R1
   \   000000D8   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_12
   \   000000DA   0x.... 0x....      LDR.W    R1,??DataTable2_10  ;; 0x400260a0
   \   000000DE   0x4288             CMP      R0,R1
   \   000000E0   0xBF1C             ITT      NE 
   \   000000E2   0x.... 0x....      LDRNE.W  R1,??DataTable2_11  ;; 0x400264a0
   \   000000E6   0x4288             CMPNE    R0,R1
   \   000000E8   0xD102             BNE.N    ??HAL_DMA_PollForTransfer_13
   \                     ??HAL_DMA_PollForTransfer_12: (+1)
   \   000000EA   0xF44F 0x1680      MOV      R6,#+1048576
   \   000000EE   0xE001             B.N      ??HAL_DMA_PollForTransfer_3
   \                     ??HAL_DMA_PollForTransfer_13: (+1)
   \   000000F0   0xF04F 0x6680      MOV      R6,#+67108864
    536            }
    537          
    538            /* Get tick */
    539            tickstart = HAL_GetTick();
   \                     ??HAL_DMA_PollForTransfer_3: (+1)
   \   000000F4   0x.... 0x....      BL       HAL_GetTick
   \   000000F8   0x9000             STR      R0,[SP, #+0]
   \   000000FA   0xF44F 0x7A80      MOV      R10,#+256
   \   000000FE   0x.... 0x....      LDR.W    R8,??DataTable2_12  ;; 0x800004
   \   00000102   0x.... 0x....      LDR.W    R5,??DataTable2_13  ;; 0x800001
   \   00000106   0x.... 0x....      LDR.W    R7,??DataTable2_14  ;; 0x40026000
   \   0000010A   0x.... 0x....      LDR.W    R11,??DataTable2_15  ;; 0x40026459
    540          
    541            while(__HAL_DMA_GET_FLAG(hdma, temp) == RESET)
   \                     ??HAL_DMA_PollForTransfer_14: (+1)
   \   0000010E   0x6821             LDR      R1,[R4, #+0]
   \   00000110   0x4608             MOV      R0,R1
   \   00000112   0x4558             CMP      R0,R11
   \   00000114   0xBF28             IT       CS 
   \   00000116   0xF8D7 0x2404      LDRCS    R2,[R7, #+1028]
   \   0000011A   0xD20C             BCS.N    ??HAL_DMA_PollForTransfer_15
   \   0000011C   0x.... 0x....      LDR.W    R2,??DataTable2_16  ;; 0x400260b9
   \   00000120   0x4290             CMP      R0,R2
   \   00000122   0xBF28             IT       CS 
   \   00000124   0xF8D7 0x2400      LDRCS    R2,[R7, #+1024]
   \   00000128   0xD205             BCS.N    ??HAL_DMA_PollForTransfer_15
   \   0000012A   0x.... 0x....      LDR.W    R2,??DataTable2_17  ;; 0x40026059
   \   0000012E   0x4290             CMP      R0,R2
   \   00000130   0xBF2C             ITE      CS 
   \   00000132   0x687A             LDRCS    R2,[R7, #+4]
   \   00000134   0x683A             LDRCC    R2,[R7, #+0]
   \                     ??HAL_DMA_PollForTransfer_15: (+1)
   \   00000136   0x4032             ANDS     R2,R6,R2
   \   00000138   0xF040 0x823A      BNE.W    ??HAL_DMA_PollForTransfer_16
    542            {
    543              tmp  = __HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_TE_FLAG_INDEX(hdma));
   \   0000013C   0x4558             CMP      R0,R11
   \   0000013E   0xD336             BCC.N    ??HAL_DMA_PollForTransfer_17
   \   00000140   0x.... 0x....      LDR.W    R2,??DataTable2_3  ;; 0x40026470
   \   00000144   0xF8D7 0x1404      LDR      R1,[R7, #+1028]
   \   00000148   0x4290             CMP      R0,R2
   \   0000014A   0xD108             BNE.N    ??HAL_DMA_PollForTransfer_18
   \   0000014C   0xF8D7 0x2404      LDR      R2,[R7, #+1028]
   \   00000150   0xF001 0x0108      AND      R1,R1,#0x8
   \   00000154   0xF8D7 0x3404      LDR      R3,[R7, #+1028]
   \   00000158   0x46C4             MOV      R12,R8
   \   0000015A   0x402A             ANDS     R2,R5,R2
   \   0000015C   0xE0BF             B.N      ??HAL_DMA_PollForTransfer_19
   \                     ??HAL_DMA_PollForTransfer_18: (+1)
   \   0000015E   0x.... 0x....      LDR.W    R2,??DataTable2_7  ;; 0x40026488
   \   00000162   0x4290             CMP      R0,R2
   \   00000164   0xD109             BNE.N    ??HAL_DMA_PollForTransfer_20
   \   00000166   0xF8D7 0x2404      LDR      R2,[R7, #+1028]
   \   0000016A   0xF401 0x7100      AND      R1,R1,#0x200
   \   0000016E   0xF8D7 0x3404      LDR      R3,[R7, #+1028]
   \   00000172   0x46D4             MOV      R12,R10
   \   00000174   0xF002 0x0240      AND      R2,R2,#0x40
   \   00000178   0xE0B1             B.N      ??HAL_DMA_PollForTransfer_19
   \                     ??HAL_DMA_PollForTransfer_20: (+1)
   \   0000017A   0x.... 0x....      LDR.W    R2,??DataTable2_11  ;; 0x400264a0
   \   0000017E   0x4290             CMP      R0,R2
   \   00000180   0xD10A             BNE.N    ??HAL_DMA_PollForTransfer_21
   \   00000182   0xF8D7 0x2404      LDR      R2,[R7, #+1028]
   \   00000186   0xF401 0x2100      AND      R1,R1,#0x80000
   \   0000018A   0xF8D7 0x3404      LDR      R3,[R7, #+1028]
   \   0000018E   0xF44F 0x2C80      MOV      R12,#+262144
   \   00000192   0xF402 0x3280      AND      R2,R2,#0x10000
   \   00000196   0xE0A2             B.N      ??HAL_DMA_PollForTransfer_19
   \                     ??HAL_DMA_PollForTransfer_21: (+1)
   \   00000198   0xF8D7 0x2404      LDR      R2,[R7, #+1028]
   \   0000019C   0xF001 0x7100      AND      R1,R1,#0x2000000
   \   000001A0   0xF8D7 0x3404      LDR      R3,[R7, #+1028]
   \   000001A4   0xF04F 0x7C80      MOV      R12,#+16777216
   \   000001A8   0xF402 0x0280      AND      R2,R2,#0x400000
   \   000001AC   0xE097             B.N      ??HAL_DMA_PollForTransfer_19
   \                     ??HAL_DMA_PollForTransfer_17: (+1)
   \   000001AE   0x.... 0x....      LDR.W    R1,??DataTable2_16  ;; 0x400260b9
   \   000001B2   0x4288             CMP      R0,R1
   \   000001B4   0xD336             BCC.N    ??HAL_DMA_PollForTransfer_22
   \   000001B6   0x.... 0x....      LDR.W    R2,??DataTable2_1  ;; 0x40026410
   \   000001BA   0xF8D7 0x1400      LDR      R1,[R7, #+1024]
   \   000001BE   0x4290             CMP      R0,R2
   \   000001C0   0xD108             BNE.N    ??HAL_DMA_PollForTransfer_23
   \   000001C2   0xF8D7 0x2400      LDR      R2,[R7, #+1024]
   \   000001C6   0xF001 0x0108      AND      R1,R1,#0x8
   \   000001CA   0xF8D7 0x3400      LDR      R3,[R7, #+1024]
   \   000001CE   0x46C4             MOV      R12,R8
   \   000001D0   0x402A             ANDS     R2,R5,R2
   \   000001D2   0xE084             B.N      ??HAL_DMA_PollForTransfer_19
   \                     ??HAL_DMA_PollForTransfer_23: (+1)
   \   000001D4   0x.... 0x....      LDR.W    R2,??DataTable2_5  ;; 0x40026428
   \   000001D8   0x4290             CMP      R0,R2
   \   000001DA   0xD109             BNE.N    ??HAL_DMA_PollForTransfer_24
   \   000001DC   0xF8D7 0x2400      LDR      R2,[R7, #+1024]
   \   000001E0   0xF401 0x7100      AND      R1,R1,#0x200
   \   000001E4   0xF8D7 0x3400      LDR      R3,[R7, #+1024]
   \   000001E8   0x46D4             MOV      R12,R10
   \   000001EA   0xF002 0x0240      AND      R2,R2,#0x40
   \   000001EE   0xE076             B.N      ??HAL_DMA_PollForTransfer_19
   \                     ??HAL_DMA_PollForTransfer_24: (+1)
   \   000001F0   0x.... 0x....      LDR.W    R2,??DataTable2_9  ;; 0x40026440
   \   000001F4   0x4290             CMP      R0,R2
   \   000001F6   0xD00A             BEQ.N    ??HAL_DMA_PollForTransfer_25
   \   000001F8   0xF8D7 0x2400      LDR      R2,[R7, #+1024]
   \   000001FC   0xF001 0x7100      AND      R1,R1,#0x2000000
   \   00000200   0xF8D7 0x3400      LDR      R3,[R7, #+1024]
   \   00000204   0xF04F 0x7C80      MOV      R12,#+16777216
   \   00000208   0xF402 0x0280      AND      R2,R2,#0x400000
   \   0000020C   0xE067             B.N      ??HAL_DMA_PollForTransfer_19
   \                     ??HAL_DMA_PollForTransfer_25: (+1)
   \   0000020E   0xF8D7 0x2400      LDR      R2,[R7, #+1024]
   \   00000212   0xF401 0x2100      AND      R1,R1,#0x80000
   \   00000216   0xF8D7 0x3400      LDR      R3,[R7, #+1024]
   \   0000021A   0xF44F 0x2C80      MOV      R12,#+262144
   \   0000021E   0xF402 0x3280      AND      R2,R2,#0x10000
   \   00000222   0xE05C             B.N      ??HAL_DMA_PollForTransfer_19
   \                     ??HAL_DMA_PollForTransfer_22: (+1)
   \   00000224   0x.... 0x....      LDR.W    R1,??DataTable2_17  ;; 0x40026059
   \   00000228   0x4288             CMP      R0,R1
   \   0000022A   0xD32D             BCC.N    ??HAL_DMA_PollForTransfer_26
   \   0000022C   0x.... 0x....      LDR.W    R2,??DataTable2_2  ;; 0x40026070
   \   00000230   0x6879             LDR      R1,[R7, #+4]
   \   00000232   0x4290             CMP      R0,R2
   \   00000234   0xD106             BNE.N    ??HAL_DMA_PollForTransfer_27
   \   00000236   0x687A             LDR      R2,[R7, #+4]
   \   00000238   0xF001 0x0108      AND      R1,R1,#0x8
   \   0000023C   0x687B             LDR      R3,[R7, #+4]
   \   0000023E   0x46C4             MOV      R12,R8
   \   00000240   0x402A             ANDS     R2,R5,R2
   \   00000242   0xE04C             B.N      ??HAL_DMA_PollForTransfer_19
   \                     ??HAL_DMA_PollForTransfer_27: (+1)
   \   00000244   0x.... 0x....      LDR.W    R2,??DataTable2_6  ;; 0x40026088
   \   00000248   0x4290             CMP      R0,R2
   \   0000024A   0xD107             BNE.N    ??HAL_DMA_PollForTransfer_28
   \   0000024C   0x687A             LDR      R2,[R7, #+4]
   \   0000024E   0xF401 0x7100      AND      R1,R1,#0x200
   \   00000252   0x687B             LDR      R3,[R7, #+4]
   \   00000254   0x46D4             MOV      R12,R10
   \   00000256   0xF002 0x0240      AND      R2,R2,#0x40
   \   0000025A   0xE040             B.N      ??HAL_DMA_PollForTransfer_19
   \                     ??HAL_DMA_PollForTransfer_28: (+1)
   \   0000025C   0x.... 0x....      LDR.W    R2,??DataTable2_10  ;; 0x400260a0
   \   00000260   0x4290             CMP      R0,R2
   \   00000262   0xD008             BEQ.N    ??HAL_DMA_PollForTransfer_29
   \   00000264   0x687A             LDR      R2,[R7, #+4]
   \   00000266   0xF001 0x7100      AND      R1,R1,#0x2000000
   \   0000026A   0x687B             LDR      R3,[R7, #+4]
   \   0000026C   0xF04F 0x7C80      MOV      R12,#+16777216
   \   00000270   0xF402 0x0280      AND      R2,R2,#0x400000
   \   00000274   0xE033             B.N      ??HAL_DMA_PollForTransfer_19
   \                     ??HAL_DMA_PollForTransfer_29: (+1)
   \   00000276   0x687A             LDR      R2,[R7, #+4]
   \   00000278   0xF401 0x2100      AND      R1,R1,#0x80000
   \   0000027C   0x687B             LDR      R3,[R7, #+4]
   \   0000027E   0xF44F 0x2C80      MOV      R12,#+262144
   \   00000282   0xF402 0x3280      AND      R2,R2,#0x10000
   \   00000286   0xE02A             B.N      ??HAL_DMA_PollForTransfer_19
   \                     ??HAL_DMA_PollForTransfer_26: (+1)
   \   00000288   0x4548             CMP      R0,R9
   \   0000028A   0x6839             LDR      R1,[R7, #+0]
   \   0000028C   0xD106             BNE.N    ??HAL_DMA_PollForTransfer_30
   \   0000028E   0x683A             LDR      R2,[R7, #+0]
   \   00000290   0xF001 0x0108      AND      R1,R1,#0x8
   \   00000294   0x683B             LDR      R3,[R7, #+0]
   \   00000296   0x46C4             MOV      R12,R8
   \   00000298   0x402A             ANDS     R2,R5,R2
   \   0000029A   0xE020             B.N      ??HAL_DMA_PollForTransfer_19
   \                     ??HAL_DMA_PollForTransfer_30: (+1)
   \   0000029C   0x.... 0x....      LDR.W    R2,??DataTable2_4  ;; 0x40026028
   \   000002A0   0x4290             CMP      R0,R2
   \   000002A2   0xD107             BNE.N    ??HAL_DMA_PollForTransfer_31
   \   000002A4   0x683A             LDR      R2,[R7, #+0]
   \   000002A6   0xF401 0x7100      AND      R1,R1,#0x200
   \   000002AA   0x683B             LDR      R3,[R7, #+0]
   \   000002AC   0x46D4             MOV      R12,R10
   \   000002AE   0xF002 0x0240      AND      R2,R2,#0x40
   \   000002B2   0xE014             B.N      ??HAL_DMA_PollForTransfer_19
   \                     ??HAL_DMA_PollForTransfer_31: (+1)
   \   000002B4   0x.... 0x....      LDR.W    R2,??DataTable2_8  ;; 0x40026040
   \   000002B8   0x4290             CMP      R0,R2
   \   000002BA   0xD008             BEQ.N    ??HAL_DMA_PollForTransfer_32
   \   000002BC   0x683A             LDR      R2,[R7, #+0]
   \   000002BE   0xF001 0x7100      AND      R1,R1,#0x2000000
   \   000002C2   0x683B             LDR      R3,[R7, #+0]
   \   000002C4   0xF04F 0x7C80      MOV      R12,#+16777216
   \   000002C8   0xF402 0x0280      AND      R2,R2,#0x400000
   \   000002CC   0xE007             B.N      ??HAL_DMA_PollForTransfer_19
   \                     ??HAL_DMA_PollForTransfer_32: (+1)
   \   000002CE   0x683A             LDR      R2,[R7, #+0]
   \   000002D0   0xF401 0x2100      AND      R1,R1,#0x80000
   \   000002D4   0x683B             LDR      R3,[R7, #+0]
   \   000002D6   0xF44F 0x2C80      MOV      R12,#+262144
   \   000002DA   0xF402 0x3280      AND      R2,R2,#0x10000
   \                     ??HAL_DMA_PollForTransfer_19: (+1)
   \   000002DE   0xEA0C 0x0303      AND      R3,R12,R3
    544              tmp1 = __HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_FE_FLAG_INDEX(hdma));
    545              tmp2 = __HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_DME_FLAG_INDEX(hdma));
    546              if((tmp != RESET) || (tmp1 != RESET) || (tmp2 != RESET))
   \   000002E2   0xEA42 0x0C01      ORR      R12,R2,R1
   \   000002E6   0xEA53 0x0C0C      ORRS     R12,R3,R12
   \   000002EA   0xF000 0x8145      BEQ.W    ??HAL_DMA_PollForTransfer_33
    547              {
    548                if(tmp != RESET)
   \   000002EE   0x2900             CMP      R1,#+0
   \   000002F0   0xD068             BEQ.N    ??HAL_DMA_PollForTransfer_34
    549                {
    550                  /* Update error code */
    551                  hdma->ErrorCode |= HAL_DMA_ERROR_TE;
   \   000002F2   0x6CE1             LDR      R1,[R4, #+76]
    552          
    553                  /* Clear the transfer error flag */
    554                  __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TE_FLAG_INDEX(hdma));
   \   000002F4   0x4558             CMP      R0,R11
   \   000002F6   0xF041 0x0101      ORR      R1,R1,#0x1
   \   000002FA   0x64E1             STR      R1,[R4, #+76]
   \   000002FC   0xD317             BCC.N    ??HAL_DMA_PollForTransfer_35
   \   000002FE   0x.... 0x....      LDR.W    R1,??DataTable2_3  ;; 0x40026470
   \   00000302   0x4288             CMP      R0,R1
   \   00000304   0xBF08             IT       EQ 
   \   00000306   0x2008             MOVEQ    R0,#+8
   \   00000308   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_36
   \   0000030A   0x.... 0x....      LDR.W    R1,??DataTable2_7  ;; 0x40026488
   \   0000030E   0x4288             CMP      R0,R1
   \   00000310   0xBF08             IT       EQ 
   \   00000312   0xF44F 0x7000      MOVEQ    R0,#+512
   \   00000316   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_36
   \   00000318   0x.... 0x....      LDR.W    R1,??DataTable2_11  ;; 0x400264a0
   \   0000031C   0x4288             CMP      R0,R1
   \   0000031E   0xBF0C             ITE      EQ 
   \   00000320   0xF44F 0x2000      MOVEQ    R0,#+524288
   \   00000324   0xF04F 0x7000      MOVNE    R0,#+33554432
   \                     ??HAL_DMA_PollForTransfer_36: (+1)
   \   00000328   0xF8C7 0x040C      STR      R0,[R7, #+1036]
   \   0000032C   0xE04A             B.N      ??HAL_DMA_PollForTransfer_34
   \                     ??HAL_DMA_PollForTransfer_35: (+1)
   \   0000032E   0x.... 0x....      LDR.W    R1,??DataTable2_16  ;; 0x400260b9
   \   00000332   0x4288             CMP      R0,R1
   \   00000334   0xD317             BCC.N    ??HAL_DMA_PollForTransfer_37
   \   00000336   0x.... 0x....      LDR.W    R1,??DataTable2_1  ;; 0x40026410
   \   0000033A   0x4288             CMP      R0,R1
   \   0000033C   0xBF08             IT       EQ 
   \   0000033E   0x2008             MOVEQ    R0,#+8
   \   00000340   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_38
   \   00000342   0x.... 0x....      LDR.W    R1,??DataTable2_5  ;; 0x40026428
   \   00000346   0x4288             CMP      R0,R1
   \   00000348   0xBF08             IT       EQ 
   \   0000034A   0xF44F 0x7000      MOVEQ    R0,#+512
   \   0000034E   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_38
   \   00000350   0x.... 0x....      LDR.W    R1,??DataTable2_9  ;; 0x40026440
   \   00000354   0x4288             CMP      R0,R1
   \   00000356   0xBF0C             ITE      EQ 
   \   00000358   0xF44F 0x2000      MOVEQ    R0,#+524288
   \   0000035C   0xF04F 0x7000      MOVNE    R0,#+33554432
   \                     ??HAL_DMA_PollForTransfer_38: (+1)
   \   00000360   0xF8C7 0x0408      STR      R0,[R7, #+1032]
   \   00000364   0xE02E             B.N      ??HAL_DMA_PollForTransfer_34
   \                     ??HAL_DMA_PollForTransfer_37: (+1)
   \   00000366   0x.... 0x....      LDR.W    R1,??DataTable2_17  ;; 0x40026059
   \   0000036A   0x4288             CMP      R0,R1
   \   0000036C   0xD316             BCC.N    ??HAL_DMA_PollForTransfer_39
   \   0000036E   0x.... 0x....      LDR.W    R1,??DataTable2_2  ;; 0x40026070
   \   00000372   0x4288             CMP      R0,R1
   \   00000374   0xBF08             IT       EQ 
   \   00000376   0x2008             MOVEQ    R0,#+8
   \   00000378   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_40
   \   0000037A   0x.... 0x....      LDR.W    R1,??DataTable2_6  ;; 0x40026088
   \   0000037E   0x4288             CMP      R0,R1
   \   00000380   0xBF08             IT       EQ 
   \   00000382   0xF44F 0x7000      MOVEQ    R0,#+512
   \   00000386   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_40
   \   00000388   0x.... 0x....      LDR.W    R1,??DataTable2_10  ;; 0x400260a0
   \   0000038C   0x4288             CMP      R0,R1
   \   0000038E   0xBF0C             ITE      EQ 
   \   00000390   0xF44F 0x2000      MOVEQ    R0,#+524288
   \   00000394   0xF04F 0x7000      MOVNE    R0,#+33554432
   \                     ??HAL_DMA_PollForTransfer_40: (+1)
   \   00000398   0x60F8             STR      R0,[R7, #+12]
   \   0000039A   0xE013             B.N      ??HAL_DMA_PollForTransfer_34
   \                     ??HAL_DMA_PollForTransfer_39: (+1)
   \   0000039C   0x4548             CMP      R0,R9
   \   0000039E   0xBF08             IT       EQ 
   \   000003A0   0x2008             MOVEQ    R0,#+8
   \   000003A2   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_41
   \   000003A4   0x.... 0x....      LDR.W    R1,??DataTable2_4  ;; 0x40026028
   \   000003A8   0x4288             CMP      R0,R1
   \   000003AA   0xBF08             IT       EQ 
   \   000003AC   0xF44F 0x7000      MOVEQ    R0,#+512
   \   000003B0   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_41
   \   000003B2   0x.... 0x....      LDR.W    R1,??DataTable2_8  ;; 0x40026040
   \   000003B6   0x4288             CMP      R0,R1
   \   000003B8   0xBF0C             ITE      EQ 
   \   000003BA   0xF44F 0x2000      MOVEQ    R0,#+524288
   \   000003BE   0xF04F 0x7000      MOVNE    R0,#+33554432
   \                     ??HAL_DMA_PollForTransfer_41: (+1)
   \   000003C2   0x60B8             STR      R0,[R7, #+8]
    555                }
    556                if(tmp1 != RESET)
   \                     ??HAL_DMA_PollForTransfer_34: (+1)
   \   000003C4   0x2A00             CMP      R2,#+0
   \   000003C6   0xD065             BEQ.N    ??HAL_DMA_PollForTransfer_42
    557                {
    558                  /* Update error code */
    559                  hdma->ErrorCode |= HAL_DMA_ERROR_FE;
   \   000003C8   0x6CE0             LDR      R0,[R4, #+76]
   \   000003CA   0xF040 0x0002      ORR      R0,R0,#0x2
   \   000003CE   0x64E0             STR      R0,[R4, #+76]
    560           
    561                  /* Clear the FIFO error flag */
    562                  __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_FE_FLAG_INDEX(hdma));
   \   000003D0   0x6820             LDR      R0,[R4, #+0]
   \   000003D2   0x4558             CMP      R0,R11
   \   000003D4   0xD316             BCC.N    ??HAL_DMA_PollForTransfer_43
   \   000003D6   0x.... 0x....      LDR.W    R1,??DataTable2_3  ;; 0x40026470
   \   000003DA   0x4288             CMP      R0,R1
   \   000003DC   0xBF08             IT       EQ 
   \   000003DE   0x4628             MOVEQ    R0,R5
   \   000003E0   0xD00D             BEQ.N    ??HAL_DMA_PollForTransfer_44
   \   000003E2   0x.... 0x....      LDR.W    R1,??DataTable2_7  ;; 0x40026488
   \   000003E6   0x4288             CMP      R0,R1
   \   000003E8   0xBF08             IT       EQ 
   \   000003EA   0x2040             MOVEQ    R0,#+64
   \   000003EC   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_44
   \   000003EE   0x.... 0x....      LDR.W    R1,??DataTable2_11  ;; 0x400264a0
   \   000003F2   0x4288             CMP      R0,R1
   \   000003F4   0xBF0C             ITE      EQ 
   \   000003F6   0xF44F 0x3080      MOVEQ    R0,#+65536
   \   000003FA   0xF44F 0x0080      MOVNE    R0,#+4194304
   \                     ??HAL_DMA_PollForTransfer_44: (+1)
   \   000003FE   0xF8C7 0x040C      STR      R0,[R7, #+1036]
   \   00000402   0xE047             B.N      ??HAL_DMA_PollForTransfer_42
   \                     ??HAL_DMA_PollForTransfer_43: (+1)
   \   00000404   0x.... 0x....      LDR.W    R1,??DataTable2_16  ;; 0x400260b9
   \   00000408   0x4288             CMP      R0,R1
   \   0000040A   0xD316             BCC.N    ??HAL_DMA_PollForTransfer_45
   \   0000040C   0x.... 0x....      LDR.W    R1,??DataTable2_1  ;; 0x40026410
   \   00000410   0x4288             CMP      R0,R1
   \   00000412   0xBF08             IT       EQ 
   \   00000414   0x4628             MOVEQ    R0,R5
   \   00000416   0xD00D             BEQ.N    ??HAL_DMA_PollForTransfer_46
   \   00000418   0x.... 0x....      LDR.W    R1,??DataTable2_5  ;; 0x40026428
   \   0000041C   0x4288             CMP      R0,R1
   \   0000041E   0xBF08             IT       EQ 
   \   00000420   0x2040             MOVEQ    R0,#+64
   \   00000422   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_46
   \   00000424   0x.... 0x....      LDR.W    R1,??DataTable2_9  ;; 0x40026440
   \   00000428   0x4288             CMP      R0,R1
   \   0000042A   0xBF0C             ITE      EQ 
   \   0000042C   0xF44F 0x3080      MOVEQ    R0,#+65536
   \   00000430   0xF44F 0x0080      MOVNE    R0,#+4194304
   \                     ??HAL_DMA_PollForTransfer_46: (+1)
   \   00000434   0xF8C7 0x0408      STR      R0,[R7, #+1032]
   \   00000438   0xE02C             B.N      ??HAL_DMA_PollForTransfer_42
   \                     ??HAL_DMA_PollForTransfer_45: (+1)
   \   0000043A   0x.... 0x....      LDR.W    R1,??DataTable2_17  ;; 0x40026059
   \   0000043E   0x4288             CMP      R0,R1
   \   00000440   0xD315             BCC.N    ??HAL_DMA_PollForTransfer_47
   \   00000442   0x.... 0x....      LDR.W    R1,??DataTable2_2  ;; 0x40026070
   \   00000446   0x4288             CMP      R0,R1
   \   00000448   0xBF08             IT       EQ 
   \   0000044A   0x4628             MOVEQ    R0,R5
   \   0000044C   0xD00D             BEQ.N    ??HAL_DMA_PollForTransfer_48
   \   0000044E   0x.... 0x....      LDR.W    R1,??DataTable2_6  ;; 0x40026088
   \   00000452   0x4288             CMP      R0,R1
   \   00000454   0xBF08             IT       EQ 
   \   00000456   0x2040             MOVEQ    R0,#+64
   \   00000458   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_48
   \   0000045A   0x.... 0x....      LDR.W    R1,??DataTable2_10  ;; 0x400260a0
   \   0000045E   0x4288             CMP      R0,R1
   \   00000460   0xBF0C             ITE      EQ 
   \   00000462   0xF44F 0x3080      MOVEQ    R0,#+65536
   \   00000466   0xF44F 0x0080      MOVNE    R0,#+4194304
   \                     ??HAL_DMA_PollForTransfer_48: (+1)
   \   0000046A   0x60F8             STR      R0,[R7, #+12]
   \   0000046C   0xE012             B.N      ??HAL_DMA_PollForTransfer_42
   \                     ??HAL_DMA_PollForTransfer_47: (+1)
   \   0000046E   0x4548             CMP      R0,R9
   \   00000470   0xBF08             IT       EQ 
   \   00000472   0x4628             MOVEQ    R0,R5
   \   00000474   0xD00D             BEQ.N    ??HAL_DMA_PollForTransfer_49
   \   00000476   0x.... 0x....      LDR.W    R1,??DataTable2_4  ;; 0x40026028
   \   0000047A   0x4288             CMP      R0,R1
   \   0000047C   0xBF08             IT       EQ 
   \   0000047E   0x2040             MOVEQ    R0,#+64
   \   00000480   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_49
   \   00000482   0x.... 0x....      LDR.W    R1,??DataTable2_8  ;; 0x40026040
   \   00000486   0x4288             CMP      R0,R1
   \   00000488   0xBF0C             ITE      EQ 
   \   0000048A   0xF44F 0x3080      MOVEQ    R0,#+65536
   \   0000048E   0xF44F 0x0080      MOVNE    R0,#+4194304
   \                     ??HAL_DMA_PollForTransfer_49: (+1)
   \   00000492   0x60B8             STR      R0,[R7, #+8]
    563                }
    564                if(tmp2 != RESET)
   \                     ??HAL_DMA_PollForTransfer_42: (+1)
   \   00000494   0x2B00             CMP      R3,#+0
   \   00000496   0xD065             BEQ.N    ??HAL_DMA_PollForTransfer_50
    565                {
    566                  /* Update error code */
    567                  hdma->ErrorCode |= HAL_DMA_ERROR_DME;
   \   00000498   0x6CE0             LDR      R0,[R4, #+76]
   \   0000049A   0xF040 0x0004      ORR      R0,R0,#0x4
   \   0000049E   0x64E0             STR      R0,[R4, #+76]
    568          
    569                  /* Clear the Direct Mode error flag */
    570                  __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_DME_FLAG_INDEX(hdma));
   \   000004A0   0x6820             LDR      R0,[R4, #+0]
   \   000004A2   0x4558             CMP      R0,R11
   \   000004A4   0xD316             BCC.N    ??HAL_DMA_PollForTransfer_51
   \   000004A6   0x.... 0x....      LDR.W    R1,??DataTable2_3  ;; 0x40026470
   \   000004AA   0x4288             CMP      R0,R1
   \   000004AC   0xBF08             IT       EQ 
   \   000004AE   0x4640             MOVEQ    R0,R8
   \   000004B0   0xD00D             BEQ.N    ??HAL_DMA_PollForTransfer_52
   \   000004B2   0x.... 0x....      LDR.W    R1,??DataTable2_7  ;; 0x40026488
   \   000004B6   0x4288             CMP      R0,R1
   \   000004B8   0xBF08             IT       EQ 
   \   000004BA   0x4650             MOVEQ    R0,R10
   \   000004BC   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_52
   \   000004BE   0x.... 0x....      LDR.W    R1,??DataTable2_11  ;; 0x400264a0
   \   000004C2   0x4288             CMP      R0,R1
   \   000004C4   0xBF0C             ITE      EQ 
   \   000004C6   0xF44F 0x2080      MOVEQ    R0,#+262144
   \   000004CA   0xF04F 0x7080      MOVNE    R0,#+16777216
   \                     ??HAL_DMA_PollForTransfer_52: (+1)
   \   000004CE   0xF8C7 0x040C      STR      R0,[R7, #+1036]
   \   000004D2   0xE047             B.N      ??HAL_DMA_PollForTransfer_50
   \                     ??HAL_DMA_PollForTransfer_51: (+1)
   \   000004D4   0x.... 0x....      LDR.W    R1,??DataTable2_16  ;; 0x400260b9
   \   000004D8   0x4288             CMP      R0,R1
   \   000004DA   0xD316             BCC.N    ??HAL_DMA_PollForTransfer_53
   \   000004DC   0x.... 0x....      LDR.W    R1,??DataTable2_1  ;; 0x40026410
   \   000004E0   0x4288             CMP      R0,R1
   \   000004E2   0xBF08             IT       EQ 
   \   000004E4   0x4640             MOVEQ    R0,R8
   \   000004E6   0xD00D             BEQ.N    ??HAL_DMA_PollForTransfer_54
   \   000004E8   0x.... 0x....      LDR.W    R1,??DataTable2_5  ;; 0x40026428
   \   000004EC   0x4288             CMP      R0,R1
   \   000004EE   0xBF08             IT       EQ 
   \   000004F0   0x4650             MOVEQ    R0,R10
   \   000004F2   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_54
   \   000004F4   0x.... 0x....      LDR.W    R1,??DataTable2_9  ;; 0x40026440
   \   000004F8   0x4288             CMP      R0,R1
   \   000004FA   0xBF0C             ITE      EQ 
   \   000004FC   0xF44F 0x2080      MOVEQ    R0,#+262144
   \   00000500   0xF04F 0x7080      MOVNE    R0,#+16777216
   \                     ??HAL_DMA_PollForTransfer_54: (+1)
   \   00000504   0xF8C7 0x0408      STR      R0,[R7, #+1032]
   \   00000508   0xE02C             B.N      ??HAL_DMA_PollForTransfer_50
   \                     ??HAL_DMA_PollForTransfer_53: (+1)
   \   0000050A   0x.... 0x....      LDR.W    R1,??DataTable2_17  ;; 0x40026059
   \   0000050E   0x4288             CMP      R0,R1
   \   00000510   0xD315             BCC.N    ??HAL_DMA_PollForTransfer_55
   \   00000512   0x.... 0x....      LDR.W    R1,??DataTable2_2  ;; 0x40026070
   \   00000516   0x4288             CMP      R0,R1
   \   00000518   0xBF08             IT       EQ 
   \   0000051A   0x4640             MOVEQ    R0,R8
   \   0000051C   0xD00D             BEQ.N    ??HAL_DMA_PollForTransfer_56
   \   0000051E   0x.... 0x....      LDR.W    R1,??DataTable2_6  ;; 0x40026088
   \   00000522   0x4288             CMP      R0,R1
   \   00000524   0xBF08             IT       EQ 
   \   00000526   0x4650             MOVEQ    R0,R10
   \   00000528   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_56
   \   0000052A   0x.... 0x....      LDR.W    R1,??DataTable2_10  ;; 0x400260a0
   \   0000052E   0x4288             CMP      R0,R1
   \   00000530   0xBF0C             ITE      EQ 
   \   00000532   0xF44F 0x2080      MOVEQ    R0,#+262144
   \   00000536   0xF04F 0x7080      MOVNE    R0,#+16777216
   \                     ??HAL_DMA_PollForTransfer_56: (+1)
   \   0000053A   0x60F8             STR      R0,[R7, #+12]
   \   0000053C   0xE012             B.N      ??HAL_DMA_PollForTransfer_50
   \                     ??HAL_DMA_PollForTransfer_55: (+1)
   \   0000053E   0x4548             CMP      R0,R9
   \   00000540   0xBF08             IT       EQ 
   \   00000542   0x4640             MOVEQ    R0,R8
   \   00000544   0xD00D             BEQ.N    ??HAL_DMA_PollForTransfer_57
   \   00000546   0x.... 0x....      LDR.W    R1,??DataTable2_4  ;; 0x40026028
   \   0000054A   0x4288             CMP      R0,R1
   \   0000054C   0xBF08             IT       EQ 
   \   0000054E   0x4650             MOVEQ    R0,R10
   \   00000550   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_57
   \   00000552   0x.... 0x....      LDR.W    R1,??DataTable2_8  ;; 0x40026040
   \   00000556   0x4288             CMP      R0,R1
   \   00000558   0xBF0C             ITE      EQ 
   \   0000055A   0xF44F 0x2080      MOVEQ    R0,#+262144
   \   0000055E   0xF04F 0x7080      MOVNE    R0,#+16777216
   \                     ??HAL_DMA_PollForTransfer_57: (+1)
   \   00000562   0x60B8             STR      R0,[R7, #+8]
    571                }
    572                /* Change the DMA state */
    573                hdma->State= HAL_DMA_STATE_ERROR;
   \                     ??HAL_DMA_PollForTransfer_50: (+1)
   \   00000564   0x2004             MOVS     R0,#+4
   \   00000566   0xF884 0x0035      STRB     R0,[R4, #+53]
    574                
    575                /* Process Unlocked */
    576                __HAL_UNLOCK(hdma);
   \   0000056A   0x2000             MOVS     R0,#+0
   \   0000056C   0xF884 0x0034      STRB     R0,[R4, #+52]
    577          
    578                return HAL_ERROR;
   \   00000570   0x2001             MOVS     R0,#+1
   \   00000572   0xB003             ADD      SP,SP,#+12
   \   00000574   0xE8BD 0x8FF0      POP      {R4-R11,PC}
    579              }  
    580              /* Check for the Timeout */
    581              if(Timeout != HAL_MAX_DELAY)
   \                     ??HAL_DMA_PollForTransfer_33: (+1)
   \   00000578   0x9802             LDR      R0,[SP, #+8]
   \   0000057A   0xF110 0x0F01      CMN      R0,#+1
   \   0000057E   0xF43F 0xADC6      BEQ.W    ??HAL_DMA_PollForTransfer_14
    582              {
    583                if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
   \   00000582   0xB138             CBZ.N    R0,??HAL_DMA_PollForTransfer_58
   \   00000584   0x.... 0x....      BL       HAL_GetTick
   \   00000588   0x9900             LDR      R1,[SP, #+0]
   \   0000058A   0x1A40             SUBS     R0,R0,R1
   \   0000058C   0x9902             LDR      R1,[SP, #+8]
   \   0000058E   0x4281             CMP      R1,R0
   \   00000590   0xF4BF 0xADBD      BCS.W    ??HAL_DMA_PollForTransfer_14
    584                {
    585                  /* Update error code */
    586                  hdma->ErrorCode |= HAL_DMA_ERROR_TIMEOUT;
   \                     ??HAL_DMA_PollForTransfer_58: (+1)
   \   00000594   0x6CE0             LDR      R0,[R4, #+76]
   \   00000596   0xF040 0x0020      ORR      R0,R0,#0x20
   \   0000059A   0x64E0             STR      R0,[R4, #+76]
    587          
    588                  /* Change the DMA state */
    589                  hdma->State = HAL_DMA_STATE_TIMEOUT;
   \   0000059C   0x2003             MOVS     R0,#+3
   \   0000059E   0xF884 0x0035      STRB     R0,[R4, #+53]
    590          
    591                  /* Process Unlocked */
    592                  __HAL_UNLOCK(hdma);
   \   000005A2   0x2000             MOVS     R0,#+0
   \   000005A4   0xF884 0x0034      STRB     R0,[R4, #+52]
    593                  
    594                  return HAL_TIMEOUT;
   \   000005A8   0x2003             MOVS     R0,#+3
   \   000005AA   0xB003             ADD      SP,SP,#+12
   \   000005AC   0xE8BD 0x8FF0      POP      {R4-R11,PC}
    595                }
    596              }
    597            }
    598          
    599            if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
   \                     ??HAL_DMA_PollForTransfer_16: (+1)
   \   000005B0   0x9A01             LDR      R2,[SP, #+4]
   \   000005B2   0x6809             LDR      R1,[R1, #+0]
   \   000005B4   0x2A00             CMP      R2,#+0
   \   000005B6   0xF040 0x8191      BNE.W    ??HAL_DMA_PollForTransfer_59
    600            {
    601              /* Multi_Buffering mode enabled */
    602              if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != 0)
   \   000005BA   0x0349             LSLS     R1,R1,#+13
   \   000005BC   0xF140 0x80D6      BPL.W    ??HAL_DMA_PollForTransfer_60
    603              {
    604                /* Clear the half transfer complete flag */
    605                __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
   \   000005C0   0x4558             CMP      R0,R11
   \   000005C2   0xD317             BCC.N    ??HAL_DMA_PollForTransfer_61
   \   000005C4   0x.... 0x....      LDR.W    R1,??DataTable2_3  ;; 0x40026470
   \   000005C8   0x4288             CMP      R0,R1
   \   000005CA   0xBF08             IT       EQ 
   \   000005CC   0x2010             MOVEQ    R0,#+16
   \   000005CE   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_62
   \   000005D0   0x.... 0x....      LDR.W    R1,??DataTable2_7  ;; 0x40026488
   \   000005D4   0x4288             CMP      R0,R1
   \   000005D6   0xBF08             IT       EQ 
   \   000005D8   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   000005DC   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_62
   \   000005DE   0x.... 0x....      LDR.W    R1,??DataTable2_11  ;; 0x400264a0
   \   000005E2   0x4288             CMP      R0,R1
   \   000005E4   0xBF0C             ITE      EQ 
   \   000005E6   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   000005EA   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_62: (+1)
   \   000005EE   0xF8C7 0x040C      STR      R0,[R7, #+1036]
   \   000005F2   0xE04A             B.N      ??HAL_DMA_PollForTransfer_63
   \                     ??HAL_DMA_PollForTransfer_61: (+1)
   \   000005F4   0x.... 0x....      LDR.W    R1,??DataTable2_16  ;; 0x400260b9
   \   000005F8   0x4288             CMP      R0,R1
   \   000005FA   0xD317             BCC.N    ??HAL_DMA_PollForTransfer_64
   \   000005FC   0x.... 0x....      LDR.W    R1,??DataTable2_1  ;; 0x40026410
   \   00000600   0x4288             CMP      R0,R1
   \   00000602   0xBF08             IT       EQ 
   \   00000604   0x2010             MOVEQ    R0,#+16
   \   00000606   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_65
   \   00000608   0x.... 0x....      LDR.W    R1,??DataTable2_5  ;; 0x40026428
   \   0000060C   0x4288             CMP      R0,R1
   \   0000060E   0xBF08             IT       EQ 
   \   00000610   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   00000614   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_65
   \   00000616   0x.... 0x....      LDR.W    R1,??DataTable2_9  ;; 0x40026440
   \   0000061A   0x4288             CMP      R0,R1
   \   0000061C   0xBF0C             ITE      EQ 
   \   0000061E   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   00000622   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_65: (+1)
   \   00000626   0xF8C7 0x0408      STR      R0,[R7, #+1032]
   \   0000062A   0xE02E             B.N      ??HAL_DMA_PollForTransfer_63
   \                     ??HAL_DMA_PollForTransfer_64: (+1)
   \   0000062C   0x.... 0x....      LDR.W    R1,??DataTable2_17  ;; 0x40026059
   \   00000630   0x4288             CMP      R0,R1
   \   00000632   0xD316             BCC.N    ??HAL_DMA_PollForTransfer_66
   \   00000634   0x.... 0x....      LDR.W    R1,??DataTable2_2  ;; 0x40026070
   \   00000638   0x4288             CMP      R0,R1
   \   0000063A   0xBF08             IT       EQ 
   \   0000063C   0x2010             MOVEQ    R0,#+16
   \   0000063E   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_67
   \   00000640   0x.... 0x....      LDR.W    R1,??DataTable2_6  ;; 0x40026088
   \   00000644   0x4288             CMP      R0,R1
   \   00000646   0xBF08             IT       EQ 
   \   00000648   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   0000064C   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_67
   \   0000064E   0x.... 0x....      LDR.W    R1,??DataTable2_10  ;; 0x400260a0
   \   00000652   0x4288             CMP      R0,R1
   \   00000654   0xBF0C             ITE      EQ 
   \   00000656   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   0000065A   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_67: (+1)
   \   0000065E   0x60F8             STR      R0,[R7, #+12]
   \   00000660   0xE013             B.N      ??HAL_DMA_PollForTransfer_63
   \                     ??HAL_DMA_PollForTransfer_66: (+1)
   \   00000662   0x4548             CMP      R0,R9
   \   00000664   0xBF08             IT       EQ 
   \   00000666   0x2010             MOVEQ    R0,#+16
   \   00000668   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_68
   \   0000066A   0x.... 0x....      LDR.W    R1,??DataTable2_4  ;; 0x40026028
   \   0000066E   0x4288             CMP      R0,R1
   \   00000670   0xBF08             IT       EQ 
   \   00000672   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   00000676   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_68
   \   00000678   0x.... 0x....      LDR.W    R1,??DataTable2_8  ;; 0x40026040
   \   0000067C   0x4288             CMP      R0,R1
   \   0000067E   0xBF0C             ITE      EQ 
   \   00000680   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   00000684   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_68: (+1)
   \   00000688   0x60B8             STR      R0,[R7, #+8]
    606                /* Clear the transfer complete flag */
    607                __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma));
   \                     ??HAL_DMA_PollForTransfer_63: (+1)
   \   0000068A   0x6820             LDR      R0,[R4, #+0]
   \   0000068C   0x4558             CMP      R0,R11
   \   0000068E   0xD317             BCC.N    ??HAL_DMA_PollForTransfer_69
   \   00000690   0x.... 0x....      LDR.W    R1,??DataTable2_3  ;; 0x40026470
   \   00000694   0x4288             CMP      R0,R1
   \   00000696   0xBF08             IT       EQ 
   \   00000698   0x2020             MOVEQ    R0,#+32
   \   0000069A   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_70
   \   0000069C   0x.... 0x....      LDR.W    R1,??DataTable2_7  ;; 0x40026488
   \   000006A0   0x4288             CMP      R0,R1
   \   000006A2   0xBF08             IT       EQ 
   \   000006A4   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   000006A8   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_70
   \   000006AA   0x.... 0x....      LDR.W    R1,??DataTable2_11  ;; 0x400264a0
   \   000006AE   0x4288             CMP      R0,R1
   \   000006B0   0xBF0C             ITE      EQ 
   \   000006B2   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   000006B6   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_PollForTransfer_70: (+1)
   \   000006BA   0xF8C7 0x040C      STR      R0,[R7, #+1036]
   \   000006BE   0xE04A             B.N      ??HAL_DMA_PollForTransfer_71
   \                     ??HAL_DMA_PollForTransfer_69: (+1)
   \   000006C0   0x.... 0x....      LDR.W    R1,??DataTable2_16  ;; 0x400260b9
   \   000006C4   0x4288             CMP      R0,R1
   \   000006C6   0xD317             BCC.N    ??HAL_DMA_PollForTransfer_72
   \   000006C8   0x.... 0x....      LDR.W    R1,??DataTable2_1  ;; 0x40026410
   \   000006CC   0x4288             CMP      R0,R1
   \   000006CE   0xBF08             IT       EQ 
   \   000006D0   0x2020             MOVEQ    R0,#+32
   \   000006D2   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_73
   \   000006D4   0x.... 0x....      LDR.W    R1,??DataTable2_5  ;; 0x40026428
   \   000006D8   0x4288             CMP      R0,R1
   \   000006DA   0xBF08             IT       EQ 
   \   000006DC   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   000006E0   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_73
   \   000006E2   0x.... 0x....      LDR.W    R1,??DataTable2_9  ;; 0x40026440
   \   000006E6   0x4288             CMP      R0,R1
   \   000006E8   0xBF0C             ITE      EQ 
   \   000006EA   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   000006EE   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_PollForTransfer_73: (+1)
   \   000006F2   0xF8C7 0x0408      STR      R0,[R7, #+1032]
   \   000006F6   0xE02E             B.N      ??HAL_DMA_PollForTransfer_71
   \                     ??HAL_DMA_PollForTransfer_72: (+1)
   \   000006F8   0x.... 0x....      LDR.W    R1,??DataTable2_17  ;; 0x40026059
   \   000006FC   0x4288             CMP      R0,R1
   \   000006FE   0xD316             BCC.N    ??HAL_DMA_PollForTransfer_74
   \   00000700   0x.... 0x....      LDR.W    R1,??DataTable2_2  ;; 0x40026070
   \   00000704   0x4288             CMP      R0,R1
   \   00000706   0xBF08             IT       EQ 
   \   00000708   0x2020             MOVEQ    R0,#+32
   \   0000070A   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_75
   \   0000070C   0x.... 0x....      LDR.W    R1,??DataTable2_6  ;; 0x40026088
   \   00000710   0x4288             CMP      R0,R1
   \   00000712   0xBF08             IT       EQ 
   \   00000714   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   00000718   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_75
   \   0000071A   0x.... 0x....      LDR.W    R1,??DataTable2_10  ;; 0x400260a0
   \   0000071E   0x4288             CMP      R0,R1
   \   00000720   0xBF0C             ITE      EQ 
   \   00000722   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   00000726   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_PollForTransfer_75: (+1)
   \   0000072A   0x60F8             STR      R0,[R7, #+12]
   \   0000072C   0xE013             B.N      ??HAL_DMA_PollForTransfer_71
   \                     ??HAL_DMA_PollForTransfer_74: (+1)
   \   0000072E   0x4548             CMP      R0,R9
   \   00000730   0xBF08             IT       EQ 
   \   00000732   0x2020             MOVEQ    R0,#+32
   \   00000734   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_76
   \   00000736   0x.... 0x....      LDR.W    R1,??DataTable2_4  ;; 0x40026028
   \   0000073A   0x4288             CMP      R0,R1
   \   0000073C   0xBF08             IT       EQ 
   \   0000073E   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   00000742   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_76
   \   00000744   0x.... 0x....      LDR.W    R1,??DataTable2_8  ;; 0x40026040
   \   00000748   0x4288             CMP      R0,R1
   \   0000074A   0xBF0C             ITE      EQ 
   \   0000074C   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   00000750   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_PollForTransfer_76: (+1)
   \   00000754   0x60B8             STR      R0,[R7, #+8]
    608          
    609                /* Current memory buffer used is Memory 0 */
    610                if((hdma->Instance->CR & DMA_SxCR_CT) == 0)
   \                     ??HAL_DMA_PollForTransfer_71: (+1)
   \   00000756   0x6820             LDR      R0,[R4, #+0]
   \   00000758   0x6801             LDR      R1,[R0, #+0]
   \   0000075A   0x0309             LSLS     R1,R1,#+12
   \   0000075C   0xF140 0x80B7      BPL.W    ??HAL_DMA_PollForTransfer_77
    611                {
    612                  /* Change DMA peripheral state */
    613                  hdma->State = HAL_DMA_STATE_READY_MEM0;
    614                }
    615                /* Current memory buffer used is Memory 1 */
    616                else if((hdma->Instance->CR & DMA_SxCR_CT) != 0)
   \   00000760   0x6800             LDR      R0,[R0, #+0]
   \   00000762   0x0300             LSLS     R0,R0,#+12
   \   00000764   0xF140 0x80B6      BPL.W    ??HAL_DMA_PollForTransfer_78
    617                {
    618                  /* Change DMA peripheral state */
    619                  hdma->State = HAL_DMA_STATE_READY_MEM1;
   \   00000768   0x2021             MOVS     R0,#+33
   \   0000076A   0xE0B1             B.N      ??HAL_DMA_PollForTransfer_79
    620                }
    621              }
    622              else
    623              {
    624                /* Clear the half transfer complete flag */
    625                __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
   \                     ??HAL_DMA_PollForTransfer_60: (+1)
   \   0000076C   0x4558             CMP      R0,R11
   \   0000076E   0xD314             BCC.N    ??HAL_DMA_PollForTransfer_80
   \   00000770   0x....             LDR.N    R1,??DataTable2_3  ;; 0x40026470
   \   00000772   0x4288             CMP      R0,R1
   \   00000774   0xBF08             IT       EQ 
   \   00000776   0x2010             MOVEQ    R0,#+16
   \   00000778   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_81
   \   0000077A   0x....             LDR.N    R1,??DataTable2_7  ;; 0x40026488
   \   0000077C   0x4288             CMP      R0,R1
   \   0000077E   0xBF08             IT       EQ 
   \   00000780   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   00000784   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_81
   \   00000786   0x....             LDR.N    R1,??DataTable2_11  ;; 0x400264a0
   \   00000788   0x4288             CMP      R0,R1
   \   0000078A   0xBF0C             ITE      EQ 
   \   0000078C   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   00000790   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_81: (+1)
   \   00000794   0xF8C7 0x040C      STR      R0,[R7, #+1036]
   \   00000798   0xE040             B.N      ??HAL_DMA_PollForTransfer_82
   \                     ??HAL_DMA_PollForTransfer_80: (+1)
   \   0000079A   0x....             LDR.N    R1,??DataTable2_16  ;; 0x400260b9
   \   0000079C   0x4288             CMP      R0,R1
   \   0000079E   0xD314             BCC.N    ??HAL_DMA_PollForTransfer_83
   \   000007A0   0x....             LDR.N    R1,??DataTable2_1  ;; 0x40026410
   \   000007A2   0x4288             CMP      R0,R1
   \   000007A4   0xBF08             IT       EQ 
   \   000007A6   0x2010             MOVEQ    R0,#+16
   \   000007A8   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_84
   \   000007AA   0x....             LDR.N    R1,??DataTable2_5  ;; 0x40026428
   \   000007AC   0x4288             CMP      R0,R1
   \   000007AE   0xBF08             IT       EQ 
   \   000007B0   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   000007B4   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_84
   \   000007B6   0x....             LDR.N    R1,??DataTable2_9  ;; 0x40026440
   \   000007B8   0x4288             CMP      R0,R1
   \   000007BA   0xBF0C             ITE      EQ 
   \   000007BC   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   000007C0   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_84: (+1)
   \   000007C4   0xF8C7 0x0408      STR      R0,[R7, #+1032]
   \   000007C8   0xE028             B.N      ??HAL_DMA_PollForTransfer_82
   \                     ??HAL_DMA_PollForTransfer_83: (+1)
   \   000007CA   0x....             LDR.N    R1,??DataTable2_17  ;; 0x40026059
   \   000007CC   0x4288             CMP      R0,R1
   \   000007CE   0xD313             BCC.N    ??HAL_DMA_PollForTransfer_85
   \   000007D0   0x....             LDR.N    R1,??DataTable2_2  ;; 0x40026070
   \   000007D2   0x4288             CMP      R0,R1
   \   000007D4   0xBF08             IT       EQ 
   \   000007D6   0x2010             MOVEQ    R0,#+16
   \   000007D8   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_86
   \   000007DA   0x....             LDR.N    R1,??DataTable2_6  ;; 0x40026088
   \   000007DC   0x4288             CMP      R0,R1
   \   000007DE   0xBF08             IT       EQ 
   \   000007E0   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   000007E4   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_86
   \   000007E6   0x....             LDR.N    R1,??DataTable2_10  ;; 0x400260a0
   \   000007E8   0x4288             CMP      R0,R1
   \   000007EA   0xBF0C             ITE      EQ 
   \   000007EC   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   000007F0   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_86: (+1)
   \   000007F4   0x60F8             STR      R0,[R7, #+12]
   \   000007F6   0xE011             B.N      ??HAL_DMA_PollForTransfer_82
   \                     ??HAL_DMA_PollForTransfer_85: (+1)
   \   000007F8   0x4548             CMP      R0,R9
   \   000007FA   0xBF08             IT       EQ 
   \   000007FC   0x2010             MOVEQ    R0,#+16
   \   000007FE   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_87
   \   00000800   0x....             LDR.N    R1,??DataTable2_4  ;; 0x40026028
   \   00000802   0x4288             CMP      R0,R1
   \   00000804   0xBF08             IT       EQ 
   \   00000806   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   0000080A   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_87
   \   0000080C   0x....             LDR.N    R1,??DataTable2_8  ;; 0x40026040
   \   0000080E   0x4288             CMP      R0,R1
   \   00000810   0xBF0C             ITE      EQ 
   \   00000812   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   00000816   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_87: (+1)
   \   0000081A   0x60B8             STR      R0,[R7, #+8]
    626                /* Clear the transfer complete flag */
    627                __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma)); 
   \                     ??HAL_DMA_PollForTransfer_82: (+1)
   \   0000081C   0x6820             LDR      R0,[R4, #+0]
   \   0000081E   0x4558             CMP      R0,R11
   \   00000820   0xD314             BCC.N    ??HAL_DMA_PollForTransfer_88
   \   00000822   0x....             LDR.N    R1,??DataTable2_3  ;; 0x40026470
   \   00000824   0x4288             CMP      R0,R1
   \   00000826   0xBF08             IT       EQ 
   \   00000828   0x2020             MOVEQ    R0,#+32
   \   0000082A   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_89
   \   0000082C   0x....             LDR.N    R1,??DataTable2_7  ;; 0x40026488
   \   0000082E   0x4288             CMP      R0,R1
   \   00000830   0xBF08             IT       EQ 
   \   00000832   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   00000836   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_89
   \   00000838   0x....             LDR.N    R1,??DataTable2_11  ;; 0x400264a0
   \   0000083A   0x4288             CMP      R0,R1
   \   0000083C   0xBF0C             ITE      EQ 
   \   0000083E   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   00000842   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_PollForTransfer_89: (+1)
   \   00000846   0xF8C7 0x040C      STR      R0,[R7, #+1036]
   \   0000084A   0xE040             B.N      ??HAL_DMA_PollForTransfer_77
   \                     ??HAL_DMA_PollForTransfer_88: (+1)
   \   0000084C   0x....             LDR.N    R1,??DataTable2_16  ;; 0x400260b9
   \   0000084E   0x4288             CMP      R0,R1
   \   00000850   0xD314             BCC.N    ??HAL_DMA_PollForTransfer_90
   \   00000852   0x....             LDR.N    R1,??DataTable2_1  ;; 0x40026410
   \   00000854   0x4288             CMP      R0,R1
   \   00000856   0xBF08             IT       EQ 
   \   00000858   0x2020             MOVEQ    R0,#+32
   \   0000085A   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_91
   \   0000085C   0x....             LDR.N    R1,??DataTable2_5  ;; 0x40026428
   \   0000085E   0x4288             CMP      R0,R1
   \   00000860   0xBF08             IT       EQ 
   \   00000862   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   00000866   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_91
   \   00000868   0x....             LDR.N    R1,??DataTable2_9  ;; 0x40026440
   \   0000086A   0x4288             CMP      R0,R1
   \   0000086C   0xBF0C             ITE      EQ 
   \   0000086E   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   00000872   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_PollForTransfer_91: (+1)
   \   00000876   0xF8C7 0x0408      STR      R0,[R7, #+1032]
   \   0000087A   0xE028             B.N      ??HAL_DMA_PollForTransfer_77
   \                     ??HAL_DMA_PollForTransfer_90: (+1)
   \   0000087C   0x....             LDR.N    R1,??DataTable2_17  ;; 0x40026059
   \   0000087E   0x4288             CMP      R0,R1
   \   00000880   0xD313             BCC.N    ??HAL_DMA_PollForTransfer_92
   \   00000882   0x....             LDR.N    R1,??DataTable2_2  ;; 0x40026070
   \   00000884   0x4288             CMP      R0,R1
   \   00000886   0xBF08             IT       EQ 
   \   00000888   0x2020             MOVEQ    R0,#+32
   \   0000088A   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_93
   \   0000088C   0x....             LDR.N    R1,??DataTable2_6  ;; 0x40026088
   \   0000088E   0x4288             CMP      R0,R1
   \   00000890   0xBF08             IT       EQ 
   \   00000892   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   00000896   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_93
   \   00000898   0x....             LDR.N    R1,??DataTable2_10  ;; 0x400260a0
   \   0000089A   0x4288             CMP      R0,R1
   \   0000089C   0xBF0C             ITE      EQ 
   \   0000089E   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   000008A2   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_PollForTransfer_93: (+1)
   \   000008A6   0x60F8             STR      R0,[R7, #+12]
   \   000008A8   0xE011             B.N      ??HAL_DMA_PollForTransfer_77
   \                     ??HAL_DMA_PollForTransfer_92: (+1)
   \   000008AA   0x4548             CMP      R0,R9
   \   000008AC   0xBF08             IT       EQ 
   \   000008AE   0x2020             MOVEQ    R0,#+32
   \   000008B0   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_94
   \   000008B2   0x....             LDR.N    R1,??DataTable2_4  ;; 0x40026028
   \   000008B4   0x4288             CMP      R0,R1
   \   000008B6   0xBF08             IT       EQ 
   \   000008B8   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   000008BC   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_94
   \   000008BE   0x....             LDR.N    R1,??DataTable2_8  ;; 0x40026040
   \   000008C0   0x4288             CMP      R0,R1
   \   000008C2   0xBF0C             ITE      EQ 
   \   000008C4   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   000008C8   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_PollForTransfer_94: (+1)
   \   000008CC   0x60B8             STR      R0,[R7, #+8]
    628          
    629                /* The selected Streamx EN bit is cleared (DMA is disabled and all transfers
    630                   are complete) */
    631                hdma->State = HAL_DMA_STATE_READY_MEM0;
   \                     ??HAL_DMA_PollForTransfer_77: (+1)
   \   000008CE   0x2011             MOVS     R0,#+17
   \                     ??HAL_DMA_PollForTransfer_79: (+1)
   \   000008D0   0xF884 0x0035      STRB     R0,[R4, #+53]
    632              }
    633              /* Process Unlocked */
    634              __HAL_UNLOCK(hdma);
   \                     ??HAL_DMA_PollForTransfer_78: (+1)
   \   000008D4   0x2000             MOVS     R0,#+0
   \   000008D6   0xF884 0x0034      STRB     R0,[R4, #+52]
   \   000008DA   0xE0BD             B.N      ??HAL_DMA_PollForTransfer_95
    635            }
    636            else
    637            { 
    638              /* Multi_Buffering mode enabled */
    639              if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != 0)
   \                     ??HAL_DMA_PollForTransfer_59: (+1)
   \   000008DC   0x0349             LSLS     R1,R1,#+13
   \   000008DE   0xD560             BPL.N    ??HAL_DMA_PollForTransfer_96
    640              {
    641                /* Clear the half transfer complete flag */
    642                __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
   \   000008E0   0x4558             CMP      R0,R11
   \   000008E2   0xD314             BCC.N    ??HAL_DMA_PollForTransfer_97
   \   000008E4   0x....             LDR.N    R1,??DataTable2_3  ;; 0x40026470
   \   000008E6   0x4288             CMP      R0,R1
   \   000008E8   0xBF08             IT       EQ 
   \   000008EA   0x2010             MOVEQ    R0,#+16
   \   000008EC   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_98
   \   000008EE   0x....             LDR.N    R1,??DataTable2_7  ;; 0x40026488
   \   000008F0   0x4288             CMP      R0,R1
   \   000008F2   0xBF08             IT       EQ 
   \   000008F4   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   000008F8   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_98
   \   000008FA   0x....             LDR.N    R1,??DataTable2_11  ;; 0x400264a0
   \   000008FC   0x4288             CMP      R0,R1
   \   000008FE   0xBF0C             ITE      EQ 
   \   00000900   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   00000904   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_98: (+1)
   \   00000908   0xF8C7 0x040C      STR      R0,[R7, #+1036]
   \   0000090C   0xE040             B.N      ??HAL_DMA_PollForTransfer_99
   \                     ??HAL_DMA_PollForTransfer_97: (+1)
   \   0000090E   0x....             LDR.N    R1,??DataTable2_16  ;; 0x400260b9
   \   00000910   0x4288             CMP      R0,R1
   \   00000912   0xD314             BCC.N    ??HAL_DMA_PollForTransfer_100
   \   00000914   0x....             LDR.N    R1,??DataTable2_1  ;; 0x40026410
   \   00000916   0x4288             CMP      R0,R1
   \   00000918   0xBF08             IT       EQ 
   \   0000091A   0x2010             MOVEQ    R0,#+16
   \   0000091C   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_101
   \   0000091E   0x....             LDR.N    R1,??DataTable2_5  ;; 0x40026428
   \   00000920   0x4288             CMP      R0,R1
   \   00000922   0xBF08             IT       EQ 
   \   00000924   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   00000928   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_101
   \   0000092A   0x....             LDR.N    R1,??DataTable2_9  ;; 0x40026440
   \   0000092C   0x4288             CMP      R0,R1
   \   0000092E   0xBF0C             ITE      EQ 
   \   00000930   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   00000934   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_101: (+1)
   \   00000938   0xF8C7 0x0408      STR      R0,[R7, #+1032]
   \   0000093C   0xE028             B.N      ??HAL_DMA_PollForTransfer_99
   \                     ??HAL_DMA_PollForTransfer_100: (+1)
   \   0000093E   0x....             LDR.N    R1,??DataTable2_17  ;; 0x40026059
   \   00000940   0x4288             CMP      R0,R1
   \   00000942   0xD313             BCC.N    ??HAL_DMA_PollForTransfer_102
   \   00000944   0x....             LDR.N    R1,??DataTable2_2  ;; 0x40026070
   \   00000946   0x4288             CMP      R0,R1
   \   00000948   0xBF08             IT       EQ 
   \   0000094A   0x2010             MOVEQ    R0,#+16
   \   0000094C   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_103
   \   0000094E   0x....             LDR.N    R1,??DataTable2_6  ;; 0x40026088
   \   00000950   0x4288             CMP      R0,R1
   \   00000952   0xBF08             IT       EQ 
   \   00000954   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   00000958   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_103
   \   0000095A   0x....             LDR.N    R1,??DataTable2_10  ;; 0x400260a0
   \   0000095C   0x4288             CMP      R0,R1
   \   0000095E   0xBF0C             ITE      EQ 
   \   00000960   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   00000964   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_103: (+1)
   \   00000968   0x60F8             STR      R0,[R7, #+12]
   \   0000096A   0xE011             B.N      ??HAL_DMA_PollForTransfer_99
   \                     ??HAL_DMA_PollForTransfer_102: (+1)
   \   0000096C   0x4548             CMP      R0,R9
   \   0000096E   0xBF08             IT       EQ 
   \   00000970   0x2010             MOVEQ    R0,#+16
   \   00000972   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_104
   \   00000974   0x....             LDR.N    R1,??DataTable2_4  ;; 0x40026028
   \   00000976   0x4288             CMP      R0,R1
   \   00000978   0xBF08             IT       EQ 
   \   0000097A   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   0000097E   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_104
   \   00000980   0x....             LDR.N    R1,??DataTable2_8  ;; 0x40026040
   \   00000982   0x4288             CMP      R0,R1
   \   00000984   0xBF0C             ITE      EQ 
   \   00000986   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   0000098A   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_104: (+1)
   \   0000098E   0x60B8             STR      R0,[R7, #+8]
    643          
    644                /* Current memory buffer used is Memory 0 */
    645                if((hdma->Instance->CR & DMA_SxCR_CT) == 0)
   \                     ??HAL_DMA_PollForTransfer_99: (+1)
   \   00000990   0x6820             LDR      R0,[R4, #+0]
   \   00000992   0x6801             LDR      R1,[R0, #+0]
   \   00000994   0x0309             LSLS     R1,R1,#+12
   \   00000996   0xD55C             BPL.N    ??HAL_DMA_PollForTransfer_105
    646                {
    647                  /* Change DMA peripheral state */
    648                  hdma->State = HAL_DMA_STATE_READY_HALF_MEM0;
    649                }
    650                /* Current memory buffer used is Memory 1 */
    651                else if((hdma->Instance->CR & DMA_SxCR_CT) != 0)
   \   00000998   0x6800             LDR      R0,[R0, #+0]
   \   0000099A   0x0300             LSLS     R0,R0,#+12
   \   0000099C   0xD55C             BPL.N    ??HAL_DMA_PollForTransfer_95
    652                {
    653                  /* Change DMA peripheral state */
    654                  hdma->State = HAL_DMA_STATE_READY_HALF_MEM1;
   \   0000099E   0x2041             MOVS     R0,#+65
   \   000009A0   0xE058             B.N      ??HAL_DMA_PollForTransfer_106
    655                }
    656              }
    657              else
    658              {
    659                /* Clear the half transfer complete flag */
    660                __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
   \                     ??HAL_DMA_PollForTransfer_96: (+1)
   \   000009A2   0x4558             CMP      R0,R11
   \   000009A4   0xD314             BCC.N    ??HAL_DMA_PollForTransfer_107
   \   000009A6   0x....             LDR.N    R1,??DataTable2_3  ;; 0x40026470
   \   000009A8   0x4288             CMP      R0,R1
   \   000009AA   0xBF08             IT       EQ 
   \   000009AC   0x2010             MOVEQ    R0,#+16
   \   000009AE   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_108
   \   000009B0   0x....             LDR.N    R1,??DataTable2_7  ;; 0x40026488
   \   000009B2   0x4288             CMP      R0,R1
   \   000009B4   0xBF08             IT       EQ 
   \   000009B6   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   000009BA   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_108
   \   000009BC   0x....             LDR.N    R1,??DataTable2_11  ;; 0x400264a0
   \   000009BE   0x4288             CMP      R0,R1
   \   000009C0   0xBF0C             ITE      EQ 
   \   000009C2   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   000009C6   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_108: (+1)
   \   000009CA   0xF8C7 0x040C      STR      R0,[R7, #+1036]
   \   000009CE   0xE040             B.N      ??HAL_DMA_PollForTransfer_105
   \                     ??HAL_DMA_PollForTransfer_107: (+1)
   \   000009D0   0x....             LDR.N    R1,??DataTable2_16  ;; 0x400260b9
   \   000009D2   0x4288             CMP      R0,R1
   \   000009D4   0xD314             BCC.N    ??HAL_DMA_PollForTransfer_109
   \   000009D6   0x....             LDR.N    R1,??DataTable2_1  ;; 0x40026410
   \   000009D8   0x4288             CMP      R0,R1
   \   000009DA   0xBF08             IT       EQ 
   \   000009DC   0x2010             MOVEQ    R0,#+16
   \   000009DE   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_110
   \   000009E0   0x....             LDR.N    R1,??DataTable2_5  ;; 0x40026428
   \   000009E2   0x4288             CMP      R0,R1
   \   000009E4   0xBF08             IT       EQ 
   \   000009E6   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   000009EA   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_110
   \   000009EC   0x....             LDR.N    R1,??DataTable2_9  ;; 0x40026440
   \   000009EE   0x4288             CMP      R0,R1
   \   000009F0   0xBF0C             ITE      EQ 
   \   000009F2   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   000009F6   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_110: (+1)
   \   000009FA   0xF8C7 0x0408      STR      R0,[R7, #+1032]
   \   000009FE   0xE028             B.N      ??HAL_DMA_PollForTransfer_105
   \                     ??HAL_DMA_PollForTransfer_109: (+1)
   \   00000A00   0x....             LDR.N    R1,??DataTable2_17  ;; 0x40026059
   \   00000A02   0x4288             CMP      R0,R1
   \   00000A04   0xD313             BCC.N    ??HAL_DMA_PollForTransfer_111
   \   00000A06   0x....             LDR.N    R1,??DataTable2_2  ;; 0x40026070
   \   00000A08   0x4288             CMP      R0,R1
   \   00000A0A   0xBF08             IT       EQ 
   \   00000A0C   0x2010             MOVEQ    R0,#+16
   \   00000A0E   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_112
   \   00000A10   0x....             LDR.N    R1,??DataTable2_6  ;; 0x40026088
   \   00000A12   0x4288             CMP      R0,R1
   \   00000A14   0xBF08             IT       EQ 
   \   00000A16   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   00000A1A   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_112
   \   00000A1C   0x....             LDR.N    R1,??DataTable2_10  ;; 0x400260a0
   \   00000A1E   0x4288             CMP      R0,R1
   \   00000A20   0xBF0C             ITE      EQ 
   \   00000A22   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   00000A26   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_112: (+1)
   \   00000A2A   0x60F8             STR      R0,[R7, #+12]
   \   00000A2C   0xE011             B.N      ??HAL_DMA_PollForTransfer_105
   \                     ??HAL_DMA_PollForTransfer_111: (+1)
   \   00000A2E   0x4548             CMP      R0,R9
   \   00000A30   0xBF08             IT       EQ 
   \   00000A32   0x2010             MOVEQ    R0,#+16
   \   00000A34   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_113
   \   00000A36   0x....             LDR.N    R1,??DataTable2_4  ;; 0x40026028
   \   00000A38   0x4288             CMP      R0,R1
   \   00000A3A   0xBF08             IT       EQ 
   \   00000A3C   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   00000A40   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_113
   \   00000A42   0x....             LDR.N    R1,??DataTable2_8  ;; 0x40026040
   \   00000A44   0x4288             CMP      R0,R1
   \   00000A46   0xBF0C             ITE      EQ 
   \   00000A48   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   00000A4C   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_113: (+1)
   \   00000A50   0x60B8             STR      R0,[R7, #+8]
    661          
    662                /* Change DMA peripheral state */
    663                hdma->State = HAL_DMA_STATE_READY_HALF_MEM0;
   \                     ??HAL_DMA_PollForTransfer_105: (+1)
   \   00000A52   0x2031             MOVS     R0,#+49
   \                     ??HAL_DMA_PollForTransfer_106: (+1)
   \   00000A54   0xF884 0x0035      STRB     R0,[R4, #+53]
    664              }
    665            }
    666            return HAL_OK;
   \                     ??HAL_DMA_PollForTransfer_95: (+1)
   \   00000A58   0x2000             MOVS     R0,#+0
   \   00000A5A   0xB003             ADD      SP,SP,#+12
   \   00000A5C   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    667          }
    668          
    669          /**
    670            * @brief  Handles DMA interrupt request.
    671            * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
    672            *               the configuration information for the specified DMA Stream.  
    673            * @retval None
    674            */

   \                                 In section .text, align 2, keep-with-next
    675          void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
    676          {
   \                     HAL_DMA_IRQHandler: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x4604             MOV      R4,R0
    677            /* Transfer Error Interrupt management ***************************************/
    678            if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_TE_FLAG_INDEX(hdma)) != RESET)
   \   00000006   0x.... 0x....      LDR.W    R8,??DataTable3  ;; 0x40026459
   \   0000000A   0x.... 0x....      LDR.W    R5,??DataTable3_1  ;; 0x40026000
   \   0000000E   0x.... 0x....      LDR.W    R6,??DataTable3_2  ;; 0x400260b9
   \   00000012   0x6820             LDR      R0,[R4, #+0]
   \   00000014   0x.... 0x....      LDR.W    R7,??DataTable3_3  ;; 0x40026470
   \   00000018   0x4540             CMP      R0,R8
   \   0000001A   0xD315             BCC.N    ??HAL_DMA_IRQHandler_0
   \   0000001C   0x42B8             CMP      R0,R7
   \   0000001E   0xF8D5 0x2404      LDR      R2,[R5, #+1028]
   \   00000022   0xBF08             IT       EQ 
   \   00000024   0x2108             MOVEQ    R1,#+8
   \   00000026   0xD05A             BEQ.N    ??HAL_DMA_IRQHandler_1
   \   00000028   0x.... 0x....      LDR.W    R3,??DataTable3_4  ;; 0x40026488
   \   0000002C   0x4298             CMP      R0,R3
   \   0000002E   0xBF08             IT       EQ 
   \   00000030   0xF44F 0x7100      MOVEQ    R1,#+512
   \   00000034   0xD053             BEQ.N    ??HAL_DMA_IRQHandler_1
   \   00000036   0x.... 0x....      LDR.W    R3,??DataTable3_5  ;; 0x400264a0
   \   0000003A   0x4298             CMP      R0,R3
   \   0000003C   0xBF14             ITE      NE 
   \   0000003E   0xF04F 0x7100      MOVNE    R1,#+33554432
   \   00000042   0xF44F 0x2100      MOVEQ    R1,#+524288
   \   00000046   0xE04A             B.N      ??HAL_DMA_IRQHandler_1
   \                     ??HAL_DMA_IRQHandler_0: (+1)
   \   00000048   0x42B0             CMP      R0,R6
   \   0000004A   0xD317             BCC.N    ??HAL_DMA_IRQHandler_2
   \   0000004C   0x.... 0x....      LDR.W    R3,??DataTable3_6  ;; 0x40026410
   \   00000050   0xF8D5 0x2400      LDR      R2,[R5, #+1024]
   \   00000054   0x4298             CMP      R0,R3
   \   00000056   0xBF08             IT       EQ 
   \   00000058   0x2108             MOVEQ    R1,#+8
   \   0000005A   0xD040             BEQ.N    ??HAL_DMA_IRQHandler_1
   \   0000005C   0x.... 0x....      LDR.W    R3,??DataTable3_7  ;; 0x40026428
   \   00000060   0x4298             CMP      R0,R3
   \   00000062   0xBF08             IT       EQ 
   \   00000064   0xF44F 0x7100      MOVEQ    R1,#+512
   \   00000068   0xD039             BEQ.N    ??HAL_DMA_IRQHandler_1
   \   0000006A   0x.... 0x....      LDR.W    R3,??DataTable3_8  ;; 0x40026440
   \   0000006E   0x4298             CMP      R0,R3
   \   00000070   0xBF14             ITE      NE 
   \   00000072   0xF04F 0x7100      MOVNE    R1,#+33554432
   \   00000076   0xF44F 0x2100      MOVEQ    R1,#+524288
   \   0000007A   0xE030             B.N      ??HAL_DMA_IRQHandler_1
   \                     ??HAL_DMA_IRQHandler_2: (+1)
   \   0000007C   0x.... 0x....      LDR.W    R2,??DataTable3_9  ;; 0x40026059
   \   00000080   0x4290             CMP      R0,R2
   \   00000082   0xD316             BCC.N    ??HAL_DMA_IRQHandler_3
   \   00000084   0x.... 0x....      LDR.W    R3,??DataTable3_10  ;; 0x40026070
   \   00000088   0x686A             LDR      R2,[R5, #+4]
   \   0000008A   0x4298             CMP      R0,R3
   \   0000008C   0xBF08             IT       EQ 
   \   0000008E   0x2108             MOVEQ    R1,#+8
   \   00000090   0xD025             BEQ.N    ??HAL_DMA_IRQHandler_1
   \   00000092   0x.... 0x....      LDR.W    R3,??DataTable3_11  ;; 0x40026088
   \   00000096   0x4298             CMP      R0,R3
   \   00000098   0xBF08             IT       EQ 
   \   0000009A   0xF44F 0x7100      MOVEQ    R1,#+512
   \   0000009E   0xD01E             BEQ.N    ??HAL_DMA_IRQHandler_1
   \   000000A0   0x.... 0x....      LDR.W    R3,??DataTable3_12  ;; 0x400260a0
   \   000000A4   0x4298             CMP      R0,R3
   \   000000A6   0xBF14             ITE      NE 
   \   000000A8   0xF04F 0x7100      MOVNE    R1,#+33554432
   \   000000AC   0xF44F 0x2100      MOVEQ    R1,#+524288
   \   000000B0   0xE015             B.N      ??HAL_DMA_IRQHandler_1
   \                     ??HAL_DMA_IRQHandler_3: (+1)
   \   000000B2   0x.... 0x....      LDR.W    R3,??DataTable3_13  ;; 0x40026010
   \   000000B6   0x682A             LDR      R2,[R5, #+0]
   \   000000B8   0x4298             CMP      R0,R3
   \   000000BA   0xBF08             IT       EQ 
   \   000000BC   0x2108             MOVEQ    R1,#+8
   \   000000BE   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_1
   \   000000C0   0x.... 0x....      LDR.W    R3,??DataTable3_14  ;; 0x40026028
   \   000000C4   0x4298             CMP      R0,R3
   \   000000C6   0xBF08             IT       EQ 
   \   000000C8   0xF44F 0x7100      MOVEQ    R1,#+512
   \   000000CC   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_1
   \   000000CE   0x.... 0x....      LDR.W    R3,??DataTable3_15  ;; 0x40026040
   \   000000D2   0x4298             CMP      R0,R3
   \   000000D4   0xBF0C             ITE      EQ 
   \   000000D6   0xF44F 0x2100      MOVEQ    R1,#+524288
   \   000000DA   0xF04F 0x7100      MOVNE    R1,#+33554432
   \                     ??HAL_DMA_IRQHandler_1: (+1)
   \   000000DE   0x4011             ANDS     R1,R1,R2
   \   000000E0   0xD079             BEQ.N    ??HAL_DMA_IRQHandler_4
    679            {
    680              if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
   \   000000E2   0x6801             LDR      R1,[R0, #+0]
   \   000000E4   0x0749             LSLS     R1,R1,#+29
   \   000000E6   0xD576             BPL.N    ??HAL_DMA_IRQHandler_4
    681              {
    682                /* Disable the transfer error interrupt */
    683                __HAL_DMA_DISABLE_IT(hdma, DMA_IT_TE);
   \   000000E8   0x6801             LDR      R1,[R0, #+0]
   \   000000EA   0xF021 0x0104      BIC      R1,R1,#0x4
   \   000000EE   0x6001             STR      R1,[R0, #+0]
    684          
    685                /* Clear the transfer error flag */
    686                __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TE_FLAG_INDEX(hdma));
   \   000000F0   0x6820             LDR      R0,[R4, #+0]
   \   000000F2   0x4540             CMP      R0,R8
   \   000000F4   0xD315             BCC.N    ??HAL_DMA_IRQHandler_5
   \   000000F6   0x42B8             CMP      R0,R7
   \   000000F8   0xBF08             IT       EQ 
   \   000000FA   0x2008             MOVEQ    R0,#+8
   \   000000FC   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_6
   \   000000FE   0x.... 0x....      LDR.W    R1,??DataTable3_4  ;; 0x40026488
   \   00000102   0x4288             CMP      R0,R1
   \   00000104   0xBF08             IT       EQ 
   \   00000106   0xF44F 0x7000      MOVEQ    R0,#+512
   \   0000010A   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_6
   \   0000010C   0x.... 0x....      LDR.W    R1,??DataTable3_5  ;; 0x400264a0
   \   00000110   0x4288             CMP      R0,R1
   \   00000112   0xBF0C             ITE      EQ 
   \   00000114   0xF44F 0x2000      MOVEQ    R0,#+524288
   \   00000118   0xF04F 0x7000      MOVNE    R0,#+33554432
   \                     ??HAL_DMA_IRQHandler_6: (+1)
   \   0000011C   0xF8C5 0x040C      STR      R0,[R5, #+1036]
   \   00000120   0xE04A             B.N      ??HAL_DMA_IRQHandler_7
   \                     ??HAL_DMA_IRQHandler_5: (+1)
   \   00000122   0x42B0             CMP      R0,R6
   \   00000124   0xD317             BCC.N    ??HAL_DMA_IRQHandler_8
   \   00000126   0x.... 0x....      LDR.W    R1,??DataTable3_6  ;; 0x40026410
   \   0000012A   0x4288             CMP      R0,R1
   \   0000012C   0xBF08             IT       EQ 
   \   0000012E   0x2008             MOVEQ    R0,#+8
   \   00000130   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_9
   \   00000132   0x.... 0x....      LDR.W    R1,??DataTable3_7  ;; 0x40026428
   \   00000136   0x4288             CMP      R0,R1
   \   00000138   0xBF08             IT       EQ 
   \   0000013A   0xF44F 0x7000      MOVEQ    R0,#+512
   \   0000013E   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_9
   \   00000140   0x.... 0x....      LDR.W    R1,??DataTable3_8  ;; 0x40026440
   \   00000144   0x4288             CMP      R0,R1
   \   00000146   0xBF0C             ITE      EQ 
   \   00000148   0xF44F 0x2000      MOVEQ    R0,#+524288
   \   0000014C   0xF04F 0x7000      MOVNE    R0,#+33554432
   \                     ??HAL_DMA_IRQHandler_9: (+1)
   \   00000150   0xF8C5 0x0408      STR      R0,[R5, #+1032]
   \   00000154   0xE030             B.N      ??HAL_DMA_IRQHandler_7
   \                     ??HAL_DMA_IRQHandler_8: (+1)
   \   00000156   0x.... 0x....      LDR.W    R1,??DataTable3_9  ;; 0x40026059
   \   0000015A   0x4288             CMP      R0,R1
   \   0000015C   0xD316             BCC.N    ??HAL_DMA_IRQHandler_10
   \   0000015E   0x.... 0x....      LDR.W    R1,??DataTable3_10  ;; 0x40026070
   \   00000162   0x4288             CMP      R0,R1
   \   00000164   0xBF08             IT       EQ 
   \   00000166   0x2008             MOVEQ    R0,#+8
   \   00000168   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_11
   \   0000016A   0x.... 0x....      LDR.W    R1,??DataTable3_11  ;; 0x40026088
   \   0000016E   0x4288             CMP      R0,R1
   \   00000170   0xBF08             IT       EQ 
   \   00000172   0xF44F 0x7000      MOVEQ    R0,#+512
   \   00000176   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_11
   \   00000178   0x.... 0x....      LDR.W    R1,??DataTable3_12  ;; 0x400260a0
   \   0000017C   0x4288             CMP      R0,R1
   \   0000017E   0xBF0C             ITE      EQ 
   \   00000180   0xF44F 0x2000      MOVEQ    R0,#+524288
   \   00000184   0xF04F 0x7000      MOVNE    R0,#+33554432
   \                     ??HAL_DMA_IRQHandler_11: (+1)
   \   00000188   0x60E8             STR      R0,[R5, #+12]
   \   0000018A   0xE015             B.N      ??HAL_DMA_IRQHandler_7
   \                     ??HAL_DMA_IRQHandler_10: (+1)
   \   0000018C   0x.... 0x....      LDR.W    R1,??DataTable3_13  ;; 0x40026010
   \   00000190   0x4288             CMP      R0,R1
   \   00000192   0xBF08             IT       EQ 
   \   00000194   0x2008             MOVEQ    R0,#+8
   \   00000196   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_12
   \   00000198   0x.... 0x....      LDR.W    R1,??DataTable3_14  ;; 0x40026028
   \   0000019C   0x4288             CMP      R0,R1
   \   0000019E   0xBF08             IT       EQ 
   \   000001A0   0xF44F 0x7000      MOVEQ    R0,#+512
   \   000001A4   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_12
   \   000001A6   0x.... 0x....      LDR.W    R1,??DataTable3_15  ;; 0x40026040
   \   000001AA   0x4288             CMP      R0,R1
   \   000001AC   0xBF0C             ITE      EQ 
   \   000001AE   0xF44F 0x2000      MOVEQ    R0,#+524288
   \   000001B2   0xF04F 0x7000      MOVNE    R0,#+33554432
   \                     ??HAL_DMA_IRQHandler_12: (+1)
   \   000001B6   0x60A8             STR      R0,[R5, #+8]
    687          
    688                /* Update error code */
    689                hdma->ErrorCode |= HAL_DMA_ERROR_TE;
   \                     ??HAL_DMA_IRQHandler_7: (+1)
   \   000001B8   0x6CE0             LDR      R0,[R4, #+76]
   \   000001BA   0xF040 0x0001      ORR      R0,R0,#0x1
   \   000001BE   0x64E0             STR      R0,[R4, #+76]
    690          
    691                /* Change the DMA state */
    692                hdma->State = HAL_DMA_STATE_ERROR;
   \   000001C0   0x2004             MOVS     R0,#+4
   \   000001C2   0xF884 0x0035      STRB     R0,[R4, #+53]
    693          
    694                /* Process Unlocked */
    695                __HAL_UNLOCK(hdma); 
   \   000001C6   0x2000             MOVS     R0,#+0
    696          
    697                if(hdma->XferErrorCallback != NULL)
   \   000001C8   0x6CA1             LDR      R1,[R4, #+72]
   \   000001CA   0xF884 0x0034      STRB     R0,[R4, #+52]
   \   000001CE   0x0008             MOVS     R0,R1
   \   000001D0   0xBF1C             ITT      NE 
    698                {
    699                  /* Transfer error callback */
    700                  hdma->XferErrorCallback(hdma);
   \   000001D2   0x4620             MOVNE    R0,R4
   \   000001D4   0x4788             BLXNE    R1
    701                }
    702              }
    703            }
    704            /* FIFO Error Interrupt management ******************************************/
    705            if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_FE_FLAG_INDEX(hdma)) != RESET)
   \                     ??HAL_DMA_IRQHandler_4: (+1)
   \   000001D6   0x6820             LDR      R0,[R4, #+0]
   \   000001D8   0x4540             CMP      R0,R8
   \   000001DA   0xD315             BCC.N    ??HAL_DMA_IRQHandler_13
   \   000001DC   0x42B8             CMP      R0,R7
   \   000001DE   0xF8D5 0x2404      LDR      R2,[R5, #+1028]
   \   000001E2   0xBF08             IT       EQ 
   \   000001E4   0x.... 0x....      LDREQ.W  R1,??DataTable3_16  ;; 0x800001
   \   000001E8   0xD059             BEQ.N    ??HAL_DMA_IRQHandler_14
   \   000001EA   0x.... 0x....      LDR.W    R3,??DataTable3_4  ;; 0x40026488
   \   000001EE   0x4298             CMP      R0,R3
   \   000001F0   0xBF08             IT       EQ 
   \   000001F2   0x2140             MOVEQ    R1,#+64
   \   000001F4   0xD053             BEQ.N    ??HAL_DMA_IRQHandler_14
   \   000001F6   0x.... 0x....      LDR.W    R3,??DataTable3_5  ;; 0x400264a0
   \   000001FA   0x4298             CMP      R0,R3
   \   000001FC   0xBF14             ITE      NE 
   \   000001FE   0xF44F 0x0180      MOVNE    R1,#+4194304
   \   00000202   0xF44F 0x3180      MOVEQ    R1,#+65536
   \   00000206   0xE04A             B.N      ??HAL_DMA_IRQHandler_14
   \                     ??HAL_DMA_IRQHandler_13: (+1)
   \   00000208   0x42B0             CMP      R0,R6
   \   0000020A   0xD317             BCC.N    ??HAL_DMA_IRQHandler_15
   \   0000020C   0x.... 0x....      LDR.W    R3,??DataTable3_6  ;; 0x40026410
   \   00000210   0xF8D5 0x2400      LDR      R2,[R5, #+1024]
   \   00000214   0x4298             CMP      R0,R3
   \   00000216   0xBF08             IT       EQ 
   \   00000218   0x.... 0x....      LDREQ.W  R1,??DataTable3_16  ;; 0x800001
   \   0000021C   0xD03F             BEQ.N    ??HAL_DMA_IRQHandler_14
   \   0000021E   0x.... 0x....      LDR.W    R3,??DataTable3_7  ;; 0x40026428
   \   00000222   0x4298             CMP      R0,R3
   \   00000224   0xBF08             IT       EQ 
   \   00000226   0x2140             MOVEQ    R1,#+64
   \   00000228   0xD039             BEQ.N    ??HAL_DMA_IRQHandler_14
   \   0000022A   0x.... 0x....      LDR.W    R3,??DataTable3_8  ;; 0x40026440
   \   0000022E   0x4298             CMP      R0,R3
   \   00000230   0xBF14             ITE      NE 
   \   00000232   0xF44F 0x0180      MOVNE    R1,#+4194304
   \   00000236   0xF44F 0x3180      MOVEQ    R1,#+65536
   \   0000023A   0xE030             B.N      ??HAL_DMA_IRQHandler_14
   \                     ??HAL_DMA_IRQHandler_15: (+1)
   \   0000023C   0x.... 0x....      LDR.W    R2,??DataTable3_9  ;; 0x40026059
   \   00000240   0x4290             CMP      R0,R2
   \   00000242   0xD316             BCC.N    ??HAL_DMA_IRQHandler_16
   \   00000244   0x.... 0x....      LDR.W    R3,??DataTable3_10  ;; 0x40026070
   \   00000248   0x686A             LDR      R2,[R5, #+4]
   \   0000024A   0x4298             CMP      R0,R3
   \   0000024C   0xBF08             IT       EQ 
   \   0000024E   0x.... 0x....      LDREQ.W  R1,??DataTable3_16  ;; 0x800001
   \   00000252   0xD024             BEQ.N    ??HAL_DMA_IRQHandler_14
   \   00000254   0x.... 0x....      LDR.W    R3,??DataTable3_11  ;; 0x40026088
   \   00000258   0x4298             CMP      R0,R3
   \   0000025A   0xBF08             IT       EQ 
   \   0000025C   0x2140             MOVEQ    R1,#+64
   \   0000025E   0xD01E             BEQ.N    ??HAL_DMA_IRQHandler_14
   \   00000260   0x.... 0x....      LDR.W    R3,??DataTable3_12  ;; 0x400260a0
   \   00000264   0x4298             CMP      R0,R3
   \   00000266   0xBF14             ITE      NE 
   \   00000268   0xF44F 0x0180      MOVNE    R1,#+4194304
   \   0000026C   0xF44F 0x3180      MOVEQ    R1,#+65536
   \   00000270   0xE015             B.N      ??HAL_DMA_IRQHandler_14
   \                     ??HAL_DMA_IRQHandler_16: (+1)
   \   00000272   0x.... 0x....      LDR.W    R3,??DataTable3_13  ;; 0x40026010
   \   00000276   0x682A             LDR      R2,[R5, #+0]
   \   00000278   0x4298             CMP      R0,R3
   \   0000027A   0xBF08             IT       EQ 
   \   0000027C   0x.... 0x....      LDREQ.W  R1,??DataTable3_16  ;; 0x800001
   \   00000280   0xD00D             BEQ.N    ??HAL_DMA_IRQHandler_14
   \   00000282   0x.... 0x....      LDR.W    R3,??DataTable3_14  ;; 0x40026028
   \   00000286   0x4298             CMP      R0,R3
   \   00000288   0xBF08             IT       EQ 
   \   0000028A   0x2140             MOVEQ    R1,#+64
   \   0000028C   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_14
   \   0000028E   0x.... 0x....      LDR.W    R3,??DataTable3_15  ;; 0x40026040
   \   00000292   0x4298             CMP      R0,R3
   \   00000294   0xBF0C             ITE      EQ 
   \   00000296   0xF44F 0x3180      MOVEQ    R1,#+65536
   \   0000029A   0xF44F 0x0180      MOVNE    R1,#+4194304
   \                     ??HAL_DMA_IRQHandler_14: (+1)
   \   0000029E   0x4011             ANDS     R1,R1,R2
   \   000002A0   0xD079             BEQ.N    ??HAL_DMA_IRQHandler_17
    706            {
    707              if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
   \   000002A2   0x6941             LDR      R1,[R0, #+20]
   \   000002A4   0x0609             LSLS     R1,R1,#+24
   \   000002A6   0xD576             BPL.N    ??HAL_DMA_IRQHandler_17
    708              {
    709                /* Disable the FIFO Error interrupt */
    710                __HAL_DMA_DISABLE_IT(hdma, DMA_IT_FE);
   \   000002A8   0x6941             LDR      R1,[R0, #+20]
   \   000002AA   0xF021 0x0180      BIC      R1,R1,#0x80
   \   000002AE   0x6141             STR      R1,[R0, #+20]
    711          
    712                /* Clear the FIFO error flag */
    713                __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_FE_FLAG_INDEX(hdma));
   \   000002B0   0x6820             LDR      R0,[R4, #+0]
   \   000002B2   0x4540             CMP      R0,R8
   \   000002B4   0xD315             BCC.N    ??HAL_DMA_IRQHandler_18
   \   000002B6   0x42B8             CMP      R0,R7
   \   000002B8   0xBF08             IT       EQ 
   \   000002BA   0x.... 0x....      LDREQ.W  R0,??DataTable3_16  ;; 0x800001
   \   000002BE   0xD00D             BEQ.N    ??HAL_DMA_IRQHandler_19
   \   000002C0   0x.... 0x....      LDR.W    R1,??DataTable3_4  ;; 0x40026488
   \   000002C4   0x4288             CMP      R0,R1
   \   000002C6   0xBF08             IT       EQ 
   \   000002C8   0x2040             MOVEQ    R0,#+64
   \   000002CA   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_19
   \   000002CC   0x.... 0x....      LDR.W    R1,??DataTable3_5  ;; 0x400264a0
   \   000002D0   0x4288             CMP      R0,R1
   \   000002D2   0xBF0C             ITE      EQ 
   \   000002D4   0xF44F 0x3080      MOVEQ    R0,#+65536
   \   000002D8   0xF44F 0x0080      MOVNE    R0,#+4194304
   \                     ??HAL_DMA_IRQHandler_19: (+1)
   \   000002DC   0xF8C5 0x040C      STR      R0,[R5, #+1036]
   \   000002E0   0xE04A             B.N      ??HAL_DMA_IRQHandler_20
   \                     ??HAL_DMA_IRQHandler_18: (+1)
   \   000002E2   0x42B0             CMP      R0,R6
   \   000002E4   0xD317             BCC.N    ??HAL_DMA_IRQHandler_21
   \   000002E6   0x.... 0x....      LDR.W    R1,??DataTable3_6  ;; 0x40026410
   \   000002EA   0x4288             CMP      R0,R1
   \   000002EC   0xBF08             IT       EQ 
   \   000002EE   0x.... 0x....      LDREQ.W  R0,??DataTable3_16  ;; 0x800001
   \   000002F2   0xD00D             BEQ.N    ??HAL_DMA_IRQHandler_22
   \   000002F4   0x.... 0x....      LDR.W    R1,??DataTable3_7  ;; 0x40026428
   \   000002F8   0x4288             CMP      R0,R1
   \   000002FA   0xBF08             IT       EQ 
   \   000002FC   0x2040             MOVEQ    R0,#+64
   \   000002FE   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_22
   \   00000300   0x.... 0x....      LDR.W    R1,??DataTable3_8  ;; 0x40026440
   \   00000304   0x4288             CMP      R0,R1
   \   00000306   0xBF0C             ITE      EQ 
   \   00000308   0xF44F 0x3080      MOVEQ    R0,#+65536
   \   0000030C   0xF44F 0x0080      MOVNE    R0,#+4194304
   \                     ??HAL_DMA_IRQHandler_22: (+1)
   \   00000310   0xF8C5 0x0408      STR      R0,[R5, #+1032]
   \   00000314   0xE030             B.N      ??HAL_DMA_IRQHandler_20
   \                     ??HAL_DMA_IRQHandler_21: (+1)
   \   00000316   0x.... 0x....      LDR.W    R1,??DataTable3_9  ;; 0x40026059
   \   0000031A   0x4288             CMP      R0,R1
   \   0000031C   0xD316             BCC.N    ??HAL_DMA_IRQHandler_23
   \   0000031E   0x.... 0x....      LDR.W    R1,??DataTable3_10  ;; 0x40026070
   \   00000322   0x4288             CMP      R0,R1
   \   00000324   0xBF08             IT       EQ 
   \   00000326   0x.... 0x....      LDREQ.W  R0,??DataTable3_16  ;; 0x800001
   \   0000032A   0xD00D             BEQ.N    ??HAL_DMA_IRQHandler_24
   \   0000032C   0x.... 0x....      LDR.W    R1,??DataTable3_11  ;; 0x40026088
   \   00000330   0x4288             CMP      R0,R1
   \   00000332   0xBF08             IT       EQ 
   \   00000334   0x2040             MOVEQ    R0,#+64
   \   00000336   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_24
   \   00000338   0x.... 0x....      LDR.W    R1,??DataTable3_12  ;; 0x400260a0
   \   0000033C   0x4288             CMP      R0,R1
   \   0000033E   0xBF0C             ITE      EQ 
   \   00000340   0xF44F 0x3080      MOVEQ    R0,#+65536
   \   00000344   0xF44F 0x0080      MOVNE    R0,#+4194304
   \                     ??HAL_DMA_IRQHandler_24: (+1)
   \   00000348   0x60E8             STR      R0,[R5, #+12]
   \   0000034A   0xE015             B.N      ??HAL_DMA_IRQHandler_20
   \                     ??HAL_DMA_IRQHandler_23: (+1)
   \   0000034C   0x.... 0x....      LDR.W    R1,??DataTable3_13  ;; 0x40026010
   \   00000350   0x4288             CMP      R0,R1
   \   00000352   0xBF08             IT       EQ 
   \   00000354   0x.... 0x....      LDREQ.W  R0,??DataTable3_16  ;; 0x800001
   \   00000358   0xD00D             BEQ.N    ??HAL_DMA_IRQHandler_25
   \   0000035A   0x.... 0x....      LDR.W    R1,??DataTable3_14  ;; 0x40026028
   \   0000035E   0x4288             CMP      R0,R1
   \   00000360   0xBF08             IT       EQ 
   \   00000362   0x2040             MOVEQ    R0,#+64
   \   00000364   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_25
   \   00000366   0x.... 0x....      LDR.W    R1,??DataTable3_15  ;; 0x40026040
   \   0000036A   0x4288             CMP      R0,R1
   \   0000036C   0xBF0C             ITE      EQ 
   \   0000036E   0xF44F 0x3080      MOVEQ    R0,#+65536
   \   00000372   0xF44F 0x0080      MOVNE    R0,#+4194304
   \                     ??HAL_DMA_IRQHandler_25: (+1)
   \   00000376   0x60A8             STR      R0,[R5, #+8]
    714          
    715                /* Update error code */
    716                hdma->ErrorCode |= HAL_DMA_ERROR_FE;
   \                     ??HAL_DMA_IRQHandler_20: (+1)
   \   00000378   0x6CE0             LDR      R0,[R4, #+76]
   \   0000037A   0xF040 0x0002      ORR      R0,R0,#0x2
   \   0000037E   0x64E0             STR      R0,[R4, #+76]
    717          
    718                /* Change the DMA state */
    719                hdma->State = HAL_DMA_STATE_ERROR;
   \   00000380   0x2004             MOVS     R0,#+4
   \   00000382   0xF884 0x0035      STRB     R0,[R4, #+53]
    720          
    721                /* Process Unlocked */
    722                __HAL_UNLOCK(hdma);
   \   00000386   0x2000             MOVS     R0,#+0
    723          
    724                if(hdma->XferErrorCallback != NULL)
   \   00000388   0x6CA1             LDR      R1,[R4, #+72]
   \   0000038A   0xF884 0x0034      STRB     R0,[R4, #+52]
   \   0000038E   0x0008             MOVS     R0,R1
   \   00000390   0xBF1C             ITT      NE 
    725                {
    726                  /* Transfer error callback */
    727                  hdma->XferErrorCallback(hdma);
   \   00000392   0x4620             MOVNE    R0,R4
   \   00000394   0x4788             BLXNE    R1
    728                }
    729              }
    730            }
    731            /* Direct Mode Error Interrupt management ***********************************/
    732            if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_DME_FLAG_INDEX(hdma)) != RESET)
   \                     ??HAL_DMA_IRQHandler_17: (+1)
   \   00000396   0x6820             LDR      R0,[R4, #+0]
   \   00000398   0x4540             CMP      R0,R8
   \   0000039A   0xD316             BCC.N    ??HAL_DMA_IRQHandler_26
   \   0000039C   0x42B8             CMP      R0,R7
   \   0000039E   0xF8D5 0x2404      LDR      R2,[R5, #+1028]
   \   000003A2   0xBF08             IT       EQ 
   \   000003A4   0x.... 0x....      LDREQ.W  R1,??DataTable3_17  ;; 0x800004
   \   000003A8   0xD05D             BEQ.N    ??HAL_DMA_IRQHandler_27
   \   000003AA   0x.... 0x....      LDR.W    R3,??DataTable3_4  ;; 0x40026488
   \   000003AE   0x4298             CMP      R0,R3
   \   000003B0   0xBF08             IT       EQ 
   \   000003B2   0xF44F 0x7180      MOVEQ    R1,#+256
   \   000003B6   0xD056             BEQ.N    ??HAL_DMA_IRQHandler_27
   \   000003B8   0x.... 0x....      LDR.W    R3,??DataTable3_5  ;; 0x400264a0
   \   000003BC   0x4298             CMP      R0,R3
   \   000003BE   0xBF14             ITE      NE 
   \   000003C0   0xF04F 0x7180      MOVNE    R1,#+16777216
   \   000003C4   0xF44F 0x2180      MOVEQ    R1,#+262144
   \   000003C8   0xE04D             B.N      ??HAL_DMA_IRQHandler_27
   \                     ??HAL_DMA_IRQHandler_26: (+1)
   \   000003CA   0x42B0             CMP      R0,R6
   \   000003CC   0xD318             BCC.N    ??HAL_DMA_IRQHandler_28
   \   000003CE   0x.... 0x....      LDR.W    R3,??DataTable3_6  ;; 0x40026410
   \   000003D2   0xF8D5 0x2400      LDR      R2,[R5, #+1024]
   \   000003D6   0x4298             CMP      R0,R3
   \   000003D8   0xBF08             IT       EQ 
   \   000003DA   0x.... 0x....      LDREQ.W  R1,??DataTable3_17  ;; 0x800004
   \   000003DE   0xD042             BEQ.N    ??HAL_DMA_IRQHandler_27
   \   000003E0   0x.... 0x....      LDR.W    R3,??DataTable3_7  ;; 0x40026428
   \   000003E4   0x4298             CMP      R0,R3
   \   000003E6   0xBF08             IT       EQ 
   \   000003E8   0xF44F 0x7180      MOVEQ    R1,#+256
   \   000003EC   0xD03B             BEQ.N    ??HAL_DMA_IRQHandler_27
   \   000003EE   0x.... 0x....      LDR.W    R3,??DataTable3_8  ;; 0x40026440
   \   000003F2   0x4298             CMP      R0,R3
   \   000003F4   0xBF14             ITE      NE 
   \   000003F6   0xF04F 0x7180      MOVNE    R1,#+16777216
   \   000003FA   0xF44F 0x2180      MOVEQ    R1,#+262144
   \   000003FE   0xE032             B.N      ??HAL_DMA_IRQHandler_27
   \                     ??HAL_DMA_IRQHandler_28: (+1)
   \   00000400   0x.... 0x....      LDR.W    R2,??DataTable3_9  ;; 0x40026059
   \   00000404   0x4290             CMP      R0,R2
   \   00000406   0xD317             BCC.N    ??HAL_DMA_IRQHandler_29
   \   00000408   0x.... 0x....      LDR.W    R3,??DataTable3_10  ;; 0x40026070
   \   0000040C   0x686A             LDR      R2,[R5, #+4]
   \   0000040E   0x4298             CMP      R0,R3
   \   00000410   0xBF08             IT       EQ 
   \   00000412   0x.... 0x....      LDREQ.W  R1,??DataTable3_17  ;; 0x800004
   \   00000416   0xD026             BEQ.N    ??HAL_DMA_IRQHandler_27
   \   00000418   0x.... 0x....      LDR.W    R3,??DataTable3_11  ;; 0x40026088
   \   0000041C   0x4298             CMP      R0,R3
   \   0000041E   0xBF08             IT       EQ 
   \   00000420   0xF44F 0x7180      MOVEQ    R1,#+256
   \   00000424   0xD01F             BEQ.N    ??HAL_DMA_IRQHandler_27
   \   00000426   0x.... 0x....      LDR.W    R3,??DataTable3_12  ;; 0x400260a0
   \   0000042A   0x4298             CMP      R0,R3
   \   0000042C   0xBF14             ITE      NE 
   \   0000042E   0xF04F 0x7180      MOVNE    R1,#+16777216
   \   00000432   0xF44F 0x2180      MOVEQ    R1,#+262144
   \   00000436   0xE016             B.N      ??HAL_DMA_IRQHandler_27
   \                     ??HAL_DMA_IRQHandler_29: (+1)
   \   00000438   0x.... 0x....      LDR.W    R3,??DataTable3_13  ;; 0x40026010
   \   0000043C   0x682A             LDR      R2,[R5, #+0]
   \   0000043E   0x4298             CMP      R0,R3
   \   00000440   0xBF08             IT       EQ 
   \   00000442   0x.... 0x....      LDREQ.W  R1,??DataTable3_17  ;; 0x800004
   \   00000446   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_27
   \   00000448   0x.... 0x....      LDR.W    R3,??DataTable3_14  ;; 0x40026028
   \   0000044C   0x4298             CMP      R0,R3
   \   0000044E   0xBF08             IT       EQ 
   \   00000450   0xF44F 0x7180      MOVEQ    R1,#+256
   \   00000454   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_27
   \   00000456   0x.... 0x....      LDR.W    R3,??DataTable3_15  ;; 0x40026040
   \   0000045A   0x4298             CMP      R0,R3
   \   0000045C   0xBF0C             ITE      EQ 
   \   0000045E   0xF44F 0x2180      MOVEQ    R1,#+262144
   \   00000462   0xF04F 0x7180      MOVNE    R1,#+16777216
   \                     ??HAL_DMA_IRQHandler_27: (+1)
   \   00000466   0x4011             ANDS     R1,R1,R2
   \   00000468   0xD07D             BEQ.N    ??HAL_DMA_IRQHandler_30
    733            {
    734              if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
   \   0000046A   0x6801             LDR      R1,[R0, #+0]
   \   0000046C   0x0789             LSLS     R1,R1,#+30
   \   0000046E   0xD57A             BPL.N    ??HAL_DMA_IRQHandler_30
    735              {
    736                /* Disable the direct mode Error interrupt */
    737                __HAL_DMA_DISABLE_IT(hdma, DMA_IT_DME);
   \   00000470   0x6801             LDR      R1,[R0, #+0]
   \   00000472   0xF021 0x0102      BIC      R1,R1,#0x2
   \   00000476   0x6001             STR      R1,[R0, #+0]
    738          
    739                /* Clear the direct mode error flag */
    740                __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_DME_FLAG_INDEX(hdma));
   \   00000478   0x6820             LDR      R0,[R4, #+0]
   \   0000047A   0x4540             CMP      R0,R8
   \   0000047C   0xD316             BCC.N    ??HAL_DMA_IRQHandler_31
   \   0000047E   0x42B8             CMP      R0,R7
   \   00000480   0xBF08             IT       EQ 
   \   00000482   0x.... 0x....      LDREQ.W  R0,??DataTable3_17  ;; 0x800004
   \   00000486   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_32
   \   00000488   0x.... 0x....      LDR.W    R1,??DataTable3_4  ;; 0x40026488
   \   0000048C   0x4288             CMP      R0,R1
   \   0000048E   0xBF08             IT       EQ 
   \   00000490   0xF44F 0x7080      MOVEQ    R0,#+256
   \   00000494   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_32
   \   00000496   0x.... 0x....      LDR.W    R1,??DataTable3_5  ;; 0x400264a0
   \   0000049A   0x4288             CMP      R0,R1
   \   0000049C   0xBF0C             ITE      EQ 
   \   0000049E   0xF44F 0x2080      MOVEQ    R0,#+262144
   \   000004A2   0xF04F 0x7080      MOVNE    R0,#+16777216
   \                     ??HAL_DMA_IRQHandler_32: (+1)
   \   000004A6   0xF8C5 0x040C      STR      R0,[R5, #+1036]
   \   000004AA   0xE04D             B.N      ??HAL_DMA_IRQHandler_33
   \                     ??HAL_DMA_IRQHandler_31: (+1)
   \   000004AC   0x42B0             CMP      R0,R6
   \   000004AE   0xD318             BCC.N    ??HAL_DMA_IRQHandler_34
   \   000004B0   0x.... 0x....      LDR.W    R1,??DataTable3_6  ;; 0x40026410
   \   000004B4   0x4288             CMP      R0,R1
   \   000004B6   0xBF08             IT       EQ 
   \   000004B8   0x.... 0x....      LDREQ.W  R0,??DataTable3_17  ;; 0x800004
   \   000004BC   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_35
   \   000004BE   0x.... 0x....      LDR.W    R1,??DataTable3_7  ;; 0x40026428
   \   000004C2   0x4288             CMP      R0,R1
   \   000004C4   0xBF08             IT       EQ 
   \   000004C6   0xF44F 0x7080      MOVEQ    R0,#+256
   \   000004CA   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_35
   \   000004CC   0x.... 0x....      LDR.W    R1,??DataTable3_8  ;; 0x40026440
   \   000004D0   0x4288             CMP      R0,R1
   \   000004D2   0xBF0C             ITE      EQ 
   \   000004D4   0xF44F 0x2080      MOVEQ    R0,#+262144
   \   000004D8   0xF04F 0x7080      MOVNE    R0,#+16777216
   \                     ??HAL_DMA_IRQHandler_35: (+1)
   \   000004DC   0xF8C5 0x0408      STR      R0,[R5, #+1032]
   \   000004E0   0xE032             B.N      ??HAL_DMA_IRQHandler_33
   \                     ??HAL_DMA_IRQHandler_34: (+1)
   \   000004E2   0x.... 0x....      LDR.W    R1,??DataTable3_9  ;; 0x40026059
   \   000004E6   0x4288             CMP      R0,R1
   \   000004E8   0xD317             BCC.N    ??HAL_DMA_IRQHandler_36
   \   000004EA   0x.... 0x....      LDR.W    R1,??DataTable3_10  ;; 0x40026070
   \   000004EE   0x4288             CMP      R0,R1
   \   000004F0   0xBF08             IT       EQ 
   \   000004F2   0x.... 0x....      LDREQ.W  R0,??DataTable3_17  ;; 0x800004
   \   000004F6   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_37
   \   000004F8   0x.... 0x....      LDR.W    R1,??DataTable3_11  ;; 0x40026088
   \   000004FC   0x4288             CMP      R0,R1
   \   000004FE   0xBF08             IT       EQ 
   \   00000500   0xF44F 0x7080      MOVEQ    R0,#+256
   \   00000504   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_37
   \   00000506   0x.... 0x....      LDR.W    R1,??DataTable3_12  ;; 0x400260a0
   \   0000050A   0x4288             CMP      R0,R1
   \   0000050C   0xBF0C             ITE      EQ 
   \   0000050E   0xF44F 0x2080      MOVEQ    R0,#+262144
   \   00000512   0xF04F 0x7080      MOVNE    R0,#+16777216
   \                     ??HAL_DMA_IRQHandler_37: (+1)
   \   00000516   0x60E8             STR      R0,[R5, #+12]
   \   00000518   0xE016             B.N      ??HAL_DMA_IRQHandler_33
   \                     ??HAL_DMA_IRQHandler_36: (+1)
   \   0000051A   0x.... 0x....      LDR.W    R1,??DataTable3_13  ;; 0x40026010
   \   0000051E   0x4288             CMP      R0,R1
   \   00000520   0xBF08             IT       EQ 
   \   00000522   0x.... 0x....      LDREQ.W  R0,??DataTable3_17  ;; 0x800004
   \   00000526   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_38
   \   00000528   0x.... 0x....      LDR.W    R1,??DataTable3_14  ;; 0x40026028
   \   0000052C   0x4288             CMP      R0,R1
   \   0000052E   0xBF08             IT       EQ 
   \   00000530   0xF44F 0x7080      MOVEQ    R0,#+256
   \   00000534   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_38
   \   00000536   0x.... 0x....      LDR.W    R1,??DataTable3_15  ;; 0x40026040
   \   0000053A   0x4288             CMP      R0,R1
   \   0000053C   0xBF0C             ITE      EQ 
   \   0000053E   0xF44F 0x2080      MOVEQ    R0,#+262144
   \   00000542   0xF04F 0x7080      MOVNE    R0,#+16777216
   \                     ??HAL_DMA_IRQHandler_38: (+1)
   \   00000546   0x60A8             STR      R0,[R5, #+8]
    741          
    742                /* Update error code */
    743                hdma->ErrorCode |= HAL_DMA_ERROR_DME;
   \                     ??HAL_DMA_IRQHandler_33: (+1)
   \   00000548   0x6CE0             LDR      R0,[R4, #+76]
   \   0000054A   0xF040 0x0004      ORR      R0,R0,#0x4
   \   0000054E   0x64E0             STR      R0,[R4, #+76]
    744          
    745                /* Change the DMA state */
    746                hdma->State = HAL_DMA_STATE_ERROR;
   \   00000550   0x2004             MOVS     R0,#+4
   \   00000552   0xF884 0x0035      STRB     R0,[R4, #+53]
    747          
    748                /* Process Unlocked */
    749                __HAL_UNLOCK(hdma);
   \   00000556   0x2000             MOVS     R0,#+0
    750          
    751                if(hdma->XferErrorCallback != NULL)
   \   00000558   0x6CA1             LDR      R1,[R4, #+72]
   \   0000055A   0xF884 0x0034      STRB     R0,[R4, #+52]
   \   0000055E   0x0008             MOVS     R0,R1
   \   00000560   0xBF1C             ITT      NE 
    752                {
    753                  /* Transfer error callback */
    754                  hdma->XferErrorCallback(hdma);
   \   00000562   0x4620             MOVNE    R0,R4
   \   00000564   0x4788             BLXNE    R1
    755                }
    756              }
    757            }
    758            /* Half Transfer Complete Interrupt management ******************************/
    759            if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma)) != RESET)
   \                     ??HAL_DMA_IRQHandler_30: (+1)
   \   00000566   0x6820             LDR      R0,[R4, #+0]
   \   00000568   0x4601             MOV      R1,R0
   \   0000056A   0x4541             CMP      R1,R8
   \   0000056C   0xD315             BCC.N    ??HAL_DMA_IRQHandler_39
   \   0000056E   0x42B9             CMP      R1,R7
   \   00000570   0xF8D5 0x2404      LDR      R2,[R5, #+1028]
   \   00000574   0xBF08             IT       EQ 
   \   00000576   0x2310             MOVEQ    R3,#+16
   \   00000578   0xD05A             BEQ.N    ??HAL_DMA_IRQHandler_40
   \   0000057A   0x.... 0x....      LDR.W    R3,??DataTable3_4  ;; 0x40026488
   \   0000057E   0x4299             CMP      R1,R3
   \   00000580   0xBF08             IT       EQ 
   \   00000582   0xF44F 0x6380      MOVEQ    R3,#+1024
   \   00000586   0xD053             BEQ.N    ??HAL_DMA_IRQHandler_40
   \   00000588   0x.... 0x....      LDR.W    R3,??DataTable3_5  ;; 0x400264a0
   \   0000058C   0x4299             CMP      R1,R3
   \   0000058E   0xBF14             ITE      NE 
   \   00000590   0xF04F 0x6380      MOVNE    R3,#+67108864
   \   00000594   0xF44F 0x1380      MOVEQ    R3,#+1048576
   \   00000598   0xE04A             B.N      ??HAL_DMA_IRQHandler_40
   \                     ??HAL_DMA_IRQHandler_39: (+1)
   \   0000059A   0x42B1             CMP      R1,R6
   \   0000059C   0xD317             BCC.N    ??HAL_DMA_IRQHandler_41
   \   0000059E   0x.... 0x....      LDR.W    R3,??DataTable3_6  ;; 0x40026410
   \   000005A2   0xF8D5 0x2400      LDR      R2,[R5, #+1024]
   \   000005A6   0x4299             CMP      R1,R3
   \   000005A8   0xBF08             IT       EQ 
   \   000005AA   0x2310             MOVEQ    R3,#+16
   \   000005AC   0xD040             BEQ.N    ??HAL_DMA_IRQHandler_40
   \   000005AE   0x.... 0x....      LDR.W    R3,??DataTable3_7  ;; 0x40026428
   \   000005B2   0x4299             CMP      R1,R3
   \   000005B4   0xBF08             IT       EQ 
   \   000005B6   0xF44F 0x6380      MOVEQ    R3,#+1024
   \   000005BA   0xD039             BEQ.N    ??HAL_DMA_IRQHandler_40
   \   000005BC   0x.... 0x....      LDR.W    R3,??DataTable3_8  ;; 0x40026440
   \   000005C0   0x4299             CMP      R1,R3
   \   000005C2   0xBF14             ITE      NE 
   \   000005C4   0xF04F 0x6380      MOVNE    R3,#+67108864
   \   000005C8   0xF44F 0x1380      MOVEQ    R3,#+1048576
   \   000005CC   0xE030             B.N      ??HAL_DMA_IRQHandler_40
   \                     ??HAL_DMA_IRQHandler_41: (+1)
   \   000005CE   0x.... 0x....      LDR.W    R2,??DataTable3_9  ;; 0x40026059
   \   000005D2   0x4291             CMP      R1,R2
   \   000005D4   0xD316             BCC.N    ??HAL_DMA_IRQHandler_42
   \   000005D6   0x.... 0x....      LDR.W    R3,??DataTable3_10  ;; 0x40026070
   \   000005DA   0x686A             LDR      R2,[R5, #+4]
   \   000005DC   0x4299             CMP      R1,R3
   \   000005DE   0xBF08             IT       EQ 
   \   000005E0   0x2310             MOVEQ    R3,#+16
   \   000005E2   0xD025             BEQ.N    ??HAL_DMA_IRQHandler_40
   \   000005E4   0x.... 0x....      LDR.W    R3,??DataTable3_11  ;; 0x40026088
   \   000005E8   0x4299             CMP      R1,R3
   \   000005EA   0xBF08             IT       EQ 
   \   000005EC   0xF44F 0x6380      MOVEQ    R3,#+1024
   \   000005F0   0xD01E             BEQ.N    ??HAL_DMA_IRQHandler_40
   \   000005F2   0x.... 0x....      LDR.W    R3,??DataTable3_12  ;; 0x400260a0
   \   000005F6   0x4299             CMP      R1,R3
   \   000005F8   0xBF14             ITE      NE 
   \   000005FA   0xF04F 0x6380      MOVNE    R3,#+67108864
   \   000005FE   0xF44F 0x1380      MOVEQ    R3,#+1048576
   \   00000602   0xE015             B.N      ??HAL_DMA_IRQHandler_40
   \                     ??HAL_DMA_IRQHandler_42: (+1)
   \   00000604   0x.... 0x....      LDR.W    R3,??DataTable3_13  ;; 0x40026010
   \   00000608   0x682A             LDR      R2,[R5, #+0]
   \   0000060A   0x4299             CMP      R1,R3
   \   0000060C   0xBF08             IT       EQ 
   \   0000060E   0x2310             MOVEQ    R3,#+16
   \   00000610   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_40
   \   00000612   0x.... 0x....      LDR.W    R3,??DataTable3_14  ;; 0x40026028
   \   00000616   0x4299             CMP      R1,R3
   \   00000618   0xBF08             IT       EQ 
   \   0000061A   0xF44F 0x6380      MOVEQ    R3,#+1024
   \   0000061E   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_40
   \   00000620   0x.... 0x....      LDR.W    R3,??DataTable3_15  ;; 0x40026040
   \   00000624   0x4299             CMP      R1,R3
   \   00000626   0xBF0C             ITE      EQ 
   \   00000628   0xF44F 0x1380      MOVEQ    R3,#+1048576
   \   0000062C   0xF04F 0x6380      MOVNE    R3,#+67108864
   \                     ??HAL_DMA_IRQHandler_40: (+1)
   \   00000630   0x401A             ANDS     R2,R3,R2
   \   00000632   0xF000 0x80DC      BEQ.W    ??HAL_DMA_IRQHandler_43
    760            {
    761              if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
   \   00000636   0x6802             LDR      R2,[R0, #+0]
   \   00000638   0x0712             LSLS     R2,R2,#+28
   \   0000063A   0xF140 0x80D8      BPL.W    ??HAL_DMA_IRQHandler_43
    762              { 
    763                /* Multi_Buffering mode enabled */
    764                if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != 0)
   \   0000063E   0x6802             LDR      R2,[R0, #+0]
   \   00000640   0x0352             LSLS     R2,R2,#+13
   \   00000642   0xD56B             BPL.N    ??HAL_DMA_IRQHandler_44
    765                {
    766                  /* Clear the half transfer complete flag */
    767                  __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
   \   00000644   0x4541             CMP      R1,R8
   \   00000646   0xD315             BCC.N    ??HAL_DMA_IRQHandler_45
   \   00000648   0x42B9             CMP      R1,R7
   \   0000064A   0xBF08             IT       EQ 
   \   0000064C   0x2010             MOVEQ    R0,#+16
   \   0000064E   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_46
   \   00000650   0x.... 0x....      LDR.W    R0,??DataTable3_4  ;; 0x40026488
   \   00000654   0x4281             CMP      R1,R0
   \   00000656   0xBF08             IT       EQ 
   \   00000658   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   0000065C   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_46
   \   0000065E   0x.... 0x....      LDR.W    R0,??DataTable3_5  ;; 0x400264a0
   \   00000662   0x4281             CMP      R1,R0
   \   00000664   0xBF0C             ITE      EQ 
   \   00000666   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   0000066A   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_IRQHandler_46: (+1)
   \   0000066E   0xF8C5 0x040C      STR      R0,[R5, #+1036]
   \   00000672   0xE04A             B.N      ??HAL_DMA_IRQHandler_47
   \                     ??HAL_DMA_IRQHandler_45: (+1)
   \   00000674   0x42B1             CMP      R1,R6
   \   00000676   0xD317             BCC.N    ??HAL_DMA_IRQHandler_48
   \   00000678   0x.... 0x....      LDR.W    R0,??DataTable3_6  ;; 0x40026410
   \   0000067C   0x4281             CMP      R1,R0
   \   0000067E   0xBF08             IT       EQ 
   \   00000680   0x2010             MOVEQ    R0,#+16
   \   00000682   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_49
   \   00000684   0x.... 0x....      LDR.W    R0,??DataTable3_7  ;; 0x40026428
   \   00000688   0x4281             CMP      R1,R0
   \   0000068A   0xBF08             IT       EQ 
   \   0000068C   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   00000690   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_49
   \   00000692   0x.... 0x....      LDR.W    R0,??DataTable3_8  ;; 0x40026440
   \   00000696   0x4281             CMP      R1,R0
   \   00000698   0xBF0C             ITE      EQ 
   \   0000069A   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   0000069E   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_IRQHandler_49: (+1)
   \   000006A2   0xF8C5 0x0408      STR      R0,[R5, #+1032]
   \   000006A6   0xE030             B.N      ??HAL_DMA_IRQHandler_47
   \                     ??HAL_DMA_IRQHandler_48: (+1)
   \   000006A8   0x.... 0x....      LDR.W    R0,??DataTable3_9  ;; 0x40026059
   \   000006AC   0x4281             CMP      R1,R0
   \   000006AE   0xD316             BCC.N    ??HAL_DMA_IRQHandler_50
   \   000006B0   0x.... 0x....      LDR.W    R0,??DataTable3_10  ;; 0x40026070
   \   000006B4   0x4281             CMP      R1,R0
   \   000006B6   0xBF08             IT       EQ 
   \   000006B8   0x2010             MOVEQ    R0,#+16
   \   000006BA   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_51
   \   000006BC   0x.... 0x....      LDR.W    R0,??DataTable3_11  ;; 0x40026088
   \   000006C0   0x4281             CMP      R1,R0
   \   000006C2   0xBF08             IT       EQ 
   \   000006C4   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   000006C8   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_51
   \   000006CA   0x.... 0x....      LDR.W    R0,??DataTable3_12  ;; 0x400260a0
   \   000006CE   0x4281             CMP      R1,R0
   \   000006D0   0xBF0C             ITE      EQ 
   \   000006D2   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   000006D6   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_IRQHandler_51: (+1)
   \   000006DA   0x60E8             STR      R0,[R5, #+12]
   \   000006DC   0xE015             B.N      ??HAL_DMA_IRQHandler_47
   \                     ??HAL_DMA_IRQHandler_50: (+1)
   \   000006DE   0x.... 0x....      LDR.W    R0,??DataTable3_13  ;; 0x40026010
   \   000006E2   0x4281             CMP      R1,R0
   \   000006E4   0xBF08             IT       EQ 
   \   000006E6   0x2010             MOVEQ    R0,#+16
   \   000006E8   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_52
   \   000006EA   0x.... 0x....      LDR.W    R0,??DataTable3_14  ;; 0x40026028
   \   000006EE   0x4281             CMP      R1,R0
   \   000006F0   0xBF08             IT       EQ 
   \   000006F2   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   000006F6   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_52
   \   000006F8   0x.... 0x....      LDR.W    R0,??DataTable3_15  ;; 0x40026040
   \   000006FC   0x4281             CMP      R1,R0
   \   000006FE   0xBF0C             ITE      EQ 
   \   00000700   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   00000704   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_IRQHandler_52: (+1)
   \   00000708   0x60A8             STR      R0,[R5, #+8]
    768          
    769                  /* Current memory buffer used is Memory 0 */
    770                  if((hdma->Instance->CR & DMA_SxCR_CT) == 0)
   \                     ??HAL_DMA_IRQHandler_47: (+1)
   \   0000070A   0x6820             LDR      R0,[R4, #+0]
   \   0000070C   0x6801             LDR      R1,[R0, #+0]
   \   0000070E   0x0309             LSLS     R1,R1,#+12
   \   00000710   0xD565             BPL.N    ??HAL_DMA_IRQHandler_53
    771                  {
    772                    /* Change DMA peripheral state */
    773                    hdma->State = HAL_DMA_STATE_READY_HALF_MEM0;
    774                  }
    775                  /* Current memory buffer used is Memory 1 */
    776                  else if((hdma->Instance->CR & DMA_SxCR_CT) != 0)
   \   00000712   0x6800             LDR      R0,[R0, #+0]
   \   00000714   0x0300             LSLS     R0,R0,#+12
   \   00000716   0xD565             BPL.N    ??HAL_DMA_IRQHandler_54
    777                  {
    778                    /* Change DMA peripheral state */
    779                    hdma->State = HAL_DMA_STATE_READY_HALF_MEM1;
   \   00000718   0x2041             MOVS     R0,#+65
   \   0000071A   0xE061             B.N      ??HAL_DMA_IRQHandler_55
    780                  }
    781                }
    782                else
    783                {
    784                  /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
    785                  if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0)
   \                     ??HAL_DMA_IRQHandler_44: (+1)
   \   0000071C   0x6801             LDR      R1,[R0, #+0]
   \   0000071E   0x05C9             LSLS     R1,R1,#+23
   \   00000720   0xD403             BMI.N    ??HAL_DMA_IRQHandler_56
    786                  {
    787                    /* Disable the half transfer interrupt */
    788                    __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
   \   00000722   0x6801             LDR      R1,[R0, #+0]
   \   00000724   0xF021 0x0108      BIC      R1,R1,#0x8
   \   00000728   0x6001             STR      R1,[R0, #+0]
    789                  }
    790                  /* Clear the half transfer complete flag */
    791                  __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
   \                     ??HAL_DMA_IRQHandler_56: (+1)
   \   0000072A   0x6820             LDR      R0,[R4, #+0]
   \   0000072C   0x4540             CMP      R0,R8
   \   0000072E   0xD315             BCC.N    ??HAL_DMA_IRQHandler_57
   \   00000730   0x42B8             CMP      R0,R7
   \   00000732   0xBF08             IT       EQ 
   \   00000734   0x2010             MOVEQ    R0,#+16
   \   00000736   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_58
   \   00000738   0x.... 0x....      LDR.W    R1,??DataTable3_4  ;; 0x40026488
   \   0000073C   0x4288             CMP      R0,R1
   \   0000073E   0xBF08             IT       EQ 
   \   00000740   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   00000744   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_58
   \   00000746   0x.... 0x....      LDR.W    R1,??DataTable3_5  ;; 0x400264a0
   \   0000074A   0x4288             CMP      R0,R1
   \   0000074C   0xBF0C             ITE      EQ 
   \   0000074E   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   00000752   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_IRQHandler_58: (+1)
   \   00000756   0xF8C5 0x040C      STR      R0,[R5, #+1036]
   \   0000075A   0xE040             B.N      ??HAL_DMA_IRQHandler_53
   \                     ??HAL_DMA_IRQHandler_57: (+1)
   \   0000075C   0x42B0             CMP      R0,R6
   \   0000075E   0xD314             BCC.N    ??HAL_DMA_IRQHandler_59
   \   00000760   0x....             LDR.N    R1,??DataTable3_6  ;; 0x40026410
   \   00000762   0x4288             CMP      R0,R1
   \   00000764   0xBF08             IT       EQ 
   \   00000766   0x2010             MOVEQ    R0,#+16
   \   00000768   0xD00C             BEQ.N    ??HAL_DMA_IRQHandler_60
   \   0000076A   0x....             LDR.N    R1,??DataTable3_7  ;; 0x40026428
   \   0000076C   0x4288             CMP      R0,R1
   \   0000076E   0xBF08             IT       EQ 
   \   00000770   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   00000774   0xD006             BEQ.N    ??HAL_DMA_IRQHandler_60
   \   00000776   0x....             LDR.N    R1,??DataTable3_8  ;; 0x40026440
   \   00000778   0x4288             CMP      R0,R1
   \   0000077A   0xBF0C             ITE      EQ 
   \   0000077C   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   00000780   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_IRQHandler_60: (+1)
   \   00000784   0xF8C5 0x0408      STR      R0,[R5, #+1032]
   \   00000788   0xE029             B.N      ??HAL_DMA_IRQHandler_53
   \                     ??HAL_DMA_IRQHandler_59: (+1)
   \   0000078A   0x....             LDR.N    R1,??DataTable3_9  ;; 0x40026059
   \   0000078C   0x4288             CMP      R0,R1
   \   0000078E   0xD313             BCC.N    ??HAL_DMA_IRQHandler_61
   \   00000790   0x....             LDR.N    R1,??DataTable3_10  ;; 0x40026070
   \   00000792   0x4288             CMP      R0,R1
   \   00000794   0xBF08             IT       EQ 
   \   00000796   0x2010             MOVEQ    R0,#+16
   \   00000798   0xD00C             BEQ.N    ??HAL_DMA_IRQHandler_62
   \   0000079A   0x....             LDR.N    R1,??DataTable3_11  ;; 0x40026088
   \   0000079C   0x4288             CMP      R0,R1
   \   0000079E   0xBF08             IT       EQ 
   \   000007A0   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   000007A4   0xD006             BEQ.N    ??HAL_DMA_IRQHandler_62
   \   000007A6   0x....             LDR.N    R1,??DataTable3_12  ;; 0x400260a0
   \   000007A8   0x4288             CMP      R0,R1
   \   000007AA   0xBF0C             ITE      EQ 
   \   000007AC   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   000007B0   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_IRQHandler_62: (+1)
   \   000007B4   0x60E8             STR      R0,[R5, #+12]
   \   000007B6   0xE012             B.N      ??HAL_DMA_IRQHandler_53
   \                     ??HAL_DMA_IRQHandler_61: (+1)
   \   000007B8   0x....             LDR.N    R1,??DataTable3_13  ;; 0x40026010
   \   000007BA   0x4288             CMP      R0,R1
   \   000007BC   0xBF08             IT       EQ 
   \   000007BE   0x2010             MOVEQ    R0,#+16
   \   000007C0   0xD00C             BEQ.N    ??HAL_DMA_IRQHandler_63
   \   000007C2   0x....             LDR.N    R1,??DataTable3_14  ;; 0x40026028
   \   000007C4   0x4288             CMP      R0,R1
   \   000007C6   0xBF08             IT       EQ 
   \   000007C8   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   000007CC   0xD006             BEQ.N    ??HAL_DMA_IRQHandler_63
   \   000007CE   0x....             LDR.N    R1,??DataTable3_15  ;; 0x40026040
   \   000007D0   0x4288             CMP      R0,R1
   \   000007D2   0xBF0C             ITE      EQ 
   \   000007D4   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   000007D8   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_IRQHandler_63: (+1)
   \   000007DC   0x60A8             STR      R0,[R5, #+8]
    792          
    793                  /* Change DMA peripheral state */
    794                  hdma->State = HAL_DMA_STATE_READY_HALF_MEM0;
   \                     ??HAL_DMA_IRQHandler_53: (+1)
   \   000007DE   0x2031             MOVS     R0,#+49
   \                     ??HAL_DMA_IRQHandler_55: (+1)
   \   000007E0   0xF884 0x0035      STRB     R0,[R4, #+53]
    795                }
    796          
    797                if(hdma->XferHalfCpltCallback != NULL)
   \                     ??HAL_DMA_IRQHandler_54: (+1)
   \   000007E4   0x6C21             LDR      R1,[R4, #+64]
   \   000007E6   0x0008             MOVS     R0,R1
   \   000007E8   0xBF1C             ITT      NE 
    798                {
    799                  /* Half transfer callback */
    800                  hdma->XferHalfCpltCallback(hdma);
   \   000007EA   0x4620             MOVNE    R0,R4
   \   000007EC   0x4788             BLXNE    R1
    801                }
    802              }
    803            }
    804            /* Transfer Complete Interrupt management ***********************************/
    805            if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma)) != RESET)
   \                     ??HAL_DMA_IRQHandler_43: (+1)
   \   000007EE   0x6820             LDR      R0,[R4, #+0]
   \   000007F0   0x4601             MOV      R1,R0
   \   000007F2   0x4541             CMP      R1,R8
   \   000007F4   0xD313             BCC.N    ??HAL_DMA_IRQHandler_64
   \   000007F6   0x42B9             CMP      R1,R7
   \   000007F8   0xF8D5 0x2404      LDR      R2,[R5, #+1028]
   \   000007FC   0xBF08             IT       EQ 
   \   000007FE   0x2320             MOVEQ    R3,#+32
   \   00000800   0xD04E             BEQ.N    ??HAL_DMA_IRQHandler_65
   \   00000802   0x....             LDR.N    R3,??DataTable3_4  ;; 0x40026488
   \   00000804   0x4299             CMP      R1,R3
   \   00000806   0xBF08             IT       EQ 
   \   00000808   0xF44F 0x6300      MOVEQ    R3,#+2048
   \   0000080C   0xD048             BEQ.N    ??HAL_DMA_IRQHandler_65
   \   0000080E   0x....             LDR.N    R3,??DataTable3_5  ;; 0x400264a0
   \   00000810   0x4299             CMP      R1,R3
   \   00000812   0xBF14             ITE      NE 
   \   00000814   0xF04F 0x6300      MOVNE    R3,#+134217728
   \   00000818   0xF44F 0x1300      MOVEQ    R3,#+2097152
   \   0000081C   0xE040             B.N      ??HAL_DMA_IRQHandler_65
   \                     ??HAL_DMA_IRQHandler_64: (+1)
   \   0000081E   0x42B1             CMP      R1,R6
   \   00000820   0xD314             BCC.N    ??HAL_DMA_IRQHandler_66
   \   00000822   0x....             LDR.N    R3,??DataTable3_6  ;; 0x40026410
   \   00000824   0xF8D5 0x2400      LDR      R2,[R5, #+1024]
   \   00000828   0x4299             CMP      R1,R3
   \   0000082A   0xBF08             IT       EQ 
   \   0000082C   0x2320             MOVEQ    R3,#+32
   \   0000082E   0xD037             BEQ.N    ??HAL_DMA_IRQHandler_65
   \   00000830   0x....             LDR.N    R3,??DataTable3_7  ;; 0x40026428
   \   00000832   0x4299             CMP      R1,R3
   \   00000834   0xBF08             IT       EQ 
   \   00000836   0xF44F 0x6300      MOVEQ    R3,#+2048
   \   0000083A   0xD031             BEQ.N    ??HAL_DMA_IRQHandler_65
   \   0000083C   0x....             LDR.N    R3,??DataTable3_8  ;; 0x40026440
   \   0000083E   0x4299             CMP      R1,R3
   \   00000840   0xBF14             ITE      NE 
   \   00000842   0xF04F 0x6300      MOVNE    R3,#+134217728
   \   00000846   0xF44F 0x1300      MOVEQ    R3,#+2097152
   \   0000084A   0xE029             B.N      ??HAL_DMA_IRQHandler_65
   \                     ??HAL_DMA_IRQHandler_66: (+1)
   \   0000084C   0x....             LDR.N    R2,??DataTable3_9  ;; 0x40026059
   \   0000084E   0x4291             CMP      R1,R2
   \   00000850   0xD313             BCC.N    ??HAL_DMA_IRQHandler_67
   \   00000852   0x....             LDR.N    R3,??DataTable3_10  ;; 0x40026070
   \   00000854   0x686A             LDR      R2,[R5, #+4]
   \   00000856   0x4299             CMP      R1,R3
   \   00000858   0xBF08             IT       EQ 
   \   0000085A   0x2320             MOVEQ    R3,#+32
   \   0000085C   0xD020             BEQ.N    ??HAL_DMA_IRQHandler_65
   \   0000085E   0x....             LDR.N    R3,??DataTable3_11  ;; 0x40026088
   \   00000860   0x4299             CMP      R1,R3
   \   00000862   0xBF08             IT       EQ 
   \   00000864   0xF44F 0x6300      MOVEQ    R3,#+2048
   \   00000868   0xD01A             BEQ.N    ??HAL_DMA_IRQHandler_65
   \   0000086A   0x....             LDR.N    R3,??DataTable3_12  ;; 0x400260a0
   \   0000086C   0x4299             CMP      R1,R3
   \   0000086E   0xBF14             ITE      NE 
   \   00000870   0xF04F 0x6300      MOVNE    R3,#+134217728
   \   00000874   0xF44F 0x1300      MOVEQ    R3,#+2097152
   \   00000878   0xE012             B.N      ??HAL_DMA_IRQHandler_65
   \                     ??HAL_DMA_IRQHandler_67: (+1)
   \   0000087A   0x....             LDR.N    R3,??DataTable3_13  ;; 0x40026010
   \   0000087C   0x682A             LDR      R2,[R5, #+0]
   \   0000087E   0x4299             CMP      R1,R3
   \   00000880   0xBF08             IT       EQ 
   \   00000882   0x2320             MOVEQ    R3,#+32
   \   00000884   0xD00C             BEQ.N    ??HAL_DMA_IRQHandler_65
   \   00000886   0x....             LDR.N    R3,??DataTable3_14  ;; 0x40026028
   \   00000888   0x4299             CMP      R1,R3
   \   0000088A   0xBF08             IT       EQ 
   \   0000088C   0xF44F 0x6300      MOVEQ    R3,#+2048
   \   00000890   0xD006             BEQ.N    ??HAL_DMA_IRQHandler_65
   \   00000892   0x....             LDR.N    R3,??DataTable3_15  ;; 0x40026040
   \   00000894   0x4299             CMP      R1,R3
   \   00000896   0xBF0C             ITE      EQ 
   \   00000898   0xF44F 0x1300      MOVEQ    R3,#+2097152
   \   0000089C   0xF04F 0x6300      MOVNE    R3,#+134217728
   \                     ??HAL_DMA_IRQHandler_65: (+1)
   \   000008A0   0x401A             ANDS     R2,R3,R2
   \   000008A2   0xF000 0x80DB      BEQ.W    ??HAL_DMA_IRQHandler_68
    806            {
    807              if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
   \   000008A6   0x6802             LDR      R2,[R0, #+0]
   \   000008A8   0x06D2             LSLS     R2,R2,#+27
   \   000008AA   0xF140 0x80D7      BPL.W    ??HAL_DMA_IRQHandler_68
    808              {
    809                if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != 0)
   \   000008AE   0x6802             LDR      R2,[R0, #+0]
   \   000008B0   0x0352             LSLS     R2,R2,#+13
   \   000008B2   0xD565             BPL.N    ??HAL_DMA_IRQHandler_69
    810                {
    811                  /* Clear the transfer complete flag */
    812                  __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma));
   \   000008B4   0x4541             CMP      R1,R8
   \   000008B6   0xD313             BCC.N    ??HAL_DMA_IRQHandler_70
   \   000008B8   0x42B9             CMP      R1,R7
   \   000008BA   0xBF08             IT       EQ 
   \   000008BC   0x2020             MOVEQ    R0,#+32
   \   000008BE   0xD00C             BEQ.N    ??HAL_DMA_IRQHandler_71
   \   000008C0   0x....             LDR.N    R0,??DataTable3_4  ;; 0x40026488
   \   000008C2   0x4281             CMP      R1,R0
   \   000008C4   0xBF08             IT       EQ 
   \   000008C6   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   000008CA   0xD006             BEQ.N    ??HAL_DMA_IRQHandler_71
   \   000008CC   0x....             LDR.N    R0,??DataTable3_5  ;; 0x400264a0
   \   000008CE   0x4281             CMP      R1,R0
   \   000008D0   0xBF0C             ITE      EQ 
   \   000008D2   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   000008D6   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_IRQHandler_71: (+1)
   \   000008DA   0xF8C5 0x040C      STR      R0,[R5, #+1036]
   \   000008DE   0xE040             B.N      ??HAL_DMA_IRQHandler_72
   \                     ??HAL_DMA_IRQHandler_70: (+1)
   \   000008E0   0x42B1             CMP      R1,R6
   \   000008E2   0xD314             BCC.N    ??HAL_DMA_IRQHandler_73
   \   000008E4   0x....             LDR.N    R0,??DataTable3_6  ;; 0x40026410
   \   000008E6   0x4281             CMP      R1,R0
   \   000008E8   0xBF08             IT       EQ 
   \   000008EA   0x2020             MOVEQ    R0,#+32
   \   000008EC   0xD00C             BEQ.N    ??HAL_DMA_IRQHandler_74
   \   000008EE   0x....             LDR.N    R0,??DataTable3_7  ;; 0x40026428
   \   000008F0   0x4281             CMP      R1,R0
   \   000008F2   0xBF08             IT       EQ 
   \   000008F4   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   000008F8   0xD006             BEQ.N    ??HAL_DMA_IRQHandler_74
   \   000008FA   0x....             LDR.N    R0,??DataTable3_8  ;; 0x40026440
   \   000008FC   0x4281             CMP      R1,R0
   \   000008FE   0xBF0C             ITE      EQ 
   \   00000900   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   00000904   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_IRQHandler_74: (+1)
   \   00000908   0xF8C5 0x0408      STR      R0,[R5, #+1032]
   \   0000090C   0xE029             B.N      ??HAL_DMA_IRQHandler_72
   \                     ??HAL_DMA_IRQHandler_73: (+1)
   \   0000090E   0x....             LDR.N    R0,??DataTable3_9  ;; 0x40026059
   \   00000910   0x4281             CMP      R1,R0
   \   00000912   0xD313             BCC.N    ??HAL_DMA_IRQHandler_75
   \   00000914   0x....             LDR.N    R0,??DataTable3_10  ;; 0x40026070
   \   00000916   0x4281             CMP      R1,R0
   \   00000918   0xBF08             IT       EQ 
   \   0000091A   0x2020             MOVEQ    R0,#+32
   \   0000091C   0xD00C             BEQ.N    ??HAL_DMA_IRQHandler_76
   \   0000091E   0x....             LDR.N    R0,??DataTable3_11  ;; 0x40026088
   \   00000920   0x4281             CMP      R1,R0
   \   00000922   0xBF08             IT       EQ 
   \   00000924   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   00000928   0xD006             BEQ.N    ??HAL_DMA_IRQHandler_76
   \   0000092A   0x....             LDR.N    R0,??DataTable3_12  ;; 0x400260a0
   \   0000092C   0x4281             CMP      R1,R0
   \   0000092E   0xBF0C             ITE      EQ 
   \   00000930   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   00000934   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_IRQHandler_76: (+1)
   \   00000938   0x60E8             STR      R0,[R5, #+12]
   \   0000093A   0xE012             B.N      ??HAL_DMA_IRQHandler_72
   \                     ??HAL_DMA_IRQHandler_75: (+1)
   \   0000093C   0x....             LDR.N    R0,??DataTable3_13  ;; 0x40026010
   \   0000093E   0x4281             CMP      R1,R0
   \   00000940   0xBF08             IT       EQ 
   \   00000942   0x2020             MOVEQ    R0,#+32
   \   00000944   0xD00C             BEQ.N    ??HAL_DMA_IRQHandler_77
   \   00000946   0x....             LDR.N    R0,??DataTable3_14  ;; 0x40026028
   \   00000948   0x4281             CMP      R1,R0
   \   0000094A   0xBF08             IT       EQ 
   \   0000094C   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   00000950   0xD006             BEQ.N    ??HAL_DMA_IRQHandler_77
   \   00000952   0x....             LDR.N    R0,??DataTable3_15  ;; 0x40026040
   \   00000954   0x4281             CMP      R1,R0
   \   00000956   0xBF0C             ITE      EQ 
   \   00000958   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   0000095C   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_IRQHandler_77: (+1)
   \   00000960   0x60A8             STR      R0,[R5, #+8]
    813          
    814                  /* Current memory buffer used is Memory 1 */
    815                  if((hdma->Instance->CR & DMA_SxCR_CT) == 0)
   \                     ??HAL_DMA_IRQHandler_72: (+1)
   \   00000962   0x6820             LDR      R0,[R4, #+0]
   \   00000964   0x6801             LDR      R1,[R0, #+0]
   \   00000966   0x0309             LSLS     R1,R1,#+12
   \   00000968   0xD406             BMI.N    ??HAL_DMA_IRQHandler_78
    816                  {
    817                    if(hdma->XferM1CpltCallback != NULL)
   \   0000096A   0x6C61             LDR      R1,[R4, #+68]
   \   0000096C   0x0008             MOVS     R0,R1
   \   0000096E   0xD075             BEQ.N    ??HAL_DMA_IRQHandler_68
    818                    {
    819                      /* Transfer complete Callback for memory1 */
    820                      hdma->XferM1CpltCallback(hdma);
   \   00000970   0x4620             MOV      R0,R4
   \   00000972   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   00000976   0x4708             BX       R1
    821                    }
    822                  }
    823                  /* Current memory buffer used is Memory 0 */
    824                  else if((hdma->Instance->CR & DMA_SxCR_CT) != 0) 
   \                     ??HAL_DMA_IRQHandler_78: (+1)
   \   00000978   0x6800             LDR      R0,[R0, #+0]
   \   0000097A   0x0300             LSLS     R0,R0,#+12
   \   0000097C   0xD56E             BPL.N    ??HAL_DMA_IRQHandler_68
    825                  {
    826                    if(hdma->XferCpltCallback != NULL)
   \   0000097E   0xE066             B.N      ??HAL_DMA_IRQHandler_79
    827                    {
    828                      /* Transfer complete Callback for memory0 */
    829                      hdma->XferCpltCallback(hdma);
    830                    }
    831                  }
    832                }
    833                /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
    834                else
    835                {
    836                  if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0)
   \                     ??HAL_DMA_IRQHandler_69: (+1)
   \   00000980   0x6801             LDR      R1,[R0, #+0]
   \   00000982   0x05C9             LSLS     R1,R1,#+23
   \   00000984   0xD403             BMI.N    ??HAL_DMA_IRQHandler_80
    837                  {
    838                    /* Disable the transfer complete interrupt */
    839                    __HAL_DMA_DISABLE_IT(hdma, DMA_IT_TC);
   \   00000986   0x6801             LDR      R1,[R0, #+0]
   \   00000988   0xF021 0x0110      BIC      R1,R1,#0x10
   \   0000098C   0x6001             STR      R1,[R0, #+0]
    840                  }
    841                  /* Clear the transfer complete flag */
    842                  __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma));
   \                     ??HAL_DMA_IRQHandler_80: (+1)
   \   0000098E   0x6820             LDR      R0,[R4, #+0]
   \   00000990   0x4540             CMP      R0,R8
   \   00000992   0xD313             BCC.N    ??HAL_DMA_IRQHandler_81
   \   00000994   0x42B8             CMP      R0,R7
   \   00000996   0xBF08             IT       EQ 
   \   00000998   0x2020             MOVEQ    R0,#+32
   \   0000099A   0xD00C             BEQ.N    ??HAL_DMA_IRQHandler_82
   \   0000099C   0x....             LDR.N    R1,??DataTable3_4  ;; 0x40026488
   \   0000099E   0x4288             CMP      R0,R1
   \   000009A0   0xBF08             IT       EQ 
   \   000009A2   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   000009A6   0xD006             BEQ.N    ??HAL_DMA_IRQHandler_82
   \   000009A8   0x....             LDR.N    R1,??DataTable3_5  ;; 0x400264a0
   \   000009AA   0x4288             CMP      R0,R1
   \   000009AC   0xBF0C             ITE      EQ 
   \   000009AE   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   000009B2   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_IRQHandler_82: (+1)
   \   000009B6   0xF8C5 0x040C      STR      R0,[R5, #+1036]
   \   000009BA   0xE040             B.N      ??HAL_DMA_IRQHandler_83
   \                     ??HAL_DMA_IRQHandler_81: (+1)
   \   000009BC   0x42B0             CMP      R0,R6
   \   000009BE   0xD314             BCC.N    ??HAL_DMA_IRQHandler_84
   \   000009C0   0x....             LDR.N    R1,??DataTable3_6  ;; 0x40026410
   \   000009C2   0x4288             CMP      R0,R1
   \   000009C4   0xBF08             IT       EQ 
   \   000009C6   0x2020             MOVEQ    R0,#+32
   \   000009C8   0xD00C             BEQ.N    ??HAL_DMA_IRQHandler_85
   \   000009CA   0x....             LDR.N    R1,??DataTable3_7  ;; 0x40026428
   \   000009CC   0x4288             CMP      R0,R1
   \   000009CE   0xBF08             IT       EQ 
   \   000009D0   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   000009D4   0xD006             BEQ.N    ??HAL_DMA_IRQHandler_85
   \   000009D6   0x....             LDR.N    R1,??DataTable3_8  ;; 0x40026440
   \   000009D8   0x4288             CMP      R0,R1
   \   000009DA   0xBF0C             ITE      EQ 
   \   000009DC   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   000009E0   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_IRQHandler_85: (+1)
   \   000009E4   0xF8C5 0x0408      STR      R0,[R5, #+1032]
   \   000009E8   0xE029             B.N      ??HAL_DMA_IRQHandler_83
   \                     ??HAL_DMA_IRQHandler_84: (+1)
   \   000009EA   0x....             LDR.N    R1,??DataTable3_9  ;; 0x40026059
   \   000009EC   0x4288             CMP      R0,R1
   \   000009EE   0xD313             BCC.N    ??HAL_DMA_IRQHandler_86
   \   000009F0   0x....             LDR.N    R1,??DataTable3_10  ;; 0x40026070
   \   000009F2   0x4288             CMP      R0,R1
   \   000009F4   0xBF08             IT       EQ 
   \   000009F6   0x2020             MOVEQ    R0,#+32
   \   000009F8   0xD00C             BEQ.N    ??HAL_DMA_IRQHandler_87
   \   000009FA   0x....             LDR.N    R1,??DataTable3_11  ;; 0x40026088
   \   000009FC   0x4288             CMP      R0,R1
   \   000009FE   0xBF08             IT       EQ 
   \   00000A00   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   00000A04   0xD006             BEQ.N    ??HAL_DMA_IRQHandler_87
   \   00000A06   0x....             LDR.N    R1,??DataTable3_12  ;; 0x400260a0
   \   00000A08   0x4288             CMP      R0,R1
   \   00000A0A   0xBF0C             ITE      EQ 
   \   00000A0C   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   00000A10   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_IRQHandler_87: (+1)
   \   00000A14   0x60E8             STR      R0,[R5, #+12]
   \   00000A16   0xE012             B.N      ??HAL_DMA_IRQHandler_83
   \                     ??HAL_DMA_IRQHandler_86: (+1)
   \   00000A18   0x....             LDR.N    R1,??DataTable3_13  ;; 0x40026010
   \   00000A1A   0x4288             CMP      R0,R1
   \   00000A1C   0xBF08             IT       EQ 
   \   00000A1E   0x2020             MOVEQ    R0,#+32
   \   00000A20   0xD00C             BEQ.N    ??HAL_DMA_IRQHandler_88
   \   00000A22   0x....             LDR.N    R1,??DataTable3_14  ;; 0x40026028
   \   00000A24   0x4288             CMP      R0,R1
   \   00000A26   0xBF08             IT       EQ 
   \   00000A28   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   00000A2C   0xD006             BEQ.N    ??HAL_DMA_IRQHandler_88
   \   00000A2E   0x....             LDR.N    R1,??DataTable3_15  ;; 0x40026040
   \   00000A30   0x4288             CMP      R0,R1
   \   00000A32   0xBF0C             ITE      EQ 
   \   00000A34   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   00000A38   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_IRQHandler_88: (+1)
   \   00000A3C   0x60A8             STR      R0,[R5, #+8]
    843          
    844                  /* Update error code */
    845                  hdma->ErrorCode |= HAL_DMA_ERROR_NONE;
   \                     ??HAL_DMA_IRQHandler_83: (+1)
   \   00000A3E   0x6CE0             LDR      R0,[R4, #+76]
   \   00000A40   0x64E0             STR      R0,[R4, #+76]
    846          
    847                  /* Change the DMA state */
    848                  hdma->State = HAL_DMA_STATE_READY_MEM0;
   \   00000A42   0x2011             MOVS     R0,#+17
   \   00000A44   0xF884 0x0035      STRB     R0,[R4, #+53]
    849          
    850                  /* Process Unlocked */
    851                  __HAL_UNLOCK(hdma);      
   \   00000A48   0x2000             MOVS     R0,#+0
   \   00000A4A   0xF884 0x0034      STRB     R0,[R4, #+52]
    852          
    853                  if(hdma->XferCpltCallback != NULL)
   \                     ??HAL_DMA_IRQHandler_79: (+1)
   \   00000A4E   0x6BE1             LDR      R1,[R4, #+60]
   \   00000A50   0x0008             MOVS     R0,R1
   \   00000A52   0xD003             BEQ.N    ??HAL_DMA_IRQHandler_68
    854                  {
    855                    /* Transfer complete callback */
    856                    hdma->XferCpltCallback(hdma);
   \   00000A54   0x4620             MOV      R0,R4
   \   00000A56   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   00000A5A   0x4708             BX       R1
    857                  }
    858                }
    859              }
    860            }
    861          }
   \                     ??HAL_DMA_IRQHandler_68: (+1)
   \   00000A5C   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    862          
    863          /**
    864            * @}
    865            */
    866          
    867          /** @addtogroup DMA_Exported_Functions_Group3
    868            *
    869          @verbatim
    870           ===============================================================================
    871                              ##### State and Errors functions #####
    872           ===============================================================================
    873              [..]
    874              This subsection provides functions allowing to
    875                (+) Check the DMA state
    876                (+) Get error code
    877          
    878          @endverbatim
    879            * @{
    880            */
    881          
    882          /**
    883            * @brief  Returns the DMA state.
    884            * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
    885            *               the configuration information for the specified DMA Stream.
    886            * @retval HAL state
    887            */

   \                                 In section .text, align 2, keep-with-next
    888          HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
    889          {
    890            return hdma->State;
   \                     HAL_DMA_GetState: (+1)
   \   00000000   0xF890 0x0035      LDRB     R0,[R0, #+53]
   \   00000004   0x4770             BX       LR               ;; return
    891          }
    892          
    893          /**
    894            * @brief  Return the DMA error code
    895            * @param  hdma : pointer to a DMA_HandleTypeDef structure that contains
    896            *              the configuration information for the specified DMA Stream.
    897            * @retval DMA Error Code
    898            */

   \                                 In section .text, align 2, keep-with-next
    899          uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
    900          {
    901            return hdma->ErrorCode;
   \                     HAL_DMA_GetError: (+1)
   \   00000000   0x6CC0             LDR      R0,[R0, #+76]
   \   00000002   0x4770             BX       LR               ;; return
    902          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0xF010803F         DC32     0xf010803f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x40026459         DC32     0x40026459

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x40026470         DC32     0x40026470

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x40026008         DC32     0x40026008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x400260B9         DC32     0x400260b9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x00800004         DC32     0x800004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x40026488         DC32     0x40026488

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x400264A0         DC32     0x400264a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x40026410         DC32     0x40026410

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x40026428         DC32     0x40026428

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x40026440         DC32     0x40026440

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_11:
   \   00000000   0x40026059         DC32     0x40026059

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_12:
   \   00000000   0x40026070         DC32     0x40026070

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_13:
   \   00000000   0x40026088         DC32     0x40026088

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_14:
   \   00000000   0x400260A0         DC32     0x400260a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_15:
   \   00000000   0x40026010         DC32     0x40026010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_16:
   \   00000000   0x40026028         DC32     0x40026028

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_17:
   \   00000000   0x40026040         DC32     0x40026040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_18:
   \   00000000   0x00800001         DC32     0x800001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x40026010         DC32     0x40026010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x40026410         DC32     0x40026410

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x40026070         DC32     0x40026070

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x40026470         DC32     0x40026470

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x40026028         DC32     0x40026028

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x40026428         DC32     0x40026428

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x40026088         DC32     0x40026088

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x40026488         DC32     0x40026488

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x40026040         DC32     0x40026040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x40026440         DC32     0x40026440

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x400260A0         DC32     0x400260a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_11:
   \   00000000   0x400264A0         DC32     0x400264a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_12:
   \   00000000   0x00800004         DC32     0x800004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_13:
   \   00000000   0x00800001         DC32     0x800001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_14:
   \   00000000   0x40026000         DC32     0x40026000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_15:
   \   00000000   0x40026459         DC32     0x40026459

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_16:
   \   00000000   0x400260B9         DC32     0x400260b9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_17:
   \   00000000   0x40026059         DC32     0x40026059

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x40026459         DC32     0x40026459

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x40026000         DC32     0x40026000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x400260B9         DC32     0x400260b9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x40026470         DC32     0x40026470

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x40026488         DC32     0x40026488

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x400264A0         DC32     0x400264a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x40026410         DC32     0x40026410

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x40026428         DC32     0x40026428

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x40026440         DC32     0x40026440

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x40026059         DC32     0x40026059

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x40026070         DC32     0x40026070

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x40026088         DC32     0x40026088

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x400260A0         DC32     0x400260a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   0x40026010         DC32     0x40026010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   0x40026028         DC32     0x40026028

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_15:
   \   00000000   0x40026040         DC32     0x40026040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_16:
   \   00000000   0x00800001         DC32     0x800001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_17:
   \   00000000   0x00800004         DC32     0x800004
    903          
    904          /**
    905            * @}
    906            */
    907          
    908          /**
    909            * @}
    910            */
    911          
    912          #endif /* HAL_DMA_MODULE_ENABLED */
    913          /**
    914            * @}
    915            */
    916          
    917          /**
    918            * @}
    919            */
    920          
    921          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   DMA_SetConfig
      16   HAL_DMA_Abort
        16   -> HAL_GetTick
      12   HAL_DMA_DeInit
       0   HAL_DMA_GetError
       0   HAL_DMA_GetState
      24   HAL_DMA_IRQHandler
         0   -- Indirect call
        24   -- Indirect call
       0   HAL_DMA_Init
      48   HAL_DMA_PollForTransfer
        48   -> HAL_GetTick
       8   HAL_DMA_Start
       8   HAL_DMA_Start_IT


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_12
       4  ??DataTable1_13
       4  ??DataTable1_14
       4  ??DataTable1_15
       4  ??DataTable1_16
       4  ??DataTable1_17
       4  ??DataTable1_18
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_11
       4  ??DataTable2_12
       4  ??DataTable2_13
       4  ??DataTable2_14
       4  ??DataTable2_15
       4  ??DataTable2_16
       4  ??DataTable2_17
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_15
       4  ??DataTable3_16
       4  ??DataTable3_17
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
      32  DMA_SetConfig
      80  HAL_DMA_Abort
     992  HAL_DMA_DeInit
       4  HAL_DMA_GetError
       6  HAL_DMA_GetState
    2656  HAL_DMA_IRQHandler
     110  HAL_DMA_Init
    2656  HAL_DMA_PollForTransfer
      88  HAL_DMA_Start
     138  HAL_DMA_Start_IT

 
 6 982 bytes in section .text
 
 6 982 bytes of CODE memory

Errors: none
Warnings: 1
