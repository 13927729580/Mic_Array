###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       05/Mar/2016  17:13:31
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Drivers\STM32F7xx_HAL_Driver\Src\stm32f7xx_hal_dma.c
#    Command line =  
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Drivers\STM32F7xx_HAL_Driver\Src\stm32f7xx_hal_dma.c
#        -D USE_HAL_DRIVER -D STM32F746xx -D USE_STM32746G_DISCO -D
#        USE_IOEXPANDER -D USE_USB_FS -lC
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List
#        -lA
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List
#        -o
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\Obj
#        --no_unroll --debug --endian=little --cpu=Cortex-M7 -e --fpu=VFPv5_sp
#        --dlib_config "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\Inc\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\CMSIS\Device\ST\STM32F7xx\Include\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\STM32F7xx_HAL_Driver\Inc\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\BSP\STM32746G-Discovery\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\BSP\Components\Common\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\Log\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\Fonts\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\CPU\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_Device_Library\Core\Inc\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_HOST_Library\Core\Inc\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_HOST_Library\Class\MSC\Inc\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\Third_Party\FatFs\src\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\Third_Party\FatFs\src\drivers\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_Audio\Addons\PDM\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_Device_Library\Class\AUDIO\Inc\
#        -Oh --use_c++_inline --require_prototypes -I "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.3\arm\CMSIS\Include\" -D
#        ARM_MATH_CM7 --relaxed_fp
#    List file    =  
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List\stm32f7xx_hal_dma.lst
#    Object file  =  
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\Obj\stm32f7xx_hal_dma.o
#
###############################################################################

H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Drivers\STM32F7xx_HAL_Driver\Src\stm32f7xx_hal_dma.c
      1          /**
      2            ******************************************************************************
      3            * @file    stm32f7xx_hal_dma.c
      4            * @author  MCD Application Team
      5            * @version V1.0.1
      6            * @date    25-June-2015
      7            * @brief   DMA HAL module driver.
      8            *    
      9            *          This file provides firmware functions to manage the following 
     10            *          functionalities of the Direct Memory Access (DMA) peripheral:
     11            *           + Initialization and de-initialization functions
     12            *           + IO operation functions
     13            *           + Peripheral State and errors functions
     14            @verbatim     
     15            ==============================================================================      
     16                                  ##### How to use this driver #####
     17            ============================================================================== 
     18            [..]
     19             (#) Enable and configure the peripheral to be connected to the DMA Stream
     20                 (except for internal SRAM/FLASH memories: no initialization is 
     21                 necessary) please refer to Reference manual for connection between peripherals
     22                 and DMA requests . 
     23                    
     24             (#) For a given Stream, program the required configuration through the following parameters:   
     25                 Transfer Direction, Source and Destination data formats, 
     26                 Circular, Normal or peripheral flow control mode, Stream Priority level, 
     27                 Source and Destination Increment mode, FIFO mode and its Threshold (if needed), 
     28                 Burst mode for Source and/or Destination (if needed) using HAL_DMA_Init() function.
     29                               
     30               *** Polling mode IO operation ***
     31               =================================   
     32              [..] 
     33                    (+) Use HAL_DMA_Start() to start DMA transfer after the configuration of Source 
     34                        address and destination address and the Length of data to be transferred
     35                    (+) Use HAL_DMA_PollForTransfer() to poll for the end of current transfer, in this  
     36                        case a fixed Timeout can be configured by User depending from his application.
     37                         
     38               *** Interrupt mode IO operation ***    
     39               =================================== 
     40              [..]     
     41                    (+) Configure the DMA interrupt priority using HAL_NVIC_SetPriority()
     42                    (+) Enable the DMA IRQ handler using HAL_NVIC_EnableIRQ() 
     43                    (+) Use HAL_DMA_Start_IT() to start DMA transfer after the configuration of  
     44                        Source address and destination address and the Length of data to be transferred. In this 
     45                        case the DMA interrupt is configured 
     46                    (+) Use HAL_DMA_IRQHandler() called under DMA_IRQHandler() Interrupt subroutine
     47                    (+) At the end of data transfer HAL_DMA_IRQHandler() function is executed and user can 
     48                        add his own function by customization of function pointer XferCpltCallback and 
     49                        XferErrorCallback (i.e a member of DMA handle structure). 
     50              [..]                
     51               (#) Use HAL_DMA_GetState() function to return the DMA state and HAL_DMA_GetError() in case of error 
     52                   detection.
     53                   
     54               (#) Use HAL_DMA_Abort() function to abort the current transfer
     55               
     56               -@-   In Memory-to-Memory transfer mode, Circular mode is not allowed.
     57              
     58               -@-   The FIFO is used mainly to reduce bus usage and to allow data packing/unpacking: it is
     59                     possible to set different Data Sizes for the Peripheral and the Memory (ie. you can set
     60                     Half-Word data size for the peripheral to access its data register and set Word data size
     61                     for the Memory to gain in access time. Each two half words will be packed and written in
     62                     a single access to a Word in the Memory).
     63                
     64               -@-   When FIFO is disabled, it is not allowed to configure different Data Sizes for Source
     65                     and Destination. In this case the Peripheral Data Size will be applied to both Source
     66                     and Destination.               
     67            
     68               *** DMA HAL driver macros list ***
     69               ============================================= 
     70               [..]
     71                 Below the list of most used macros in DMA HAL driver.
     72                 
     73                (+) __HAL_DMA_ENABLE: Enable the specified DMA Stream.
     74                (+) __HAL_DMA_DISABLE: Disable the specified DMA Stream.
     75                (+) __HAL_DMA_GET_FS: Return the current DMA Stream FIFO filled level.
     76                (+) __HAL_DMA_GET_FLAG: Get the DMA Stream pending flags.
     77                (+) __HAL_DMA_CLEAR_FLAG: Clear the DMA Stream pending flags.
     78                (+) __HAL_DMA_ENABLE_IT: Enable the specified DMA Stream interrupts.
     79                (+) __HAL_DMA_DISABLE_IT: Disable the specified DMA Stream interrupts.
     80                (+) __HAL_DMA_GET_IT_SOURCE: Check whether the specified DMA Stream interrupt has occurred or not. 
     81               
     82               [..] 
     83                (@) You can refer to the DMA HAL driver header file for more useful macros  
     84            
     85            @endverbatim
     86            ******************************************************************************
     87            * @attention
     88            *
     89            * <h2><center>&copy; COPYRIGHT(c) 2015 STMicroelectronics</center></h2>
     90            *
     91            * Redistribution and use in source and binary forms, with or without modification,
     92            * are permitted provided that the following conditions are met:
     93            *   1. Redistributions of source code must retain the above copyright notice,
     94            *      this list of conditions and the following disclaimer.
     95            *   2. Redistributions in binary form must reproduce the above copyright notice,
     96            *      this list of conditions and the following disclaimer in the documentation
     97            *      and/or other materials provided with the distribution.
     98            *   3. Neither the name of STMicroelectronics nor the names of its contributors
     99            *      may be used to endorse or promote products derived from this software
    100            *      without specific prior written permission.
    101            *
    102            * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
    103            * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
    104            * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
    105            * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
    106            * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
    107            * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
    108            * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
    109            * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
    110            * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
    111            * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    112            *
    113            ******************************************************************************
    114            */ 
    115          
    116          /* Includes ------------------------------------------------------------------*/
    117          #include "stm32f7xx_hal.h"
    118          
    119          /** @addtogroup STM32F7xx_HAL_Driver
    120            * @{
    121            */
    122          
    123          /** @defgroup DMA DMA
    124            * @brief DMA HAL module driver
    125            * @{
    126            */
    127          
    128          #ifdef HAL_DMA_MODULE_ENABLED
    129          
    130          /* Private types -------------------------------------------------------------*/
    131          /* Private variables ---------------------------------------------------------*/
    132          /* Private constants ---------------------------------------------------------*/
    133          /** @addtogroup DMA_Private_Constants
    134           * @{
    135           */
    136           #define HAL_TIMEOUT_DMA_ABORT    ((uint32_t)1000)  /* 1s */
    137          /**
    138            * @}
    139            */
    140          /* Private macros ------------------------------------------------------------*/
    141          /* Private functions ---------------------------------------------------------*/
    142          /** @addtogroup DMA_Private_Functions
    143            * @{
    144            */
    145          
    146          /**
    147            * @brief  Sets the DMA Transfer parameter.
    148            * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
    149            *                     the configuration information for the specified DMA Stream.
    150            * @param  SrcAddress: The source memory Buffer address
    151            * @param  DstAddress: The destination memory Buffer address
    152            * @param  DataLength: The length of data to be transferred from source to destination
    153            * @retval HAL status
    154            */

   \                                 In section .text, align 2, keep-with-next
    155          void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
    156          {
   \                     DMA_SetConfig: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
    157            /* Clear DBM bit */
    158            hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
   \   00000002   0x6804             LDR      R4,[R0, #+0]
   \   00000004   0x6825             LDR      R5,[R4, #+0]
   \   00000006   0xF425 0x2580      BIC      R5,R5,#0x40000
   \   0000000A   0x6025             STR      R5,[R4, #+0]
    159          	
    160            /* Configure DMA Stream data length */
    161            hdma->Instance->NDTR = DataLength;
   \   0000000C   0x6063             STR      R3,[R4, #+4]
    162          
    163            /* Peripheral to Memory */
    164            if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
   \   0000000E   0x6880             LDR      R0,[R0, #+8]
   \   00000010   0x2840             CMP      R0,#+64
   \   00000012   0xBF07             ITTEE    EQ 
   \   00000014   0x60A2             STREQ    R2,[R4, #+8]
   \   00000016   0x60E1             STREQ    R1,[R4, #+12]
   \   00000018   0x60A1             STRNE    R1,[R4, #+8]
   \   0000001A   0x60E2             STRNE    R2,[R4, #+12]
    165            {
    166              /* Configure DMA Stream destination address */
    167              hdma->Instance->PAR = DstAddress;
    168          
    169              /* Configure DMA Stream source address */
    170              hdma->Instance->M0AR = SrcAddress;
    171            }
    172            /* Memory to Peripheral */
    173            else
    174            {
    175              /* Configure DMA Stream source address */
    176              hdma->Instance->PAR = SrcAddress;
    177              
    178              /* Configure DMA Stream destination address */
    179              hdma->Instance->M0AR = DstAddress;
    180            }
    181          }
   \   0000001C   0xBC30             POP      {R4,R5}
   \   0000001E   0x4770             BX       LR               ;; return
    182          
    183          /**
    184            * @}
    185            */  
    186            
    187          /* Exported functions ---------------------------------------------------------*/
    188          /** @addtogroup DMA_Exported_Functions
    189            * @{
    190            */
    191          
    192          /** @addtogroup DMA_Exported_Functions_Group1
    193            *
    194          @verbatim   
    195           ===============================================================================
    196                       ##### Initialization and de-initialization functions  #####
    197           ===============================================================================  
    198              [..]
    199              This section provides functions allowing to initialize the DMA Stream source
    200              and destination addresses, incrementation and data sizes, transfer direction, 
    201              circular/normal mode selection, memory-to-memory mode selection and Stream priority value.
    202              [..]
    203              The HAL_DMA_Init() function follows the DMA configuration procedures as described in
    204              reference manual.  
    205          
    206          @endverbatim
    207            * @{
    208            */
    209            
    210          /**
    211            * @brief  Initializes the DMA according to the specified
    212            *         parameters in the DMA_InitTypeDef and create the associated handle.
    213            * @param  hdma: Pointer to a DMA_HandleTypeDef structure that contains
    214            *               the configuration information for the specified DMA Stream.  
    215            * @retval HAL status
    216            */

   \                                 In section .text, align 2, keep-with-next
    217          HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
    218          { 
    219            uint32_t tmp = 0;
    220            
    221            /* Check the DMA peripheral state */
    222            if(hdma == NULL)
   \                     HAL_DMA_Init: (+1)
   \   00000000   0xB908             CBNZ.N   R0,??HAL_DMA_Init_0
    223            {
    224              return HAL_ERROR;
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x4770             BX       LR
    225            }
    226          
    227            /* Check the parameters */
    228            assert_param(IS_DMA_STREAM_ALL_INSTANCE(hdma->Instance));
    229            assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
    230            assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
    231            assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
    232            assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
    233            assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
    234            assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
    235            assert_param(IS_DMA_MODE(hdma->Init.Mode));
    236            assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
    237            assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
    238            /* Check the memory burst, peripheral burst and FIFO threshold parameters only
    239               when FIFO mode is enabled */
    240            if(hdma->Init.FIFOMode != DMA_FIFOMODE_DISABLE)
    241            {
    242              assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
    243              assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
    244              assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
    245            }
    246          
    247            /* Change DMA peripheral state */
    248            hdma->State = HAL_DMA_STATE_BUSY;
   \                     ??HAL_DMA_Init_0: (+1)
   \   00000006   0x2102             MOVS     R1,#+2
    249          
    250            /* Get the CR register value */
    251            tmp = hdma->Instance->CR;
    252          
    253            /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
    254            tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
    255                                DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
    256                                DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
    257                                DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));
    258          
    259            /* Prepare the DMA Stream configuration */
    260            tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
    261                    hdma->Init.PeriphInc           | hdma->Init.MemInc           |
    262                    hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
    263                    hdma->Init.Mode                | hdma->Init.Priority;
   \   00000008   0x.... 0x....      LDR.W    R3,??DataTable1  ;; 0xf010803f
   \   0000000C   0xF880 0x1035      STRB     R1,[R0, #+53]
   \   00000010   0x6801             LDR      R1,[R0, #+0]
   \   00000012   0x680A             LDR      R2,[R1, #+0]
   \   00000014   0x401A             ANDS     R2,R3,R2
   \   00000016   0x6843             LDR      R3,[R0, #+4]
   \   00000018   0x431A             ORRS     R2,R3,R2
   \   0000001A   0x6883             LDR      R3,[R0, #+8]
   \   0000001C   0x431A             ORRS     R2,R3,R2
   \   0000001E   0x68C3             LDR      R3,[R0, #+12]
   \   00000020   0x431A             ORRS     R2,R3,R2
   \   00000022   0x6903             LDR      R3,[R0, #+16]
   \   00000024   0x431A             ORRS     R2,R3,R2
   \   00000026   0x6943             LDR      R3,[R0, #+20]
   \   00000028   0x431A             ORRS     R2,R3,R2
   \   0000002A   0x6983             LDR      R3,[R0, #+24]
   \   0000002C   0x431A             ORRS     R2,R3,R2
   \   0000002E   0x69C3             LDR      R3,[R0, #+28]
   \   00000030   0x431A             ORRS     R2,R3,R2
   \   00000032   0x6A03             LDR      R3,[R0, #+32]
   \   00000034   0x431A             ORRS     R2,R3,R2
    264          
    265            /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
    266            if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
   \   00000036   0x6A43             LDR      R3,[R0, #+36]
   \   00000038   0x2B04             CMP      R3,#+4
   \   0000003A   0xD105             BNE.N    ??HAL_DMA_Init_1
    267            {
    268              /* Get memory burst and peripheral burst */
    269              tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
   \   0000003C   0x6AC3             LDR      R3,[R0, #+44]
   \   0000003E   0xF8D0 0xC030      LDR      R12,[R0, #+48]
   \   00000042   0xEA4C 0x0303      ORR      R3,R12,R3
   \   00000046   0x431A             ORRS     R2,R3,R2
    270            }
    271            
    272            /* Write to DMA Stream CR register */
    273            hdma->Instance->CR = tmp;  
   \                     ??HAL_DMA_Init_1: (+1)
   \   00000048   0x600A             STR      R2,[R1, #+0]
    274          
    275            /* Get the FCR register value */
    276            tmp = hdma->Instance->FCR;
   \   0000004A   0x6801             LDR      R1,[R0, #+0]
   \   0000004C   0x694A             LDR      R2,[R1, #+20]
    277          
    278            /* Clear Direct mode and FIFO threshold bits */
    279            tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
    280          
    281            /* Prepare the DMA Stream FIFO configuration */
    282            tmp |= hdma->Init.FIFOMode;
   \   0000004E   0x6A43             LDR      R3,[R0, #+36]
   \   00000050   0x08D2             LSRS     R2,R2,#+3
    283          
    284            /* the FIFO threshold is not used when the FIFO mode is disabled */
    285            if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
   \   00000052   0x2B04             CMP      R3,#+4
   \   00000054   0xEA43 0x02C2      ORR      R2,R3,R2, LSL #+3
   \   00000058   0xBF04             ITT      EQ 
   \   0000005A   0x6A83             LDREQ    R3,[R0, #+40]
   \   0000005C   0x431A             ORREQ    R2,R3,R2
    286            {
    287              /* Get the FIFO threshold */
    288              tmp |= hdma->Init.FIFOThreshold;
    289            }
    290            
    291            /* Write to DMA Stream FCR */
    292            hdma->Instance->FCR = tmp;
   \   0000005E   0x614A             STR      R2,[R1, #+20]
    293          
    294            /* Initialize the error code */
    295            hdma->ErrorCode = HAL_DMA_ERROR_NONE;
   \   00000060   0x2100             MOVS     R1,#+0
   \   00000062   0x64C1             STR      R1,[R0, #+76]
    296          
    297            /* Initialize the DMA state */
    298            hdma->State = HAL_DMA_STATE_READY;
   \   00000064   0x2101             MOVS     R1,#+1
   \   00000066   0xF880 0x1035      STRB     R1,[R0, #+53]
    299          
    300            return HAL_OK;
   \   0000006A   0x2000             MOVS     R0,#+0
   \   0000006C   0x4770             BX       LR               ;; return
    301          }
    302          
    303          /**
    304            * @brief  DeInitializes the DMA peripheral 
    305            * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
    306            *               the configuration information for the specified DMA Stream.  
    307            * @retval HAL status
    308            */

   \                                 In section .text, align 2, keep-with-next
    309          HAL_StatusTypeDef HAL_DMA_DeInit(DMA_HandleTypeDef *hdma)
    310          {
    311            /* Check the DMA peripheral state */
    312            if(hdma == NULL)
   \                     HAL_DMA_DeInit: (+1)
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xB4F0             PUSH     {R4-R7}
   \   00000004   0xBF1D             ITTTE    NE 
   \   00000006   0xF100 0x0134      ADDNE    R1,R0,#+52
   \   0000000A   0x784A             LDRBNE   R2,[R1, #+1]
   \   0000000C   0x2A02             CMPNE    R2,#+2
   \   0000000E   0x2001             MOVEQ    R0,#+1
    313            {
    314              return HAL_ERROR;
    315            }
    316            
    317            /* Check the DMA peripheral state */
    318            if(hdma->State == HAL_DMA_STATE_BUSY)
    319            {
    320               return HAL_ERROR;
   \   00000010   0xF000 0x81E1      BEQ.W    ??HAL_DMA_DeInit_0
    321            }
    322          
    323            /* Disable the selected DMA Streamx */
    324            __HAL_DMA_DISABLE(hdma);
   \   00000014   0x6802             LDR      R2,[R0, #+0]
    325          
    326            /* Reset DMA Streamx control register */
    327            hdma->Instance->CR   = 0;
    328          
    329            /* Reset DMA Streamx number of data to transfer register */
    330            hdma->Instance->NDTR = 0;
    331          
    332            /* Reset DMA Streamx peripheral address register */
    333            hdma->Instance->PAR  = 0;
    334          
    335            /* Reset DMA Streamx memory 0 address register */
    336            hdma->Instance->M0AR = 0;
    337          
    338            /* Reset DMA Streamx memory 1 address register */
    339            hdma->Instance->M1AR = 0;
    340          
    341            /* Reset DMA Streamx FIFO control register */
    342            hdma->Instance->FCR  = (uint32_t)0x00000021;
    343          
    344            /* Clear all flags */
    345            __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_DME_FLAG_INDEX(hdma));
   \   00000016   0x.... 0x....      LDR.W    R5,??DataTable1_1  ;; 0x40026459
   \   0000001A   0x.... 0x....      LDR.W    R4,??DataTable1_2  ;; 0x40026470
   \   0000001E   0x6813             LDR      R3,[R2, #+0]
   \   00000020   0x085B             LSRS     R3,R3,#+1
   \   00000022   0x005B             LSLS     R3,R3,#+1
   \   00000024   0x6013             STR      R3,[R2, #+0]
   \   00000026   0x6803             LDR      R3,[R0, #+0]
   \   00000028   0x2200             MOVS     R2,#+0
   \   0000002A   0x601A             STR      R2,[R3, #+0]
   \   0000002C   0x6803             LDR      R3,[R0, #+0]
   \   0000002E   0x605A             STR      R2,[R3, #+4]
   \   00000030   0x6803             LDR      R3,[R0, #+0]
   \   00000032   0x609A             STR      R2,[R3, #+8]
   \   00000034   0x6803             LDR      R3,[R0, #+0]
   \   00000036   0x60DA             STR      R2,[R3, #+12]
   \   00000038   0x6803             LDR      R3,[R0, #+0]
   \   0000003A   0x611A             STR      R2,[R3, #+16]
   \   0000003C   0x6803             LDR      R3,[R0, #+0]
   \   0000003E   0x2221             MOVS     R2,#+33
   \   00000040   0x615A             STR      R2,[R3, #+20]
   \   00000042   0x6806             LDR      R6,[R0, #+0]
   \   00000044   0x.... 0x....      LDR.W    R2,??DataTable1_3  ;; 0x40026408
   \   00000048   0x.... 0x....      LDR.W    R3,??DataTable1_4  ;; 0x400260b9
   \   0000004C   0x42AE             CMP      R6,R5
   \   0000004E   0xD315             BCC.N    ??HAL_DMA_DeInit_1
   \   00000050   0x42A6             CMP      R6,R4
   \   00000052   0xBF08             IT       EQ 
   \   00000054   0x.... 0x....      LDREQ.W  R6,??DataTable1_5  ;; 0x800004
   \   00000058   0xD00E             BEQ.N    ??HAL_DMA_DeInit_2
   \   0000005A   0x.... 0x....      LDR.W    R7,??DataTable1_6  ;; 0x40026488
   \   0000005E   0x42BE             CMP      R6,R7
   \   00000060   0xBF08             IT       EQ 
   \   00000062   0xF44F 0x7680      MOVEQ    R6,#+256
   \   00000066   0xD007             BEQ.N    ??HAL_DMA_DeInit_2
   \   00000068   0x.... 0x....      LDR.W    R7,??DataTable1_7  ;; 0x400264a0
   \   0000006C   0x42BE             CMP      R6,R7
   \   0000006E   0xBF0C             ITE      EQ 
   \   00000070   0xF44F 0x2680      MOVEQ    R6,#+262144
   \   00000074   0xF04F 0x7680      MOVNE    R6,#+16777216
   \                     ??HAL_DMA_DeInit_2: (+1)
   \   00000078   0x6056             STR      R6,[R2, #+4]
   \   0000007A   0xE04E             B.N      ??HAL_DMA_DeInit_3
   \                     ??HAL_DMA_DeInit_1: (+1)
   \   0000007C   0x429E             CMP      R6,R3
   \   0000007E   0xD317             BCC.N    ??HAL_DMA_DeInit_4
   \   00000080   0x.... 0x....      LDR.W    R7,??DataTable1_8  ;; 0x40026410
   \   00000084   0x42BE             CMP      R6,R7
   \   00000086   0xBF08             IT       EQ 
   \   00000088   0x.... 0x....      LDREQ.W  R6,??DataTable1_5  ;; 0x800004
   \   0000008C   0xD00E             BEQ.N    ??HAL_DMA_DeInit_5
   \   0000008E   0x.... 0x....      LDR.W    R7,??DataTable1_9  ;; 0x40026428
   \   00000092   0x42BE             CMP      R6,R7
   \   00000094   0xBF08             IT       EQ 
   \   00000096   0xF44F 0x7680      MOVEQ    R6,#+256
   \   0000009A   0xD007             BEQ.N    ??HAL_DMA_DeInit_5
   \   0000009C   0x.... 0x....      LDR.W    R7,??DataTable1_10  ;; 0x40026440
   \   000000A0   0x42BE             CMP      R6,R7
   \   000000A2   0xBF0C             ITE      EQ 
   \   000000A4   0xF44F 0x2680      MOVEQ    R6,#+262144
   \   000000A8   0xF04F 0x7680      MOVNE    R6,#+16777216
   \                     ??HAL_DMA_DeInit_5: (+1)
   \   000000AC   0x6016             STR      R6,[R2, #+0]
   \   000000AE   0xE034             B.N      ??HAL_DMA_DeInit_3
   \                     ??HAL_DMA_DeInit_4: (+1)
   \   000000B0   0x.... 0x....      LDR.W    R7,??DataTable1_11  ;; 0x40026059
   \   000000B4   0x42BE             CMP      R6,R7
   \   000000B6   0xD319             BCC.N    ??HAL_DMA_DeInit_6
   \   000000B8   0x.... 0x....      LDR.W    R7,??DataTable1_12  ;; 0x40026070
   \   000000BC   0x42BE             CMP      R6,R7
   \   000000BE   0xBF08             IT       EQ 
   \   000000C0   0x.... 0x....      LDREQ.W  R6,??DataTable1_5  ;; 0x800004
   \   000000C4   0xD00E             BEQ.N    ??HAL_DMA_DeInit_7
   \   000000C6   0x.... 0x....      LDR.W    R7,??DataTable1_13  ;; 0x40026088
   \   000000CA   0x42BE             CMP      R6,R7
   \   000000CC   0xBF08             IT       EQ 
   \   000000CE   0xF44F 0x7680      MOVEQ    R6,#+256
   \   000000D2   0xD007             BEQ.N    ??HAL_DMA_DeInit_7
   \   000000D4   0x.... 0x....      LDR.W    R7,??DataTable1_14  ;; 0x400260a0
   \   000000D8   0x42BE             CMP      R6,R7
   \   000000DA   0xBF0C             ITE      EQ 
   \   000000DC   0xF44F 0x2680      MOVEQ    R6,#+262144
   \   000000E0   0xF04F 0x7680      MOVNE    R6,#+16777216
   \                     ??HAL_DMA_DeInit_7: (+1)
   \   000000E4   0x.... 0x....      LDR.W    R7,??DataTable1_15  ;; 0x40026008
   \   000000E8   0x607E             STR      R6,[R7, #+4]
   \   000000EA   0xE016             B.N      ??HAL_DMA_DeInit_3
   \                     ??HAL_DMA_DeInit_6: (+1)
   \   000000EC   0x.... 0x....      LDR.W    R7,??DataTable1_16  ;; 0x40026010
   \   000000F0   0x42BE             CMP      R6,R7
   \   000000F2   0xBF08             IT       EQ 
   \   000000F4   0x....             LDREQ.N  R6,??DataTable1_5  ;; 0x800004
   \   000000F6   0xD00E             BEQ.N    ??HAL_DMA_DeInit_8
   \   000000F8   0x.... 0x....      LDR.W    R7,??DataTable1_17  ;; 0x40026028
   \   000000FC   0x42BE             CMP      R6,R7
   \   000000FE   0xBF08             IT       EQ 
   \   00000100   0xF44F 0x7680      MOVEQ    R6,#+256
   \   00000104   0xD007             BEQ.N    ??HAL_DMA_DeInit_8
   \   00000106   0x.... 0x....      LDR.W    R7,??DataTable1_18  ;; 0x40026040
   \   0000010A   0x42BE             CMP      R6,R7
   \   0000010C   0xBF0C             ITE      EQ 
   \   0000010E   0xF44F 0x2680      MOVEQ    R6,#+262144
   \   00000112   0xF04F 0x7680      MOVNE    R6,#+16777216
   \                     ??HAL_DMA_DeInit_8: (+1)
   \   00000116   0x....             LDR.N    R7,??DataTable1_15  ;; 0x40026008
   \   00000118   0x603E             STR      R6,[R7, #+0]
    346            __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma));
   \                     ??HAL_DMA_DeInit_3: (+1)
   \   0000011A   0x6806             LDR      R6,[R0, #+0]
   \   0000011C   0x42AE             CMP      R6,R5
   \   0000011E   0xD312             BCC.N    ??HAL_DMA_DeInit_9
   \   00000120   0x42A6             CMP      R6,R4
   \   00000122   0xBF08             IT       EQ 
   \   00000124   0x2620             MOVEQ    R6,#+32
   \   00000126   0xD00C             BEQ.N    ??HAL_DMA_DeInit_10
   \   00000128   0x....             LDR.N    R7,??DataTable1_6  ;; 0x40026488
   \   0000012A   0x42BE             CMP      R6,R7
   \   0000012C   0xBF08             IT       EQ 
   \   0000012E   0xF44F 0x6600      MOVEQ    R6,#+2048
   \   00000132   0xD006             BEQ.N    ??HAL_DMA_DeInit_10
   \   00000134   0x....             LDR.N    R7,??DataTable1_7  ;; 0x400264a0
   \   00000136   0x42BE             CMP      R6,R7
   \   00000138   0xBF0C             ITE      EQ 
   \   0000013A   0xF44F 0x1600      MOVEQ    R6,#+2097152
   \   0000013E   0xF04F 0x6600      MOVNE    R6,#+134217728
   \                     ??HAL_DMA_DeInit_10: (+1)
   \   00000142   0x6056             STR      R6,[R2, #+4]
   \   00000144   0xE041             B.N      ??HAL_DMA_DeInit_11
   \                     ??HAL_DMA_DeInit_9: (+1)
   \   00000146   0x429E             CMP      R6,R3
   \   00000148   0xD313             BCC.N    ??HAL_DMA_DeInit_12
   \   0000014A   0x....             LDR.N    R7,??DataTable1_8  ;; 0x40026410
   \   0000014C   0x42BE             CMP      R6,R7
   \   0000014E   0xBF08             IT       EQ 
   \   00000150   0x2620             MOVEQ    R6,#+32
   \   00000152   0xD00C             BEQ.N    ??HAL_DMA_DeInit_13
   \   00000154   0x....             LDR.N    R7,??DataTable1_9  ;; 0x40026428
   \   00000156   0x42BE             CMP      R6,R7
   \   00000158   0xBF08             IT       EQ 
   \   0000015A   0xF44F 0x6600      MOVEQ    R6,#+2048
   \   0000015E   0xD006             BEQ.N    ??HAL_DMA_DeInit_13
   \   00000160   0x....             LDR.N    R7,??DataTable1_10  ;; 0x40026440
   \   00000162   0x42BE             CMP      R6,R7
   \   00000164   0xBF0C             ITE      EQ 
   \   00000166   0xF44F 0x1600      MOVEQ    R6,#+2097152
   \   0000016A   0xF04F 0x6600      MOVNE    R6,#+134217728
   \                     ??HAL_DMA_DeInit_13: (+1)
   \   0000016E   0x6016             STR      R6,[R2, #+0]
   \   00000170   0xE02B             B.N      ??HAL_DMA_DeInit_11
   \                     ??HAL_DMA_DeInit_12: (+1)
   \   00000172   0x....             LDR.N    R7,??DataTable1_11  ;; 0x40026059
   \   00000174   0x42BE             CMP      R6,R7
   \   00000176   0xD314             BCC.N    ??HAL_DMA_DeInit_14
   \   00000178   0x....             LDR.N    R7,??DataTable1_12  ;; 0x40026070
   \   0000017A   0x42BE             CMP      R6,R7
   \   0000017C   0xBF08             IT       EQ 
   \   0000017E   0x2620             MOVEQ    R6,#+32
   \   00000180   0xD00C             BEQ.N    ??HAL_DMA_DeInit_15
   \   00000182   0x....             LDR.N    R7,??DataTable1_13  ;; 0x40026088
   \   00000184   0x42BE             CMP      R6,R7
   \   00000186   0xBF08             IT       EQ 
   \   00000188   0xF44F 0x6600      MOVEQ    R6,#+2048
   \   0000018C   0xD006             BEQ.N    ??HAL_DMA_DeInit_15
   \   0000018E   0x....             LDR.N    R7,??DataTable1_14  ;; 0x400260a0
   \   00000190   0x42BE             CMP      R6,R7
   \   00000192   0xBF0C             ITE      EQ 
   \   00000194   0xF44F 0x1600      MOVEQ    R6,#+2097152
   \   00000198   0xF04F 0x6600      MOVNE    R6,#+134217728
   \                     ??HAL_DMA_DeInit_15: (+1)
   \   0000019C   0x....             LDR.N    R7,??DataTable1_15  ;; 0x40026008
   \   0000019E   0x607E             STR      R6,[R7, #+4]
   \   000001A0   0xE013             B.N      ??HAL_DMA_DeInit_11
   \                     ??HAL_DMA_DeInit_14: (+1)
   \   000001A2   0x....             LDR.N    R7,??DataTable1_16  ;; 0x40026010
   \   000001A4   0x42BE             CMP      R6,R7
   \   000001A6   0xBF08             IT       EQ 
   \   000001A8   0x2620             MOVEQ    R6,#+32
   \   000001AA   0xD00C             BEQ.N    ??HAL_DMA_DeInit_16
   \   000001AC   0x....             LDR.N    R7,??DataTable1_17  ;; 0x40026028
   \   000001AE   0x42BE             CMP      R6,R7
   \   000001B0   0xBF08             IT       EQ 
   \   000001B2   0xF44F 0x6600      MOVEQ    R6,#+2048
   \   000001B6   0xD006             BEQ.N    ??HAL_DMA_DeInit_16
   \   000001B8   0x....             LDR.N    R7,??DataTable1_18  ;; 0x40026040
   \   000001BA   0x42BE             CMP      R6,R7
   \   000001BC   0xBF0C             ITE      EQ 
   \   000001BE   0xF44F 0x1600      MOVEQ    R6,#+2097152
   \   000001C2   0xF04F 0x6600      MOVNE    R6,#+134217728
   \                     ??HAL_DMA_DeInit_16: (+1)
   \   000001C6   0x....             LDR.N    R7,??DataTable1_15  ;; 0x40026008
   \   000001C8   0x603E             STR      R6,[R7, #+0]
    347            __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TE_FLAG_INDEX(hdma));
   \                     ??HAL_DMA_DeInit_11: (+1)
   \   000001CA   0x6806             LDR      R6,[R0, #+0]
   \   000001CC   0x42AE             CMP      R6,R5
   \   000001CE   0xD312             BCC.N    ??HAL_DMA_DeInit_17
   \   000001D0   0x42A6             CMP      R6,R4
   \   000001D2   0xBF08             IT       EQ 
   \   000001D4   0x2608             MOVEQ    R6,#+8
   \   000001D6   0xD00C             BEQ.N    ??HAL_DMA_DeInit_18
   \   000001D8   0x....             LDR.N    R7,??DataTable1_6  ;; 0x40026488
   \   000001DA   0x42BE             CMP      R6,R7
   \   000001DC   0xBF08             IT       EQ 
   \   000001DE   0xF44F 0x7600      MOVEQ    R6,#+512
   \   000001E2   0xD006             BEQ.N    ??HAL_DMA_DeInit_18
   \   000001E4   0x....             LDR.N    R7,??DataTable1_7  ;; 0x400264a0
   \   000001E6   0x42BE             CMP      R6,R7
   \   000001E8   0xBF0C             ITE      EQ 
   \   000001EA   0xF44F 0x2600      MOVEQ    R6,#+524288
   \   000001EE   0xF04F 0x7600      MOVNE    R6,#+33554432
   \                     ??HAL_DMA_DeInit_18: (+1)
   \   000001F2   0x6056             STR      R6,[R2, #+4]
   \   000001F4   0xE041             B.N      ??HAL_DMA_DeInit_19
   \                     ??HAL_DMA_DeInit_17: (+1)
   \   000001F6   0x429E             CMP      R6,R3
   \   000001F8   0xD313             BCC.N    ??HAL_DMA_DeInit_20
   \   000001FA   0x....             LDR.N    R7,??DataTable1_8  ;; 0x40026410
   \   000001FC   0x42BE             CMP      R6,R7
   \   000001FE   0xBF08             IT       EQ 
   \   00000200   0x2608             MOVEQ    R6,#+8
   \   00000202   0xD00C             BEQ.N    ??HAL_DMA_DeInit_21
   \   00000204   0x....             LDR.N    R7,??DataTable1_9  ;; 0x40026428
   \   00000206   0x42BE             CMP      R6,R7
   \   00000208   0xBF08             IT       EQ 
   \   0000020A   0xF44F 0x7600      MOVEQ    R6,#+512
   \   0000020E   0xD006             BEQ.N    ??HAL_DMA_DeInit_21
   \   00000210   0x....             LDR.N    R7,??DataTable1_10  ;; 0x40026440
   \   00000212   0x42BE             CMP      R6,R7
   \   00000214   0xBF0C             ITE      EQ 
   \   00000216   0xF44F 0x2600      MOVEQ    R6,#+524288
   \   0000021A   0xF04F 0x7600      MOVNE    R6,#+33554432
   \                     ??HAL_DMA_DeInit_21: (+1)
   \   0000021E   0x6016             STR      R6,[R2, #+0]
   \   00000220   0xE02B             B.N      ??HAL_DMA_DeInit_19
   \                     ??HAL_DMA_DeInit_20: (+1)
   \   00000222   0x....             LDR.N    R7,??DataTable1_11  ;; 0x40026059
   \   00000224   0x42BE             CMP      R6,R7
   \   00000226   0xD314             BCC.N    ??HAL_DMA_DeInit_22
   \   00000228   0x....             LDR.N    R7,??DataTable1_12  ;; 0x40026070
   \   0000022A   0x42BE             CMP      R6,R7
   \   0000022C   0xBF08             IT       EQ 
   \   0000022E   0x2608             MOVEQ    R6,#+8
   \   00000230   0xD00C             BEQ.N    ??HAL_DMA_DeInit_23
   \   00000232   0x....             LDR.N    R7,??DataTable1_13  ;; 0x40026088
   \   00000234   0x42BE             CMP      R6,R7
   \   00000236   0xBF08             IT       EQ 
   \   00000238   0xF44F 0x7600      MOVEQ    R6,#+512
   \   0000023C   0xD006             BEQ.N    ??HAL_DMA_DeInit_23
   \   0000023E   0x....             LDR.N    R7,??DataTable1_14  ;; 0x400260a0
   \   00000240   0x42BE             CMP      R6,R7
   \   00000242   0xBF0C             ITE      EQ 
   \   00000244   0xF44F 0x2600      MOVEQ    R6,#+524288
   \   00000248   0xF04F 0x7600      MOVNE    R6,#+33554432
   \                     ??HAL_DMA_DeInit_23: (+1)
   \   0000024C   0x....             LDR.N    R7,??DataTable1_15  ;; 0x40026008
   \   0000024E   0x607E             STR      R6,[R7, #+4]
   \   00000250   0xE013             B.N      ??HAL_DMA_DeInit_19
   \                     ??HAL_DMA_DeInit_22: (+1)
   \   00000252   0x....             LDR.N    R7,??DataTable1_16  ;; 0x40026010
   \   00000254   0x42BE             CMP      R6,R7
   \   00000256   0xBF08             IT       EQ 
   \   00000258   0x2608             MOVEQ    R6,#+8
   \   0000025A   0xD00C             BEQ.N    ??HAL_DMA_DeInit_24
   \   0000025C   0x....             LDR.N    R7,??DataTable1_17  ;; 0x40026028
   \   0000025E   0x42BE             CMP      R6,R7
   \   00000260   0xBF08             IT       EQ 
   \   00000262   0xF44F 0x7600      MOVEQ    R6,#+512
   \   00000266   0xD006             BEQ.N    ??HAL_DMA_DeInit_24
   \   00000268   0x....             LDR.N    R7,??DataTable1_18  ;; 0x40026040
   \   0000026A   0x42BE             CMP      R6,R7
   \   0000026C   0xBF0C             ITE      EQ 
   \   0000026E   0xF44F 0x2600      MOVEQ    R6,#+524288
   \   00000272   0xF04F 0x7600      MOVNE    R6,#+33554432
   \                     ??HAL_DMA_DeInit_24: (+1)
   \   00000276   0x....             LDR.N    R7,??DataTable1_15  ;; 0x40026008
   \   00000278   0x603E             STR      R6,[R7, #+0]
    348            __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_FE_FLAG_INDEX(hdma));
   \                     ??HAL_DMA_DeInit_19: (+1)
   \   0000027A   0x6806             LDR      R6,[R0, #+0]
   \   0000027C   0x42AE             CMP      R6,R5
   \   0000027E   0xD311             BCC.N    ??HAL_DMA_DeInit_25
   \   00000280   0x42A6             CMP      R6,R4
   \   00000282   0xBF08             IT       EQ 
   \   00000284   0x....             LDREQ.N  R6,??DataTable1_19  ;; 0x800001
   \   00000286   0xD00B             BEQ.N    ??HAL_DMA_DeInit_26
   \   00000288   0x....             LDR.N    R7,??DataTable1_6  ;; 0x40026488
   \   0000028A   0x42BE             CMP      R6,R7
   \   0000028C   0xBF08             IT       EQ 
   \   0000028E   0x2640             MOVEQ    R6,#+64
   \   00000290   0xD006             BEQ.N    ??HAL_DMA_DeInit_26
   \   00000292   0x....             LDR.N    R7,??DataTable1_7  ;; 0x400264a0
   \   00000294   0x42BE             CMP      R6,R7
   \   00000296   0xBF0C             ITE      EQ 
   \   00000298   0xF44F 0x3680      MOVEQ    R6,#+65536
   \   0000029C   0xF44F 0x0680      MOVNE    R6,#+4194304
   \                     ??HAL_DMA_DeInit_26: (+1)
   \   000002A0   0x6056             STR      R6,[R2, #+4]
   \   000002A2   0xE03E             B.N      ??HAL_DMA_DeInit_27
   \                     ??HAL_DMA_DeInit_25: (+1)
   \   000002A4   0x429E             CMP      R6,R3
   \   000002A6   0xD312             BCC.N    ??HAL_DMA_DeInit_28
   \   000002A8   0x....             LDR.N    R7,??DataTable1_8  ;; 0x40026410
   \   000002AA   0x42BE             CMP      R6,R7
   \   000002AC   0xBF08             IT       EQ 
   \   000002AE   0x....             LDREQ.N  R6,??DataTable1_19  ;; 0x800001
   \   000002B0   0xD00B             BEQ.N    ??HAL_DMA_DeInit_29
   \   000002B2   0x....             LDR.N    R7,??DataTable1_9  ;; 0x40026428
   \   000002B4   0x42BE             CMP      R6,R7
   \   000002B6   0xBF08             IT       EQ 
   \   000002B8   0x2640             MOVEQ    R6,#+64
   \   000002BA   0xD006             BEQ.N    ??HAL_DMA_DeInit_29
   \   000002BC   0x....             LDR.N    R7,??DataTable1_10  ;; 0x40026440
   \   000002BE   0x42BE             CMP      R6,R7
   \   000002C0   0xBF0C             ITE      EQ 
   \   000002C2   0xF44F 0x3680      MOVEQ    R6,#+65536
   \   000002C6   0xF44F 0x0680      MOVNE    R6,#+4194304
   \                     ??HAL_DMA_DeInit_29: (+1)
   \   000002CA   0x6016             STR      R6,[R2, #+0]
   \   000002CC   0xE029             B.N      ??HAL_DMA_DeInit_27
   \                     ??HAL_DMA_DeInit_28: (+1)
   \   000002CE   0x....             LDR.N    R7,??DataTable1_11  ;; 0x40026059
   \   000002D0   0x42BE             CMP      R6,R7
   \   000002D2   0xD313             BCC.N    ??HAL_DMA_DeInit_30
   \   000002D4   0x....             LDR.N    R7,??DataTable1_12  ;; 0x40026070
   \   000002D6   0x42BE             CMP      R6,R7
   \   000002D8   0xBF08             IT       EQ 
   \   000002DA   0x....             LDREQ.N  R6,??DataTable1_19  ;; 0x800001
   \   000002DC   0xD00B             BEQ.N    ??HAL_DMA_DeInit_31
   \   000002DE   0x....             LDR.N    R7,??DataTable1_13  ;; 0x40026088
   \   000002E0   0x42BE             CMP      R6,R7
   \   000002E2   0xBF08             IT       EQ 
   \   000002E4   0x2640             MOVEQ    R6,#+64
   \   000002E6   0xD006             BEQ.N    ??HAL_DMA_DeInit_31
   \   000002E8   0x....             LDR.N    R7,??DataTable1_14  ;; 0x400260a0
   \   000002EA   0x42BE             CMP      R6,R7
   \   000002EC   0xBF0C             ITE      EQ 
   \   000002EE   0xF44F 0x3680      MOVEQ    R6,#+65536
   \   000002F2   0xF44F 0x0680      MOVNE    R6,#+4194304
   \                     ??HAL_DMA_DeInit_31: (+1)
   \   000002F6   0x....             LDR.N    R7,??DataTable1_15  ;; 0x40026008
   \   000002F8   0x607E             STR      R6,[R7, #+4]
   \   000002FA   0xE012             B.N      ??HAL_DMA_DeInit_27
   \                     ??HAL_DMA_DeInit_30: (+1)
   \   000002FC   0x....             LDR.N    R7,??DataTable1_16  ;; 0x40026010
   \   000002FE   0x42BE             CMP      R6,R7
   \   00000300   0xBF08             IT       EQ 
   \   00000302   0x....             LDREQ.N  R6,??DataTable1_19  ;; 0x800001
   \   00000304   0xD00B             BEQ.N    ??HAL_DMA_DeInit_32
   \   00000306   0x....             LDR.N    R7,??DataTable1_17  ;; 0x40026028
   \   00000308   0x42BE             CMP      R6,R7
   \   0000030A   0xBF08             IT       EQ 
   \   0000030C   0x2640             MOVEQ    R6,#+64
   \   0000030E   0xD006             BEQ.N    ??HAL_DMA_DeInit_32
   \   00000310   0x....             LDR.N    R7,??DataTable1_18  ;; 0x40026040
   \   00000312   0x42BE             CMP      R6,R7
   \   00000314   0xBF0C             ITE      EQ 
   \   00000316   0xF44F 0x3680      MOVEQ    R6,#+65536
   \   0000031A   0xF44F 0x0680      MOVNE    R6,#+4194304
   \                     ??HAL_DMA_DeInit_32: (+1)
   \   0000031E   0x....             LDR.N    R7,??DataTable1_15  ;; 0x40026008
   \   00000320   0x603E             STR      R6,[R7, #+0]
    349            __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
   \                     ??HAL_DMA_DeInit_27: (+1)
   \   00000322   0x6800             LDR      R0,[R0, #+0]
   \   00000324   0x42A8             CMP      R0,R5
   \   00000326   0xD311             BCC.N    ??HAL_DMA_DeInit_33
   \   00000328   0x42A0             CMP      R0,R4
   \   0000032A   0xBF08             IT       EQ 
   \   0000032C   0x2010             MOVEQ    R0,#+16
   \   0000032E   0xD038             BEQ.N    ??HAL_DMA_DeInit_34
   \   00000330   0x....             LDR.N    R3,??DataTable1_6  ;; 0x40026488
   \   00000332   0x4298             CMP      R0,R3
   \   00000334   0xBF08             IT       EQ 
   \   00000336   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   0000033A   0xD032             BEQ.N    ??HAL_DMA_DeInit_34
   \   0000033C   0x....             LDR.N    R3,??DataTable1_7  ;; 0x400264a0
   \   0000033E   0x4298             CMP      R0,R3
   \   00000340   0xBF14             ITE      NE 
   \   00000342   0xF04F 0x6080      MOVNE    R0,#+67108864
   \   00000346   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   0000034A   0xE02A             B.N      ??HAL_DMA_DeInit_34
   \                     ??HAL_DMA_DeInit_33: (+1)
   \   0000034C   0x4298             CMP      R0,R3
   \   0000034E   0xD312             BCC.N    ??HAL_DMA_DeInit_35
   \   00000350   0x....             LDR.N    R3,??DataTable1_8  ;; 0x40026410
   \   00000352   0x4298             CMP      R0,R3
   \   00000354   0xBF08             IT       EQ 
   \   00000356   0x2010             MOVEQ    R0,#+16
   \   00000358   0xD038             BEQ.N    ??HAL_DMA_DeInit_36
   \   0000035A   0x....             LDR.N    R3,??DataTable1_9  ;; 0x40026428
   \   0000035C   0x4298             CMP      R0,R3
   \   0000035E   0xBF08             IT       EQ 
   \   00000360   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   00000364   0xD032             BEQ.N    ??HAL_DMA_DeInit_36
   \   00000366   0x....             LDR.N    R3,??DataTable1_10  ;; 0x40026440
   \   00000368   0x4298             CMP      R0,R3
   \   0000036A   0xBF14             ITE      NE 
   \   0000036C   0xF04F 0x6080      MOVNE    R0,#+67108864
   \   00000370   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   00000374   0xE02A             B.N      ??HAL_DMA_DeInit_36
   \                     ??HAL_DMA_DeInit_35: (+1)
   \   00000376   0x....             LDR.N    R2,??DataTable1_11  ;; 0x40026059
   \   00000378   0x4290             CMP      R0,R2
   \   0000037A   0xD314             BCC.N    ??HAL_DMA_DeInit_37
   \   0000037C   0x....             LDR.N    R2,??DataTable1_12  ;; 0x40026070
   \   0000037E   0x4290             CMP      R0,R2
   \   00000380   0xBF08             IT       EQ 
   \   00000382   0x2010             MOVEQ    R0,#+16
   \   00000384   0xD00C             BEQ.N    ??HAL_DMA_DeInit_38
   \   00000386   0x....             LDR.N    R2,??DataTable1_13  ;; 0x40026088
   \   00000388   0x4290             CMP      R0,R2
   \   0000038A   0xBF08             IT       EQ 
   \   0000038C   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   00000390   0xD006             BEQ.N    ??HAL_DMA_DeInit_38
   \   00000392   0x....             LDR.N    R2,??DataTable1_14  ;; 0x400260a0
   \   00000394   0x4290             CMP      R0,R2
   \   00000396   0xBF0C             ITE      EQ 
   \   00000398   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   0000039C   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_DeInit_38: (+1)
   \   000003A0   0x....             LDR.N    R2,??DataTable1_15  ;; 0x40026008
   \                     ??HAL_DMA_DeInit_34: (+1)
   \   000003A2   0x6050             STR      R0,[R2, #+4]
   \   000003A4   0xE013             B.N      ??HAL_DMA_DeInit_39
   \                     ??HAL_DMA_DeInit_37: (+1)
   \   000003A6   0x....             LDR.N    R2,??DataTable1_16  ;; 0x40026010
   \   000003A8   0x4290             CMP      R0,R2
   \   000003AA   0xBF08             IT       EQ 
   \   000003AC   0x2010             MOVEQ    R0,#+16
   \   000003AE   0xD00C             BEQ.N    ??HAL_DMA_DeInit_40
   \   000003B0   0x....             LDR.N    R2,??DataTable1_17  ;; 0x40026028
   \   000003B2   0x4290             CMP      R0,R2
   \   000003B4   0xBF08             IT       EQ 
   \   000003B6   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   000003BA   0xD006             BEQ.N    ??HAL_DMA_DeInit_40
   \   000003BC   0x....             LDR.N    R2,??DataTable1_18  ;; 0x40026040
   \   000003BE   0x4290             CMP      R0,R2
   \   000003C0   0xBF0C             ITE      EQ 
   \   000003C2   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   000003C6   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_DeInit_40: (+1)
   \   000003CA   0x....             LDR.N    R2,??DataTable1_15  ;; 0x40026008
   \                     ??HAL_DMA_DeInit_36: (+1)
   \   000003CC   0x6010             STR      R0,[R2, #+0]
    350          
    351            /* Initialize the error code */
    352            hdma->ErrorCode = HAL_DMA_ERROR_NONE;
   \                     ??HAL_DMA_DeInit_39: (+1)
   \   000003CE   0x2000             MOVS     R0,#+0
   \   000003D0   0x6188             STR      R0,[R1, #+24]
    353          
    354            /* Initialize the DMA state */
    355            hdma->State = HAL_DMA_STATE_RESET;
   \   000003D2   0x7048             STRB     R0,[R1, #+1]
    356          
    357            /* Release Lock */
    358            __HAL_UNLOCK(hdma);
   \   000003D4   0x7008             STRB     R0,[R1, #+0]
    359          
    360            return HAL_OK;
   \                     ??HAL_DMA_DeInit_0: (+1)
   \   000003D6   0xBCF0             POP      {R4-R7}
   \   000003D8   0x4770             BX       LR               ;; return
    361          }
    362          
    363          /**
    364            * @}
    365            */
    366          
    367          /** @addtogroup DMA_Exported_Functions_Group2
    368            *
    369          @verbatim   
    370           ===============================================================================
    371                                #####  IO operation functions  #####
    372           ===============================================================================  
    373              [..]  This section provides functions allowing to:
    374                (+) Configure the source, destination address and data length and Start DMA transfer
    375                (+) Configure the source, destination address and data length and 
    376                    Start DMA transfer with interrupt
    377                (+) Abort DMA transfer
    378                (+) Poll for transfer complete
    379                (+) Handle DMA interrupt request  
    380          
    381          @endverbatim
    382            * @{
    383            */
    384          
    385          /**
    386            * @brief  Starts the DMA Transfer.
    387            * @param  hdma      : pointer to a DMA_HandleTypeDef structure that contains
    388            *                     the configuration information for the specified DMA Stream.  
    389            * @param  SrcAddress: The source memory Buffer address
    390            * @param  DstAddress: The destination memory Buffer address
    391            * @param  DataLength: The length of data to be transferred from source to destination
    392            * @retval HAL status
    393            */

   \                                 In section .text, align 2, keep-with-next
    394          HAL_StatusTypeDef HAL_DMA_Start(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
    395          {
   \                     HAL_DMA_Start: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
    396            /* Process locked */
    397            __HAL_LOCK(hdma);
   \   00000002   0xF100 0x0434      ADD      R4,R0,#+52
   \   00000006   0x7825             LDRB     R5,[R4, #+0]
   \   00000008   0x2D01             CMP      R5,#+1
   \   0000000A   0xBF08             IT       EQ 
   \   0000000C   0x2002             MOVEQ    R0,#+2
   \   0000000E   0xD020             BEQ.N    ??HAL_DMA_Start_0
   \   00000010   0x2501             MOVS     R5,#+1
   \   00000012   0x7025             STRB     R5,[R4, #+0]
    398          
    399            /* Change DMA peripheral state */
    400            hdma->State = HAL_DMA_STATE_BUSY;
   \   00000014   0x2502             MOVS     R5,#+2
   \   00000016   0x7065             STRB     R5,[R4, #+1]
    401          
    402             /* Check the parameters */
    403            assert_param(IS_DMA_BUFFER_SIZE(DataLength));
    404          
    405            /* Disable the peripheral */
    406            __HAL_DMA_DISABLE(hdma);
   \   00000018   0x6804             LDR      R4,[R0, #+0]
   \   0000001A   0x6825             LDR      R5,[R4, #+0]
   \   0000001C   0x086D             LSRS     R5,R5,#+1
   \   0000001E   0x006D             LSLS     R5,R5,#+1
   \   00000020   0x6025             STR      R5,[R4, #+0]
    407          
    408            /* Configure the source, destination address and the data length */
    409            DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
   \   00000022   0x6804             LDR      R4,[R0, #+0]
   \   00000024   0x6825             LDR      R5,[R4, #+0]
   \   00000026   0xF425 0x2580      BIC      R5,R5,#0x40000
   \   0000002A   0x6025             STR      R5,[R4, #+0]
   \   0000002C   0x6804             LDR      R4,[R0, #+0]
   \   0000002E   0x6063             STR      R3,[R4, #+4]
   \   00000030   0x6883             LDR      R3,[R0, #+8]
   \   00000032   0x2B40             CMP      R3,#+64
   \   00000034   0x6803             LDR      R3,[R0, #+0]
   \   00000036   0xD103             BNE.N    ??HAL_DMA_Start_1
   \   00000038   0x609A             STR      R2,[R3, #+8]
   \   0000003A   0x6802             LDR      R2,[R0, #+0]
   \   0000003C   0x60D1             STR      R1,[R2, #+12]
   \   0000003E   0xE002             B.N      ??HAL_DMA_Start_2
   \                     ??HAL_DMA_Start_1: (+1)
   \   00000040   0x6099             STR      R1,[R3, #+8]
   \   00000042   0x6801             LDR      R1,[R0, #+0]
   \   00000044   0x60CA             STR      R2,[R1, #+12]
    410          
    411            /* Enable the Peripheral */
    412            __HAL_DMA_ENABLE(hdma);
   \                     ??HAL_DMA_Start_2: (+1)
   \   00000046   0x6800             LDR      R0,[R0, #+0]
   \   00000048   0x6801             LDR      R1,[R0, #+0]
   \   0000004A   0xF041 0x0101      ORR      R1,R1,#0x1
   \   0000004E   0x6001             STR      R1,[R0, #+0]
    413          
    414            return HAL_OK; 
   \   00000050   0x2000             MOVS     R0,#+0
   \                     ??HAL_DMA_Start_0: (+1)
   \   00000052   0xBC30             POP      {R4,R5}
   \   00000054   0x4770             BX       LR               ;; return
    415          }
    416          
    417          /**
    418            * @brief  Start the DMA Transfer with interrupt enabled.
    419            * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
    420            *                     the configuration information for the specified DMA Stream.  
    421            * @param  SrcAddress: The source memory Buffer address
    422            * @param  DstAddress: The destination memory Buffer address
    423            * @param  DataLength: The length of data to be transferred from source to destination
    424            * @retval HAL status
    425            */

   \                                 In section .text, align 2, keep-with-next
    426          HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
    427          {
   \                     HAL_DMA_Start_IT: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
    428            /* Process locked */
    429            __HAL_LOCK(hdma);
   \   00000002   0xF100 0x0434      ADD      R4,R0,#+52
   \   00000006   0x7825             LDRB     R5,[R4, #+0]
   \   00000008   0x2D01             CMP      R5,#+1
   \   0000000A   0xBF08             IT       EQ 
   \   0000000C   0x2002             MOVEQ    R0,#+2
   \   0000000E   0xD039             BEQ.N    ??HAL_DMA_Start_IT_0
   \   00000010   0x2501             MOVS     R5,#+1
   \   00000012   0x7025             STRB     R5,[R4, #+0]
    430          
    431            /* Change DMA peripheral state */
    432            hdma->State = HAL_DMA_STATE_BUSY;
   \   00000014   0x2502             MOVS     R5,#+2
   \   00000016   0x7065             STRB     R5,[R4, #+1]
    433          
    434             /* Check the parameters */
    435            assert_param(IS_DMA_BUFFER_SIZE(DataLength));
    436          
    437            /* Disable the peripheral */
    438            __HAL_DMA_DISABLE(hdma);
   \   00000018   0x6804             LDR      R4,[R0, #+0]
   \   0000001A   0x6825             LDR      R5,[R4, #+0]
   \   0000001C   0x086D             LSRS     R5,R5,#+1
   \   0000001E   0x006D             LSLS     R5,R5,#+1
   \   00000020   0x6025             STR      R5,[R4, #+0]
    439          
    440            /* Configure the source, destination address and the data length */
    441            DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
   \   00000022   0x6804             LDR      R4,[R0, #+0]
   \   00000024   0x6825             LDR      R5,[R4, #+0]
   \   00000026   0xF425 0x2580      BIC      R5,R5,#0x40000
   \   0000002A   0x6025             STR      R5,[R4, #+0]
   \   0000002C   0x6804             LDR      R4,[R0, #+0]
   \   0000002E   0x6063             STR      R3,[R4, #+4]
   \   00000030   0x6883             LDR      R3,[R0, #+8]
   \   00000032   0x2B40             CMP      R3,#+64
   \   00000034   0x6803             LDR      R3,[R0, #+0]
   \   00000036   0xD103             BNE.N    ??HAL_DMA_Start_IT_1
   \   00000038   0x609A             STR      R2,[R3, #+8]
   \   0000003A   0x6802             LDR      R2,[R0, #+0]
   \   0000003C   0x60D1             STR      R1,[R2, #+12]
   \   0000003E   0xE002             B.N      ??HAL_DMA_Start_IT_2
   \                     ??HAL_DMA_Start_IT_1: (+1)
   \   00000040   0x6099             STR      R1,[R3, #+8]
   \   00000042   0x6801             LDR      R1,[R0, #+0]
   \   00000044   0x60CA             STR      R2,[R1, #+12]
    442          
    443            /* Enable the transfer complete interrupt */
    444            __HAL_DMA_ENABLE_IT(hdma, DMA_IT_TC);
   \                     ??HAL_DMA_Start_IT_2: (+1)
   \   00000046   0x6801             LDR      R1,[R0, #+0]
   \   00000048   0x680A             LDR      R2,[R1, #+0]
   \   0000004A   0xF042 0x0210      ORR      R2,R2,#0x10
   \   0000004E   0x600A             STR      R2,[R1, #+0]
    445          
    446            /* Enable the Half transfer complete interrupt */
    447            __HAL_DMA_ENABLE_IT(hdma, DMA_IT_HT);  
   \   00000050   0x6801             LDR      R1,[R0, #+0]
   \   00000052   0x680A             LDR      R2,[R1, #+0]
   \   00000054   0xF042 0x0208      ORR      R2,R2,#0x8
   \   00000058   0x600A             STR      R2,[R1, #+0]
    448          
    449            /* Enable the transfer Error interrupt */
    450            __HAL_DMA_ENABLE_IT(hdma, DMA_IT_TE);
   \   0000005A   0x6801             LDR      R1,[R0, #+0]
   \   0000005C   0x680A             LDR      R2,[R1, #+0]
   \   0000005E   0xF042 0x0204      ORR      R2,R2,#0x4
   \   00000062   0x600A             STR      R2,[R1, #+0]
    451          
    452            /* Enable the FIFO Error interrupt */
    453            __HAL_DMA_ENABLE_IT(hdma, DMA_IT_FE);
   \   00000064   0x6801             LDR      R1,[R0, #+0]
   \   00000066   0x694A             LDR      R2,[R1, #+20]
   \   00000068   0xF042 0x0280      ORR      R2,R2,#0x80
   \   0000006C   0x614A             STR      R2,[R1, #+20]
    454          
    455            /* Enable the direct mode Error interrupt */
    456            __HAL_DMA_ENABLE_IT(hdma, DMA_IT_DME);
   \   0000006E   0x6801             LDR      R1,[R0, #+0]
   \   00000070   0x680A             LDR      R2,[R1, #+0]
   \   00000072   0xF042 0x0202      ORR      R2,R2,#0x2
   \   00000076   0x600A             STR      R2,[R1, #+0]
    457          
    458             /* Enable the Peripheral */
    459            __HAL_DMA_ENABLE(hdma);
   \   00000078   0x6800             LDR      R0,[R0, #+0]
   \   0000007A   0x6801             LDR      R1,[R0, #+0]
   \   0000007C   0xF041 0x0101      ORR      R1,R1,#0x1
   \   00000080   0x6001             STR      R1,[R0, #+0]
    460          
    461            return HAL_OK;
   \   00000082   0x2000             MOVS     R0,#+0
   \                     ??HAL_DMA_Start_IT_0: (+1)
   \   00000084   0xBC30             POP      {R4,R5}
   \   00000086   0x4770             BX       LR               ;; return
    462          } 
    463          
    464          /**
    465            * @brief  Aborts the DMA Transfer.
    466            * @param  hdma  : pointer to a DMA_HandleTypeDef structure that contains
    467            *                 the configuration information for the specified DMA Stream.
    468            *                   
    469            * @note  After disabling a DMA Stream, a check for wait until the DMA Stream is 
    470            *        effectively disabled is added. If a Stream is disabled 
    471            *        while a data transfer is ongoing, the current data will be transferred
    472            *        and the Stream will be effectively disabled only after the transfer of
    473            *        this single data is finished.  
    474            * @retval HAL status
    475            */

   \                                 In section .text, align 2, keep-with-next
    476          HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
    477          {
   \                     HAL_DMA_Abort: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
    478            uint32_t tickstart = 0;
    479          
    480            /* Disable the stream */
    481            __HAL_DMA_DISABLE(hdma);
   \   00000004   0xF240 0x36E9      MOVW     R6,#+1001
   \   00000008   0x6820             LDR      R0,[R4, #+0]
   \   0000000A   0x6801             LDR      R1,[R0, #+0]
   \   0000000C   0x0849             LSRS     R1,R1,#+1
   \   0000000E   0x0049             LSLS     R1,R1,#+1
   \   00000010   0x6001             STR      R1,[R0, #+0]
    482          
    483            /* Get tick */
    484            tickstart = HAL_GetTick();
   \   00000012   0x.... 0x....      BL       HAL_GetTick
   \   00000016   0x4605             MOV      R5,R0
    485          
    486            /* Check if the DMA Stream is effectively disabled */
    487            while((hdma->Instance->CR & DMA_SxCR_EN) != 0)
   \                     ??HAL_DMA_Abort_0: (+1)
   \   00000018   0x6820             LDR      R0,[R4, #+0]
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0x07C0             LSLS     R0,R0,#+31
   \   0000001E   0xD510             BPL.N    ??HAL_DMA_Abort_1
    488            {
    489              /* Check for the Timeout */
    490              if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
   \   00000020   0x.... 0x....      BL       HAL_GetTick
   \   00000024   0x1B40             SUBS     R0,R0,R5
   \   00000026   0x42B0             CMP      R0,R6
   \   00000028   0xD3F6             BCC.N    ??HAL_DMA_Abort_0
    491              {
    492                /* Update error code */
    493                hdma->ErrorCode |= HAL_DMA_ERROR_TIMEOUT;
   \   0000002A   0xF104 0x0034      ADD      R0,R4,#+52
   \   0000002E   0x6981             LDR      R1,[R0, #+24]
   \   00000030   0xF041 0x0120      ORR      R1,R1,#0x20
   \   00000034   0x6181             STR      R1,[R0, #+24]
    494                
    495                /* Process Unlocked */
    496                __HAL_UNLOCK(hdma);
   \   00000036   0x2100             MOVS     R1,#+0
   \   00000038   0x7001             STRB     R1,[R0, #+0]
    497                
    498                /* Change the DMA state */
    499                hdma->State = HAL_DMA_STATE_TIMEOUT;
   \   0000003A   0x2103             MOVS     R1,#+3
   \   0000003C   0x7041             STRB     R1,[R0, #+1]
    500                
    501                return HAL_TIMEOUT;
   \   0000003E   0x2003             MOVS     R0,#+3
   \   00000040   0xBD70             POP      {R4-R6,PC}
    502              }
    503            }
    504            /* Process Unlocked */
    505            __HAL_UNLOCK(hdma);
   \                     ??HAL_DMA_Abort_1: (+1)
   \   00000042   0xF104 0x0034      ADD      R0,R4,#+52
   \   00000046   0x2100             MOVS     R1,#+0
   \   00000048   0x7001             STRB     R1,[R0, #+0]
    506          
    507            /* Change the DMA state*/
    508            hdma->State = HAL_DMA_STATE_READY;
   \   0000004A   0x2101             MOVS     R1,#+1
   \   0000004C   0x7041             STRB     R1,[R0, #+1]
    509          
    510            return HAL_OK;
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0xBD70             POP      {R4-R6,PC}       ;; return
    511          }
    512          
    513          /**
    514            * @brief  Polling for transfer complete.
    515            * @param  hdma:          pointer to a DMA_HandleTypeDef structure that contains
    516            *                        the configuration information for the specified DMA Stream.
    517            * @param  CompleteLevel: Specifies the DMA level complete.  
    518            * @param  Timeout:       Timeout duration.
    519            * @retval HAL status
    520            */

   \                                 In section .text, align 4, keep-with-next
    521          HAL_StatusTypeDef HAL_DMA_PollForTransfer(DMA_HandleTypeDef *hdma, uint32_t CompleteLevel, uint32_t Timeout)
    522          {
   \                     HAL_DMA_PollForTransfer: (+1)
   \   00000000   0xE92D 0x4FF7      PUSH     {R0-R2,R4-R11,LR}
   \   00000004   0x4604             MOV      R4,R0
    523            uint32_t temp, tmp, tmp1, tmp2;
    524            uint32_t tickstart = 0; 
    525          
    526            /* Get the level transfer complete flag */
    527            if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
   \   00000006   0x2900             CMP      R1,#+0
   \   00000008   0xF8DF 0x99E8      LDR.W    R9,??HAL_DMA_PollForTransfer_0  ;; 0x40026010
   \   0000000C   0x6820             LDR      R0,[R4, #+0]
   \   0000000E   0xD138             BNE.N    ??HAL_DMA_PollForTransfer_1
    528            {
    529              /* Transfer Complete flag */
    530              temp = __HAL_DMA_GET_TC_FLAG_INDEX(hdma);
   \   00000010   0x4548             CMP      R0,R9
   \   00000012   0xBF1C             ITT      NE 
   \   00000014   0xF8DF 0x19E0      LDRNE.W  R1,??HAL_DMA_PollForTransfer_0+0x4  ;; 0x40026410
   \   00000018   0x4288             CMPNE    R0,R1
   \   0000001A   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_2
   \   0000001C   0xF8DF 0x19DC      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x8  ;; 0x40026070
   \   00000020   0x4288             CMP      R0,R1
   \   00000022   0xBF1C             ITT      NE 
   \   00000024   0xF8DF 0x19D8      LDRNE.W  R1,??HAL_DMA_PollForTransfer_0+0xC  ;; 0x40026470
   \   00000028   0x4288             CMPNE    R0,R1
   \   0000002A   0xD101             BNE.N    ??HAL_DMA_PollForTransfer_3
   \                     ??HAL_DMA_PollForTransfer_2: (+1)
   \   0000002C   0x2620             MOVS     R6,#+32
   \   0000002E   0xE060             B.N      ??HAL_DMA_PollForTransfer_4
   \                     ??HAL_DMA_PollForTransfer_3: (+1)
   \   00000030   0xF8DF 0x19D0      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x10  ;; 0x40026028
   \   00000034   0x4288             CMP      R0,R1
   \   00000036   0xBF1C             ITT      NE 
   \   00000038   0xF8DF 0x19CC      LDRNE.W  R1,??HAL_DMA_PollForTransfer_0+0x14  ;; 0x40026428
   \   0000003C   0x4288             CMPNE    R0,R1
   \   0000003E   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_5
   \   00000040   0xF8DF 0x19C8      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x18  ;; 0x40026088
   \   00000044   0x4288             CMP      R0,R1
   \   00000046   0xBF1C             ITT      NE 
   \   00000048   0xF8DF 0x19C4      LDRNE.W  R1,??HAL_DMA_PollForTransfer_0+0x1C  ;; 0x40026488
   \   0000004C   0x4288             CMPNE    R0,R1
   \   0000004E   0xD102             BNE.N    ??HAL_DMA_PollForTransfer_6
   \                     ??HAL_DMA_PollForTransfer_5: (+1)
   \   00000050   0xF44F 0x6600      MOV      R6,#+2048
   \   00000054   0xE04D             B.N      ??HAL_DMA_PollForTransfer_4
   \                     ??HAL_DMA_PollForTransfer_6: (+1)
   \   00000056   0xF8DF 0x19BC      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x20  ;; 0x40026040
   \   0000005A   0x4288             CMP      R0,R1
   \   0000005C   0xBF1C             ITT      NE 
   \   0000005E   0xF8DF 0x19B8      LDRNE.W  R1,??HAL_DMA_PollForTransfer_0+0x24  ;; 0x40026440
   \   00000062   0x4288             CMPNE    R0,R1
   \   00000064   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_7
   \   00000066   0xF8DF 0x19B4      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x28  ;; 0x400260a0
   \   0000006A   0x4288             CMP      R0,R1
   \   0000006C   0xBF1C             ITT      NE 
   \   0000006E   0xF8DF 0x19B0      LDRNE.W  R1,??HAL_DMA_PollForTransfer_0+0x2C  ;; 0x400264a0
   \   00000072   0x4288             CMPNE    R0,R1
   \   00000074   0xD102             BNE.N    ??HAL_DMA_PollForTransfer_8
   \                     ??HAL_DMA_PollForTransfer_7: (+1)
   \   00000076   0xF44F 0x1600      MOV      R6,#+2097152
   \   0000007A   0xE03A             B.N      ??HAL_DMA_PollForTransfer_4
   \                     ??HAL_DMA_PollForTransfer_8: (+1)
   \   0000007C   0xF04F 0x6600      MOV      R6,#+134217728
   \   00000080   0xE037             B.N      ??HAL_DMA_PollForTransfer_4
    531            }
    532            else
    533            {
    534              /* Half Transfer Complete flag */
    535              temp = __HAL_DMA_GET_HT_FLAG_INDEX(hdma);
   \                     ??HAL_DMA_PollForTransfer_1: (+1)
   \   00000082   0x4548             CMP      R0,R9
   \   00000084   0xBF1C             ITT      NE 
   \   00000086   0xF8DF 0x1970      LDRNE.W  R1,??HAL_DMA_PollForTransfer_0+0x4  ;; 0x40026410
   \   0000008A   0x4288             CMPNE    R0,R1
   \   0000008C   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_9
   \   0000008E   0xF8DF 0x196C      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x8  ;; 0x40026070
   \   00000092   0x4288             CMP      R0,R1
   \   00000094   0xBF1C             ITT      NE 
   \   00000096   0xF8DF 0x1968      LDRNE.W  R1,??HAL_DMA_PollForTransfer_0+0xC  ;; 0x40026470
   \   0000009A   0x4288             CMPNE    R0,R1
   \   0000009C   0xD101             BNE.N    ??HAL_DMA_PollForTransfer_10
   \                     ??HAL_DMA_PollForTransfer_9: (+1)
   \   0000009E   0x2610             MOVS     R6,#+16
   \   000000A0   0xE027             B.N      ??HAL_DMA_PollForTransfer_4
   \                     ??HAL_DMA_PollForTransfer_10: (+1)
   \   000000A2   0xF8DF 0x1960      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x10  ;; 0x40026028
   \   000000A6   0x4288             CMP      R0,R1
   \   000000A8   0xBF1C             ITT      NE 
   \   000000AA   0xF8DF 0x195C      LDRNE.W  R1,??HAL_DMA_PollForTransfer_0+0x14  ;; 0x40026428
   \   000000AE   0x4288             CMPNE    R0,R1
   \   000000B0   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_11
   \   000000B2   0xF8DF 0x1958      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x18  ;; 0x40026088
   \   000000B6   0x4288             CMP      R0,R1
   \   000000B8   0xBF1C             ITT      NE 
   \   000000BA   0xF8DF 0x1954      LDRNE.W  R1,??HAL_DMA_PollForTransfer_0+0x1C  ;; 0x40026488
   \   000000BE   0x4288             CMPNE    R0,R1
   \   000000C0   0xD102             BNE.N    ??HAL_DMA_PollForTransfer_12
   \                     ??HAL_DMA_PollForTransfer_11: (+1)
   \   000000C2   0xF44F 0x6680      MOV      R6,#+1024
   \   000000C6   0xE014             B.N      ??HAL_DMA_PollForTransfer_4
   \                     ??HAL_DMA_PollForTransfer_12: (+1)
   \   000000C8   0xF8DF 0x1948      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x20  ;; 0x40026040
   \   000000CC   0x4288             CMP      R0,R1
   \   000000CE   0xBF1C             ITT      NE 
   \   000000D0   0xF8DF 0x1944      LDRNE.W  R1,??HAL_DMA_PollForTransfer_0+0x24  ;; 0x40026440
   \   000000D4   0x4288             CMPNE    R0,R1
   \   000000D6   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_13
   \   000000D8   0xF8DF 0x1940      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x28  ;; 0x400260a0
   \   000000DC   0x4288             CMP      R0,R1
   \   000000DE   0xBF1C             ITT      NE 
   \   000000E0   0xF8DF 0x193C      LDRNE.W  R1,??HAL_DMA_PollForTransfer_0+0x2C  ;; 0x400264a0
   \   000000E4   0x4288             CMPNE    R0,R1
   \   000000E6   0xD102             BNE.N    ??HAL_DMA_PollForTransfer_14
   \                     ??HAL_DMA_PollForTransfer_13: (+1)
   \   000000E8   0xF44F 0x1680      MOV      R6,#+1048576
   \   000000EC   0xE001             B.N      ??HAL_DMA_PollForTransfer_4
   \                     ??HAL_DMA_PollForTransfer_14: (+1)
   \   000000EE   0xF04F 0x6680      MOV      R6,#+67108864
    536            }
    537          
    538            /* Get tick */
    539            tickstart = HAL_GetTick();
   \                     ??HAL_DMA_PollForTransfer_4: (+1)
   \   000000F2   0x.... 0x....      BL       HAL_GetTick
   \   000000F6   0x9000             STR      R0,[SP, #+0]
   \   000000F8   0xF8DF 0xA928      LDR.W    R10,??HAL_DMA_PollForTransfer_0+0x30  ;; 0x800004
   \   000000FC   0xF8DF 0x8928      LDR.W    R8,??HAL_DMA_PollForTransfer_0+0x34  ;; 0x800001
   \   00000100   0xF8DF 0x5928      LDR.W    R5,??HAL_DMA_PollForTransfer_0+0x38  ;; 0x40026000
   \   00000104   0xF8DF 0x7928      LDR.W    R7,??HAL_DMA_PollForTransfer_0+0x3C  ;; 0x40026400
   \   00000108   0xF8DF 0xB928      LDR.W    R11,??HAL_DMA_PollForTransfer_0+0x40  ;; 0x40026459
    540          
    541            while(__HAL_DMA_GET_FLAG(hdma, temp) == RESET)
   \                     ??HAL_DMA_PollForTransfer_15: (+1)
   \   0000010C   0x6821             LDR      R1,[R4, #+0]
   \   0000010E   0x4608             MOV      R0,R1
   \   00000110   0x4558             CMP      R0,R11
   \   00000112   0xBF28             IT       CS 
   \   00000114   0x687A             LDRCS    R2,[R7, #+4]
   \   00000116   0xD20B             BCS.N    ??HAL_DMA_PollForTransfer_16
   \   00000118   0xF8DF 0x291C      LDR.W    R2,??HAL_DMA_PollForTransfer_0+0x44  ;; 0x400260b9
   \   0000011C   0x4290             CMP      R0,R2
   \   0000011E   0xBF28             IT       CS 
   \   00000120   0x683A             LDRCS    R2,[R7, #+0]
   \   00000122   0xD205             BCS.N    ??HAL_DMA_PollForTransfer_16
   \   00000124   0xF8DF 0x2914      LDR.W    R2,??HAL_DMA_PollForTransfer_0+0x48  ;; 0x40026059
   \   00000128   0x4290             CMP      R0,R2
   \   0000012A   0xBF2C             ITE      CS 
   \   0000012C   0x686A             LDRCS    R2,[R5, #+4]
   \   0000012E   0x682A             LDRCC    R2,[R5, #+0]
   \                     ??HAL_DMA_PollForTransfer_16: (+1)
   \   00000130   0x4032             ANDS     R2,R6,R2
   \   00000132   0xF040 0x822A      BNE.W    ??HAL_DMA_PollForTransfer_17
    542            {
    543              tmp  = __HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_TE_FLAG_INDEX(hdma));
   \   00000136   0x4558             CMP      R0,R11
   \   00000138   0xD32F             BCC.N    ??HAL_DMA_PollForTransfer_18
   \   0000013A   0xF8DF 0x28C4      LDR.W    R2,??HAL_DMA_PollForTransfer_0+0xC  ;; 0x40026470
   \   0000013E   0x6879             LDR      R1,[R7, #+4]
   \   00000140   0x4290             CMP      R0,R2
   \   00000142   0xD107             BNE.N    ??HAL_DMA_PollForTransfer_19
   \   00000144   0x687A             LDR      R2,[R7, #+4]
   \   00000146   0xF001 0x0108      AND      R1,R1,#0x8
   \   0000014A   0x687B             LDR      R3,[R7, #+4]
   \   0000014C   0x46D4             MOV      R12,R10
   \   0000014E   0xEA08 0x0202      AND      R2,R8,R2
   \   00000152   0xE0B7             B.N      ??HAL_DMA_PollForTransfer_20
   \                     ??HAL_DMA_PollForTransfer_19: (+1)
   \   00000154   0xF8DF 0x28B8      LDR.W    R2,??HAL_DMA_PollForTransfer_0+0x1C  ;; 0x40026488
   \   00000158   0x4290             CMP      R0,R2
   \   0000015A   0xD108             BNE.N    ??HAL_DMA_PollForTransfer_21
   \   0000015C   0x687A             LDR      R2,[R7, #+4]
   \   0000015E   0xF401 0x7100      AND      R1,R1,#0x200
   \   00000162   0x687B             LDR      R3,[R7, #+4]
   \   00000164   0xF44F 0x7C80      MOV      R12,#+256
   \   00000168   0xF002 0x0240      AND      R2,R2,#0x40
   \   0000016C   0xE0AA             B.N      ??HAL_DMA_PollForTransfer_20
   \                     ??HAL_DMA_PollForTransfer_21: (+1)
   \   0000016E   0xF8DF 0x28B0      LDR.W    R2,??HAL_DMA_PollForTransfer_0+0x2C  ;; 0x400264a0
   \   00000172   0x4290             CMP      R0,R2
   \   00000174   0xD108             BNE.N    ??HAL_DMA_PollForTransfer_22
   \   00000176   0x687A             LDR      R2,[R7, #+4]
   \   00000178   0xF401 0x2100      AND      R1,R1,#0x80000
   \   0000017C   0x687B             LDR      R3,[R7, #+4]
   \   0000017E   0xF44F 0x2C80      MOV      R12,#+262144
   \   00000182   0xF402 0x3280      AND      R2,R2,#0x10000
   \   00000186   0xE09D             B.N      ??HAL_DMA_PollForTransfer_20
   \                     ??HAL_DMA_PollForTransfer_22: (+1)
   \   00000188   0x687A             LDR      R2,[R7, #+4]
   \   0000018A   0xF001 0x7100      AND      R1,R1,#0x2000000
   \   0000018E   0x687B             LDR      R3,[R7, #+4]
   \   00000190   0xF04F 0x7C80      MOV      R12,#+16777216
   \   00000194   0xF402 0x0280      AND      R2,R2,#0x400000
   \   00000198   0xE094             B.N      ??HAL_DMA_PollForTransfer_20
   \                     ??HAL_DMA_PollForTransfer_18: (+1)
   \   0000019A   0xF8DF 0x189C      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x44  ;; 0x400260b9
   \   0000019E   0x4288             CMP      R0,R1
   \   000001A0   0xD32F             BCC.N    ??HAL_DMA_PollForTransfer_23
   \   000001A2   0xF8DF 0x2854      LDR.W    R2,??HAL_DMA_PollForTransfer_0+0x4  ;; 0x40026410
   \   000001A6   0x6839             LDR      R1,[R7, #+0]
   \   000001A8   0x4290             CMP      R0,R2
   \   000001AA   0xD107             BNE.N    ??HAL_DMA_PollForTransfer_24
   \   000001AC   0x683A             LDR      R2,[R7, #+0]
   \   000001AE   0xF001 0x0108      AND      R1,R1,#0x8
   \   000001B2   0x683B             LDR      R3,[R7, #+0]
   \   000001B4   0x46D4             MOV      R12,R10
   \   000001B6   0xEA08 0x0202      AND      R2,R8,R2
   \   000001BA   0xE083             B.N      ??HAL_DMA_PollForTransfer_20
   \                     ??HAL_DMA_PollForTransfer_24: (+1)
   \   000001BC   0xF8DF 0x2848      LDR.W    R2,??HAL_DMA_PollForTransfer_0+0x14  ;; 0x40026428
   \   000001C0   0x4290             CMP      R0,R2
   \   000001C2   0xD108             BNE.N    ??HAL_DMA_PollForTransfer_25
   \   000001C4   0x683A             LDR      R2,[R7, #+0]
   \   000001C6   0xF401 0x7100      AND      R1,R1,#0x200
   \   000001CA   0x683B             LDR      R3,[R7, #+0]
   \   000001CC   0xF44F 0x7C80      MOV      R12,#+256
   \   000001D0   0xF002 0x0240      AND      R2,R2,#0x40
   \   000001D4   0xE076             B.N      ??HAL_DMA_PollForTransfer_20
   \                     ??HAL_DMA_PollForTransfer_25: (+1)
   \   000001D6   0xF8DF 0x2840      LDR.W    R2,??HAL_DMA_PollForTransfer_0+0x24  ;; 0x40026440
   \   000001DA   0x4290             CMP      R0,R2
   \   000001DC   0xD008             BEQ.N    ??HAL_DMA_PollForTransfer_26
   \   000001DE   0x683A             LDR      R2,[R7, #+0]
   \   000001E0   0xF001 0x7100      AND      R1,R1,#0x2000000
   \   000001E4   0x683B             LDR      R3,[R7, #+0]
   \   000001E6   0xF04F 0x7C80      MOV      R12,#+16777216
   \   000001EA   0xF402 0x0280      AND      R2,R2,#0x400000
   \   000001EE   0xE069             B.N      ??HAL_DMA_PollForTransfer_20
   \                     ??HAL_DMA_PollForTransfer_26: (+1)
   \   000001F0   0x683A             LDR      R2,[R7, #+0]
   \   000001F2   0xF401 0x2100      AND      R1,R1,#0x80000
   \   000001F6   0x683B             LDR      R3,[R7, #+0]
   \   000001F8   0xF44F 0x2C80      MOV      R12,#+262144
   \   000001FC   0xF402 0x3280      AND      R2,R2,#0x10000
   \   00000200   0xE060             B.N      ??HAL_DMA_PollForTransfer_20
   \                     ??HAL_DMA_PollForTransfer_23: (+1)
   \   00000202   0xF8DF 0x1838      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x48  ;; 0x40026059
   \   00000206   0x4288             CMP      R0,R1
   \   00000208   0xD32F             BCC.N    ??HAL_DMA_PollForTransfer_27
   \   0000020A   0xF8DF 0x27F0      LDR.W    R2,??HAL_DMA_PollForTransfer_0+0x8  ;; 0x40026070
   \   0000020E   0x6869             LDR      R1,[R5, #+4]
   \   00000210   0x4290             CMP      R0,R2
   \   00000212   0xD107             BNE.N    ??HAL_DMA_PollForTransfer_28
   \   00000214   0x686A             LDR      R2,[R5, #+4]
   \   00000216   0xF001 0x0108      AND      R1,R1,#0x8
   \   0000021A   0x686B             LDR      R3,[R5, #+4]
   \   0000021C   0x46D4             MOV      R12,R10
   \   0000021E   0xEA08 0x0202      AND      R2,R8,R2
   \   00000222   0xE04F             B.N      ??HAL_DMA_PollForTransfer_20
   \                     ??HAL_DMA_PollForTransfer_28: (+1)
   \   00000224   0xF8DF 0x27E4      LDR.W    R2,??HAL_DMA_PollForTransfer_0+0x18  ;; 0x40026088
   \   00000228   0x4290             CMP      R0,R2
   \   0000022A   0xD108             BNE.N    ??HAL_DMA_PollForTransfer_29
   \   0000022C   0x686A             LDR      R2,[R5, #+4]
   \   0000022E   0xF401 0x7100      AND      R1,R1,#0x200
   \   00000232   0x686B             LDR      R3,[R5, #+4]
   \   00000234   0xF44F 0x7C80      MOV      R12,#+256
   \   00000238   0xF002 0x0240      AND      R2,R2,#0x40
   \   0000023C   0xE042             B.N      ??HAL_DMA_PollForTransfer_20
   \                     ??HAL_DMA_PollForTransfer_29: (+1)
   \   0000023E   0xF8DF 0x27DC      LDR.W    R2,??HAL_DMA_PollForTransfer_0+0x28  ;; 0x400260a0
   \   00000242   0x4290             CMP      R0,R2
   \   00000244   0xD008             BEQ.N    ??HAL_DMA_PollForTransfer_30
   \   00000246   0x686A             LDR      R2,[R5, #+4]
   \   00000248   0xF001 0x7100      AND      R1,R1,#0x2000000
   \   0000024C   0x686B             LDR      R3,[R5, #+4]
   \   0000024E   0xF04F 0x7C80      MOV      R12,#+16777216
   \   00000252   0xF402 0x0280      AND      R2,R2,#0x400000
   \   00000256   0xE035             B.N      ??HAL_DMA_PollForTransfer_20
   \                     ??HAL_DMA_PollForTransfer_30: (+1)
   \   00000258   0x686A             LDR      R2,[R5, #+4]
   \   0000025A   0xF401 0x2100      AND      R1,R1,#0x80000
   \   0000025E   0x686B             LDR      R3,[R5, #+4]
   \   00000260   0xF44F 0x2C80      MOV      R12,#+262144
   \   00000264   0xF402 0x3280      AND      R2,R2,#0x10000
   \   00000268   0xE02C             B.N      ??HAL_DMA_PollForTransfer_20
   \                     ??HAL_DMA_PollForTransfer_27: (+1)
   \   0000026A   0x4548             CMP      R0,R9
   \   0000026C   0x6829             LDR      R1,[R5, #+0]
   \   0000026E   0xD107             BNE.N    ??HAL_DMA_PollForTransfer_31
   \   00000270   0x682A             LDR      R2,[R5, #+0]
   \   00000272   0xF001 0x0108      AND      R1,R1,#0x8
   \   00000276   0x682B             LDR      R3,[R5, #+0]
   \   00000278   0x46D4             MOV      R12,R10
   \   0000027A   0xEA08 0x0202      AND      R2,R8,R2
   \   0000027E   0xE021             B.N      ??HAL_DMA_PollForTransfer_20
   \                     ??HAL_DMA_PollForTransfer_31: (+1)
   \   00000280   0xF8DF 0x2780      LDR.W    R2,??HAL_DMA_PollForTransfer_0+0x10  ;; 0x40026028
   \   00000284   0x4290             CMP      R0,R2
   \   00000286   0xD108             BNE.N    ??HAL_DMA_PollForTransfer_32
   \   00000288   0x682A             LDR      R2,[R5, #+0]
   \   0000028A   0xF401 0x7100      AND      R1,R1,#0x200
   \   0000028E   0x682B             LDR      R3,[R5, #+0]
   \   00000290   0xF44F 0x7C80      MOV      R12,#+256
   \   00000294   0xF002 0x0240      AND      R2,R2,#0x40
   \   00000298   0xE014             B.N      ??HAL_DMA_PollForTransfer_20
   \                     ??HAL_DMA_PollForTransfer_32: (+1)
   \   0000029A   0xF8DF 0x2778      LDR.W    R2,??HAL_DMA_PollForTransfer_0+0x20  ;; 0x40026040
   \   0000029E   0x4290             CMP      R0,R2
   \   000002A0   0xD008             BEQ.N    ??HAL_DMA_PollForTransfer_33
   \   000002A2   0x682A             LDR      R2,[R5, #+0]
   \   000002A4   0xF001 0x7100      AND      R1,R1,#0x2000000
   \   000002A8   0x682B             LDR      R3,[R5, #+0]
   \   000002AA   0xF04F 0x7C80      MOV      R12,#+16777216
   \   000002AE   0xF402 0x0280      AND      R2,R2,#0x400000
   \   000002B2   0xE007             B.N      ??HAL_DMA_PollForTransfer_20
   \                     ??HAL_DMA_PollForTransfer_33: (+1)
   \   000002B4   0x682A             LDR      R2,[R5, #+0]
   \   000002B6   0xF401 0x2100      AND      R1,R1,#0x80000
   \   000002BA   0x682B             LDR      R3,[R5, #+0]
   \   000002BC   0xF44F 0x2C80      MOV      R12,#+262144
   \   000002C0   0xF402 0x3280      AND      R2,R2,#0x10000
   \                     ??HAL_DMA_PollForTransfer_20: (+1)
   \   000002C4   0xEA0C 0x0303      AND      R3,R12,R3
    544              tmp1 = __HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_FE_FLAG_INDEX(hdma));
    545              tmp2 = __HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_DME_FLAG_INDEX(hdma));
    546              if((tmp != RESET) || (tmp1 != RESET) || (tmp2 != RESET))
   \   000002C8   0xEA42 0x0C01      ORR      R12,R2,R1
   \   000002CC   0xEA53 0x0C0C      ORRS     R12,R3,R12
   \   000002D0   0xF000 0x8141      BEQ.W    ??HAL_DMA_PollForTransfer_34
    547              {
    548                if(tmp != RESET)
   \   000002D4   0x2900             CMP      R1,#+0
   \   000002D6   0xF104 0x0634      ADD      R6,R4,#+52
   \   000002DA   0xD066             BEQ.N    ??HAL_DMA_PollForTransfer_35
    549                {
    550                  /* Update error code */
    551                  hdma->ErrorCode |= HAL_DMA_ERROR_TE;
   \   000002DC   0x69B1             LDR      R1,[R6, #+24]
    552          
    553                  /* Clear the transfer error flag */
    554                  __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TE_FLAG_INDEX(hdma));
   \   000002DE   0x4558             CMP      R0,R11
   \   000002E0   0xF041 0x0101      ORR      R1,R1,#0x1
   \   000002E4   0x61B1             STR      R1,[R6, #+24]
   \   000002E6   0xD316             BCC.N    ??HAL_DMA_PollForTransfer_36
   \   000002E8   0xF8DF 0x1714      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0xC  ;; 0x40026470
   \   000002EC   0x4288             CMP      R0,R1
   \   000002EE   0xBF08             IT       EQ 
   \   000002F0   0x2008             MOVEQ    R0,#+8
   \   000002F2   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_37
   \   000002F4   0xF8DF 0x1718      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x1C  ;; 0x40026488
   \   000002F8   0x4288             CMP      R0,R1
   \   000002FA   0xBF08             IT       EQ 
   \   000002FC   0xF44F 0x7000      MOVEQ    R0,#+512
   \   00000300   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_37
   \   00000302   0xF8DF 0x171C      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x2C  ;; 0x400264a0
   \   00000306   0x4288             CMP      R0,R1
   \   00000308   0xBF0C             ITE      EQ 
   \   0000030A   0xF44F 0x2000      MOVEQ    R0,#+524288
   \   0000030E   0xF04F 0x7000      MOVNE    R0,#+33554432
   \                     ??HAL_DMA_PollForTransfer_37: (+1)
   \   00000312   0x60F8             STR      R0,[R7, #+12]
   \   00000314   0xE049             B.N      ??HAL_DMA_PollForTransfer_35
   \                     ??HAL_DMA_PollForTransfer_36: (+1)
   \   00000316   0xF8DF 0x1720      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x44  ;; 0x400260b9
   \   0000031A   0x4288             CMP      R0,R1
   \   0000031C   0xD316             BCC.N    ??HAL_DMA_PollForTransfer_38
   \   0000031E   0xF8DF 0x16D8      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x4  ;; 0x40026410
   \   00000322   0x4288             CMP      R0,R1
   \   00000324   0xBF08             IT       EQ 
   \   00000326   0x2008             MOVEQ    R0,#+8
   \   00000328   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_39
   \   0000032A   0xF8DF 0x16DC      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x14  ;; 0x40026428
   \   0000032E   0x4288             CMP      R0,R1
   \   00000330   0xBF08             IT       EQ 
   \   00000332   0xF44F 0x7000      MOVEQ    R0,#+512
   \   00000336   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_39
   \   00000338   0xF8DF 0x16DC      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x24  ;; 0x40026440
   \   0000033C   0x4288             CMP      R0,R1
   \   0000033E   0xBF0C             ITE      EQ 
   \   00000340   0xF44F 0x2000      MOVEQ    R0,#+524288
   \   00000344   0xF04F 0x7000      MOVNE    R0,#+33554432
   \                     ??HAL_DMA_PollForTransfer_39: (+1)
   \   00000348   0x60B8             STR      R0,[R7, #+8]
   \   0000034A   0xE02E             B.N      ??HAL_DMA_PollForTransfer_35
   \                     ??HAL_DMA_PollForTransfer_38: (+1)
   \   0000034C   0xF8DF 0x16EC      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x48  ;; 0x40026059
   \   00000350   0x4288             CMP      R0,R1
   \   00000352   0xD316             BCC.N    ??HAL_DMA_PollForTransfer_40
   \   00000354   0xF8DF 0x16A4      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x8  ;; 0x40026070
   \   00000358   0x4288             CMP      R0,R1
   \   0000035A   0xBF08             IT       EQ 
   \   0000035C   0x2008             MOVEQ    R0,#+8
   \   0000035E   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_41
   \   00000360   0xF8DF 0x16A8      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x18  ;; 0x40026088
   \   00000364   0x4288             CMP      R0,R1
   \   00000366   0xBF08             IT       EQ 
   \   00000368   0xF44F 0x7000      MOVEQ    R0,#+512
   \   0000036C   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_41
   \   0000036E   0xF8DF 0x16AC      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x28  ;; 0x400260a0
   \   00000372   0x4288             CMP      R0,R1
   \   00000374   0xBF0C             ITE      EQ 
   \   00000376   0xF44F 0x2000      MOVEQ    R0,#+524288
   \   0000037A   0xF04F 0x7000      MOVNE    R0,#+33554432
   \                     ??HAL_DMA_PollForTransfer_41: (+1)
   \   0000037E   0x60E8             STR      R0,[R5, #+12]
   \   00000380   0xE013             B.N      ??HAL_DMA_PollForTransfer_35
   \                     ??HAL_DMA_PollForTransfer_40: (+1)
   \   00000382   0x4548             CMP      R0,R9
   \   00000384   0xBF08             IT       EQ 
   \   00000386   0x2008             MOVEQ    R0,#+8
   \   00000388   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_42
   \   0000038A   0xF8DF 0x16D0      LDR.W    R1,??HAL_DMA_PollForTransfer_43  ;; 0x40026028
   \   0000038E   0x4288             CMP      R0,R1
   \   00000390   0xBF08             IT       EQ 
   \   00000392   0xF44F 0x7000      MOVEQ    R0,#+512
   \   00000396   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_42
   \   00000398   0xF8DF 0x1678      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x20  ;; 0x40026040
   \   0000039C   0x4288             CMP      R0,R1
   \   0000039E   0xBF0C             ITE      EQ 
   \   000003A0   0xF44F 0x2000      MOVEQ    R0,#+524288
   \   000003A4   0xF04F 0x7000      MOVNE    R0,#+33554432
   \                     ??HAL_DMA_PollForTransfer_42: (+1)
   \   000003A8   0x60A8             STR      R0,[R5, #+8]
    555                }
    556                if(tmp1 != RESET)
   \                     ??HAL_DMA_PollForTransfer_35: (+1)
   \   000003AA   0x2A00             CMP      R2,#+0
   \   000003AC   0xD063             BEQ.N    ??HAL_DMA_PollForTransfer_44
    557                {
    558                  /* Update error code */
    559                  hdma->ErrorCode |= HAL_DMA_ERROR_FE;
   \   000003AE   0x69B0             LDR      R0,[R6, #+24]
   \   000003B0   0xF040 0x0002      ORR      R0,R0,#0x2
   \   000003B4   0x61B0             STR      R0,[R6, #+24]
    560           
    561                  /* Clear the FIFO error flag */
    562                  __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_FE_FLAG_INDEX(hdma));
   \   000003B6   0x6820             LDR      R0,[R4, #+0]
   \   000003B8   0x4558             CMP      R0,R11
   \   000003BA   0xD315             BCC.N    ??HAL_DMA_PollForTransfer_45
   \   000003BC   0xF8DF 0x1640      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0xC  ;; 0x40026470
   \   000003C0   0x4288             CMP      R0,R1
   \   000003C2   0xBF08             IT       EQ 
   \   000003C4   0x4640             MOVEQ    R0,R8
   \   000003C6   0xD00D             BEQ.N    ??HAL_DMA_PollForTransfer_46
   \   000003C8   0xF8DF 0x1644      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x1C  ;; 0x40026488
   \   000003CC   0x4288             CMP      R0,R1
   \   000003CE   0xBF08             IT       EQ 
   \   000003D0   0x2040             MOVEQ    R0,#+64
   \   000003D2   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_46
   \   000003D4   0xF8DF 0x1648      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x2C  ;; 0x400264a0
   \   000003D8   0x4288             CMP      R0,R1
   \   000003DA   0xBF0C             ITE      EQ 
   \   000003DC   0xF44F 0x3080      MOVEQ    R0,#+65536
   \   000003E0   0xF44F 0x0080      MOVNE    R0,#+4194304
   \                     ??HAL_DMA_PollForTransfer_46: (+1)
   \   000003E4   0x60F8             STR      R0,[R7, #+12]
   \   000003E6   0xE046             B.N      ??HAL_DMA_PollForTransfer_44
   \                     ??HAL_DMA_PollForTransfer_45: (+1)
   \   000003E8   0xF8DF 0x164C      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x44  ;; 0x400260b9
   \   000003EC   0x4288             CMP      R0,R1
   \   000003EE   0xD315             BCC.N    ??HAL_DMA_PollForTransfer_47
   \   000003F0   0xF8DF 0x1604      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x4  ;; 0x40026410
   \   000003F4   0x4288             CMP      R0,R1
   \   000003F6   0xBF08             IT       EQ 
   \   000003F8   0x4640             MOVEQ    R0,R8
   \   000003FA   0xD00D             BEQ.N    ??HAL_DMA_PollForTransfer_48
   \   000003FC   0xF8DF 0x1608      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x14  ;; 0x40026428
   \   00000400   0x4288             CMP      R0,R1
   \   00000402   0xBF08             IT       EQ 
   \   00000404   0x2040             MOVEQ    R0,#+64
   \   00000406   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_48
   \   00000408   0xF8DF 0x160C      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x24  ;; 0x40026440
   \   0000040C   0x4288             CMP      R0,R1
   \   0000040E   0xBF0C             ITE      EQ 
   \   00000410   0xF44F 0x3080      MOVEQ    R0,#+65536
   \   00000414   0xF44F 0x0080      MOVNE    R0,#+4194304
   \                     ??HAL_DMA_PollForTransfer_48: (+1)
   \   00000418   0x60B8             STR      R0,[R7, #+8]
   \   0000041A   0xE02C             B.N      ??HAL_DMA_PollForTransfer_44
   \                     ??HAL_DMA_PollForTransfer_47: (+1)
   \   0000041C   0xF8DF 0x161C      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x48  ;; 0x40026059
   \   00000420   0x4288             CMP      R0,R1
   \   00000422   0xD315             BCC.N    ??HAL_DMA_PollForTransfer_49
   \   00000424   0xF8DF 0x15D4      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x8  ;; 0x40026070
   \   00000428   0x4288             CMP      R0,R1
   \   0000042A   0xBF08             IT       EQ 
   \   0000042C   0x4640             MOVEQ    R0,R8
   \   0000042E   0xD00D             BEQ.N    ??HAL_DMA_PollForTransfer_50
   \   00000430   0xF8DF 0x15D8      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x18  ;; 0x40026088
   \   00000434   0x4288             CMP      R0,R1
   \   00000436   0xBF08             IT       EQ 
   \   00000438   0x2040             MOVEQ    R0,#+64
   \   0000043A   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_50
   \   0000043C   0xF8DF 0x15DC      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x28  ;; 0x400260a0
   \   00000440   0x4288             CMP      R0,R1
   \   00000442   0xBF0C             ITE      EQ 
   \   00000444   0xF44F 0x3080      MOVEQ    R0,#+65536
   \   00000448   0xF44F 0x0080      MOVNE    R0,#+4194304
   \                     ??HAL_DMA_PollForTransfer_50: (+1)
   \   0000044C   0x60E8             STR      R0,[R5, #+12]
   \   0000044E   0xE012             B.N      ??HAL_DMA_PollForTransfer_44
   \                     ??HAL_DMA_PollForTransfer_49: (+1)
   \   00000450   0x4548             CMP      R0,R9
   \   00000452   0xBF08             IT       EQ 
   \   00000454   0x4640             MOVEQ    R0,R8
   \   00000456   0xD00D             BEQ.N    ??HAL_DMA_PollForTransfer_51
   \   00000458   0xF8DF 0x1600      LDR.W    R1,??HAL_DMA_PollForTransfer_43  ;; 0x40026028
   \   0000045C   0x4288             CMP      R0,R1
   \   0000045E   0xBF08             IT       EQ 
   \   00000460   0x2040             MOVEQ    R0,#+64
   \   00000462   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_51
   \   00000464   0xF8DF 0x15AC      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x20  ;; 0x40026040
   \   00000468   0x4288             CMP      R0,R1
   \   0000046A   0xBF0C             ITE      EQ 
   \   0000046C   0xF44F 0x3080      MOVEQ    R0,#+65536
   \   00000470   0xF44F 0x0080      MOVNE    R0,#+4194304
   \                     ??HAL_DMA_PollForTransfer_51: (+1)
   \   00000474   0x60A8             STR      R0,[R5, #+8]
    563                }
    564                if(tmp2 != RESET)
   \                     ??HAL_DMA_PollForTransfer_44: (+1)
   \   00000476   0x2B00             CMP      R3,#+0
   \   00000478   0xD067             BEQ.N    ??HAL_DMA_PollForTransfer_52
    565                {
    566                  /* Update error code */
    567                  hdma->ErrorCode |= HAL_DMA_ERROR_DME;
   \   0000047A   0x69B0             LDR      R0,[R6, #+24]
   \   0000047C   0xF040 0x0004      ORR      R0,R0,#0x4
   \   00000480   0x61B0             STR      R0,[R6, #+24]
    568          
    569                  /* Clear the Direct Mode error flag */
    570                  __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_DME_FLAG_INDEX(hdma));
   \   00000482   0x6820             LDR      R0,[R4, #+0]
   \   00000484   0x4558             CMP      R0,R11
   \   00000486   0xD316             BCC.N    ??HAL_DMA_PollForTransfer_53
   \   00000488   0xF8DF 0x1574      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0xC  ;; 0x40026470
   \   0000048C   0x4288             CMP      R0,R1
   \   0000048E   0xBF08             IT       EQ 
   \   00000490   0x4650             MOVEQ    R0,R10
   \   00000492   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_54
   \   00000494   0xF8DF 0x1578      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x1C  ;; 0x40026488
   \   00000498   0x4288             CMP      R0,R1
   \   0000049A   0xBF08             IT       EQ 
   \   0000049C   0xF44F 0x7080      MOVEQ    R0,#+256
   \   000004A0   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_54
   \   000004A2   0xF8DF 0x157C      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x2C  ;; 0x400264a0
   \   000004A6   0x4288             CMP      R0,R1
   \   000004A8   0xBF0C             ITE      EQ 
   \   000004AA   0xF44F 0x2080      MOVEQ    R0,#+262144
   \   000004AE   0xF04F 0x7080      MOVNE    R0,#+16777216
   \                     ??HAL_DMA_PollForTransfer_54: (+1)
   \   000004B2   0x60F8             STR      R0,[R7, #+12]
   \   000004B4   0xE049             B.N      ??HAL_DMA_PollForTransfer_52
   \                     ??HAL_DMA_PollForTransfer_53: (+1)
   \   000004B6   0xF8DF 0x1580      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x44  ;; 0x400260b9
   \   000004BA   0x4288             CMP      R0,R1
   \   000004BC   0xD316             BCC.N    ??HAL_DMA_PollForTransfer_55
   \   000004BE   0xF8DF 0x1538      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x4  ;; 0x40026410
   \   000004C2   0x4288             CMP      R0,R1
   \   000004C4   0xBF08             IT       EQ 
   \   000004C6   0x4650             MOVEQ    R0,R10
   \   000004C8   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_56
   \   000004CA   0xF8DF 0x153C      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x14  ;; 0x40026428
   \   000004CE   0x4288             CMP      R0,R1
   \   000004D0   0xBF08             IT       EQ 
   \   000004D2   0xF44F 0x7080      MOVEQ    R0,#+256
   \   000004D6   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_56
   \   000004D8   0xF8DF 0x153C      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x24  ;; 0x40026440
   \   000004DC   0x4288             CMP      R0,R1
   \   000004DE   0xBF0C             ITE      EQ 
   \   000004E0   0xF44F 0x2080      MOVEQ    R0,#+262144
   \   000004E4   0xF04F 0x7080      MOVNE    R0,#+16777216
   \                     ??HAL_DMA_PollForTransfer_56: (+1)
   \   000004E8   0x60B8             STR      R0,[R7, #+8]
   \   000004EA   0xE02E             B.N      ??HAL_DMA_PollForTransfer_52
   \                     ??HAL_DMA_PollForTransfer_55: (+1)
   \   000004EC   0xF8DF 0x154C      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x48  ;; 0x40026059
   \   000004F0   0x4288             CMP      R0,R1
   \   000004F2   0xD316             BCC.N    ??HAL_DMA_PollForTransfer_57
   \   000004F4   0xF8DF 0x1504      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x8  ;; 0x40026070
   \   000004F8   0x4288             CMP      R0,R1
   \   000004FA   0xBF08             IT       EQ 
   \   000004FC   0x4650             MOVEQ    R0,R10
   \   000004FE   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_58
   \   00000500   0xF8DF 0x1508      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x18  ;; 0x40026088
   \   00000504   0x4288             CMP      R0,R1
   \   00000506   0xBF08             IT       EQ 
   \   00000508   0xF44F 0x7080      MOVEQ    R0,#+256
   \   0000050C   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_58
   \   0000050E   0xF8DF 0x150C      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x28  ;; 0x400260a0
   \   00000512   0x4288             CMP      R0,R1
   \   00000514   0xBF0C             ITE      EQ 
   \   00000516   0xF44F 0x2080      MOVEQ    R0,#+262144
   \   0000051A   0xF04F 0x7080      MOVNE    R0,#+16777216
   \                     ??HAL_DMA_PollForTransfer_58: (+1)
   \   0000051E   0x60E8             STR      R0,[R5, #+12]
   \   00000520   0xE013             B.N      ??HAL_DMA_PollForTransfer_52
   \                     ??HAL_DMA_PollForTransfer_57: (+1)
   \   00000522   0x4548             CMP      R0,R9
   \   00000524   0xBF08             IT       EQ 
   \   00000526   0x4650             MOVEQ    R0,R10
   \   00000528   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_59
   \   0000052A   0xF8DF 0x1530      LDR.W    R1,??HAL_DMA_PollForTransfer_43  ;; 0x40026028
   \   0000052E   0x4288             CMP      R0,R1
   \   00000530   0xBF08             IT       EQ 
   \   00000532   0xF44F 0x7080      MOVEQ    R0,#+256
   \   00000536   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_59
   \   00000538   0xF8DF 0x14D8      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x20  ;; 0x40026040
   \   0000053C   0x4288             CMP      R0,R1
   \   0000053E   0xBF0C             ITE      EQ 
   \   00000540   0xF44F 0x2080      MOVEQ    R0,#+262144
   \   00000544   0xF04F 0x7080      MOVNE    R0,#+16777216
   \                     ??HAL_DMA_PollForTransfer_59: (+1)
   \   00000548   0x60A8             STR      R0,[R5, #+8]
    571                }
    572                /* Change the DMA state */
    573                hdma->State= HAL_DMA_STATE_ERROR;
   \                     ??HAL_DMA_PollForTransfer_52: (+1)
   \   0000054A   0x2004             MOVS     R0,#+4
   \   0000054C   0x7070             STRB     R0,[R6, #+1]
    574                
    575                /* Process Unlocked */
    576                __HAL_UNLOCK(hdma);
   \   0000054E   0x2000             MOVS     R0,#+0
   \   00000550   0x7030             STRB     R0,[R6, #+0]
    577          
    578                return HAL_ERROR;
   \   00000552   0x2001             MOVS     R0,#+1
   \   00000554   0x....             B.N      ?Subroutine0
    579              }  
    580              /* Check for the Timeout */
    581              if(Timeout != HAL_MAX_DELAY)
   \                     ??HAL_DMA_PollForTransfer_34: (+1)
   \   00000556   0x9802             LDR      R0,[SP, #+8]
   \   00000558   0xF110 0x0F01      CMN      R0,#+1
   \   0000055C   0xF43F 0xADD6      BEQ.W    ??HAL_DMA_PollForTransfer_15
    582              {
    583                if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
   \   00000560   0xB138             CBZ.N    R0,??HAL_DMA_PollForTransfer_60
   \   00000562   0x.... 0x....      BL       HAL_GetTick
   \   00000566   0x9900             LDR      R1,[SP, #+0]
   \   00000568   0x1A40             SUBS     R0,R0,R1
   \   0000056A   0x9902             LDR      R1,[SP, #+8]
   \   0000056C   0x4281             CMP      R1,R0
   \   0000056E   0xF4BF 0xADCD      BCS.W    ??HAL_DMA_PollForTransfer_15
    584                {
    585                  /* Update error code */
    586                  hdma->ErrorCode |= HAL_DMA_ERROR_TIMEOUT;
   \                     ??HAL_DMA_PollForTransfer_60: (+1)
   \   00000572   0xF104 0x0634      ADD      R6,R4,#+52
   \   00000576   0x69B0             LDR      R0,[R6, #+24]
   \   00000578   0xF040 0x0020      ORR      R0,R0,#0x20
   \   0000057C   0x61B0             STR      R0,[R6, #+24]
    587          
    588                  /* Change the DMA state */
    589                  hdma->State = HAL_DMA_STATE_TIMEOUT;
   \   0000057E   0x2003             MOVS     R0,#+3
   \   00000580   0x7070             STRB     R0,[R6, #+1]
    590          
    591                  /* Process Unlocked */
    592                  __HAL_UNLOCK(hdma);
   \   00000582   0x2000             MOVS     R0,#+0
   \   00000584   0x7030             STRB     R0,[R6, #+0]
    593                  
    594                  return HAL_TIMEOUT;
   \   00000586   0x2003             MOVS     R0,#+3
   \   00000588   0x....             B.N      ?Subroutine0
    595                }
    596              }
    597            }
    598          
    599            if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
   \                     ??HAL_DMA_PollForTransfer_17: (+1)
   \   0000058A   0x9A01             LDR      R2,[SP, #+4]
   \   0000058C   0x6809             LDR      R1,[R1, #+0]
   \   0000058E   0x2A00             CMP      R2,#+0
   \   00000590   0xF040 0x8189      BNE.W    ??HAL_DMA_PollForTransfer_61
    600            {
    601              /* Multi_Buffering mode enabled */
    602              if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != 0)
   \   00000594   0x0349             LSLS     R1,R1,#+13
   \   00000596   0xF140 0x80D1      BPL.W    ??HAL_DMA_PollForTransfer_62
    603              {
    604                /* Clear the half transfer complete flag */
    605                __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
   \   0000059A   0x4558             CMP      R0,R11
   \   0000059C   0xD316             BCC.N    ??HAL_DMA_PollForTransfer_63
   \   0000059E   0xF8DF 0x1460      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0xC  ;; 0x40026470
   \   000005A2   0x4288             CMP      R0,R1
   \   000005A4   0xBF08             IT       EQ 
   \   000005A6   0x2010             MOVEQ    R0,#+16
   \   000005A8   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_64
   \   000005AA   0xF8DF 0x1464      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x1C  ;; 0x40026488
   \   000005AE   0x4288             CMP      R0,R1
   \   000005B0   0xBF08             IT       EQ 
   \   000005B2   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   000005B6   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_64
   \   000005B8   0xF8DF 0x1464      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x2C  ;; 0x400264a0
   \   000005BC   0x4288             CMP      R0,R1
   \   000005BE   0xBF0C             ITE      EQ 
   \   000005C0   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   000005C4   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_64: (+1)
   \   000005C8   0x60F8             STR      R0,[R7, #+12]
   \   000005CA   0xE049             B.N      ??HAL_DMA_PollForTransfer_65
   \                     ??HAL_DMA_PollForTransfer_63: (+1)
   \   000005CC   0xF8DF 0x1468      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x44  ;; 0x400260b9
   \   000005D0   0x4288             CMP      R0,R1
   \   000005D2   0xD316             BCC.N    ??HAL_DMA_PollForTransfer_66
   \   000005D4   0xF8DF 0x1420      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x4  ;; 0x40026410
   \   000005D8   0x4288             CMP      R0,R1
   \   000005DA   0xBF08             IT       EQ 
   \   000005DC   0x2010             MOVEQ    R0,#+16
   \   000005DE   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_67
   \   000005E0   0xF8DF 0x1424      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x14  ;; 0x40026428
   \   000005E4   0x4288             CMP      R0,R1
   \   000005E6   0xBF08             IT       EQ 
   \   000005E8   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   000005EC   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_67
   \   000005EE   0xF8DF 0x1428      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x24  ;; 0x40026440
   \   000005F2   0x4288             CMP      R0,R1
   \   000005F4   0xBF0C             ITE      EQ 
   \   000005F6   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   000005FA   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_67: (+1)
   \   000005FE   0x60B8             STR      R0,[R7, #+8]
   \   00000600   0xE02E             B.N      ??HAL_DMA_PollForTransfer_65
   \                     ??HAL_DMA_PollForTransfer_66: (+1)
   \   00000602   0xF8DF 0x1438      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x48  ;; 0x40026059
   \   00000606   0x4288             CMP      R0,R1
   \   00000608   0xD316             BCC.N    ??HAL_DMA_PollForTransfer_68
   \   0000060A   0xF8DF 0x13F0      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x8  ;; 0x40026070
   \   0000060E   0x4288             CMP      R0,R1
   \   00000610   0xBF08             IT       EQ 
   \   00000612   0x2010             MOVEQ    R0,#+16
   \   00000614   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_69
   \   00000616   0xF8DF 0x13F4      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x18  ;; 0x40026088
   \   0000061A   0x4288             CMP      R0,R1
   \   0000061C   0xBF08             IT       EQ 
   \   0000061E   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   00000622   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_69
   \   00000624   0xF8DF 0x13F4      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x28  ;; 0x400260a0
   \   00000628   0x4288             CMP      R0,R1
   \   0000062A   0xBF0C             ITE      EQ 
   \   0000062C   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   00000630   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_69: (+1)
   \   00000634   0x60E8             STR      R0,[R5, #+12]
   \   00000636   0xE013             B.N      ??HAL_DMA_PollForTransfer_65
   \                     ??HAL_DMA_PollForTransfer_68: (+1)
   \   00000638   0x4548             CMP      R0,R9
   \   0000063A   0xBF08             IT       EQ 
   \   0000063C   0x2010             MOVEQ    R0,#+16
   \   0000063E   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_70
   \   00000640   0xF8DF 0x1418      LDR.W    R1,??HAL_DMA_PollForTransfer_43  ;; 0x40026028
   \   00000644   0x4288             CMP      R0,R1
   \   00000646   0xBF08             IT       EQ 
   \   00000648   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   0000064C   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_70
   \   0000064E   0xF8DF 0x13C4      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x20  ;; 0x40026040
   \   00000652   0x4288             CMP      R0,R1
   \   00000654   0xBF0C             ITE      EQ 
   \   00000656   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   0000065A   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_70: (+1)
   \   0000065E   0x60A8             STR      R0,[R5, #+8]
    606                /* Clear the transfer complete flag */
    607                __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma));
   \                     ??HAL_DMA_PollForTransfer_65: (+1)
   \   00000660   0x6820             LDR      R0,[R4, #+0]
   \   00000662   0x4558             CMP      R0,R11
   \   00000664   0xD316             BCC.N    ??HAL_DMA_PollForTransfer_71
   \   00000666   0xF8DF 0x1398      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0xC  ;; 0x40026470
   \   0000066A   0x4288             CMP      R0,R1
   \   0000066C   0xBF08             IT       EQ 
   \   0000066E   0x2020             MOVEQ    R0,#+32
   \   00000670   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_72
   \   00000672   0xF8DF 0x139C      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x1C  ;; 0x40026488
   \   00000676   0x4288             CMP      R0,R1
   \   00000678   0xBF08             IT       EQ 
   \   0000067A   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   0000067E   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_72
   \   00000680   0xF8DF 0x139C      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x2C  ;; 0x400264a0
   \   00000684   0x4288             CMP      R0,R1
   \   00000686   0xBF0C             ITE      EQ 
   \   00000688   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   0000068C   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_PollForTransfer_72: (+1)
   \   00000690   0x60F8             STR      R0,[R7, #+12]
   \   00000692   0xE048             B.N      ??HAL_DMA_PollForTransfer_73
   \                     ??HAL_DMA_PollForTransfer_71: (+1)
   \   00000694   0xF8DF 0x13A0      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x44  ;; 0x400260b9
   \   00000698   0x4288             CMP      R0,R1
   \   0000069A   0xD316             BCC.N    ??HAL_DMA_PollForTransfer_74
   \   0000069C   0xF8DF 0x1358      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x4  ;; 0x40026410
   \   000006A0   0x4288             CMP      R0,R1
   \   000006A2   0xBF08             IT       EQ 
   \   000006A4   0x2020             MOVEQ    R0,#+32
   \   000006A6   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_75
   \   000006A8   0xF8DF 0x135C      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x14  ;; 0x40026428
   \   000006AC   0x4288             CMP      R0,R1
   \   000006AE   0xBF08             IT       EQ 
   \   000006B0   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   000006B4   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_75
   \   000006B6   0xF8DF 0x1360      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x24  ;; 0x40026440
   \   000006BA   0x4288             CMP      R0,R1
   \   000006BC   0xBF0C             ITE      EQ 
   \   000006BE   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   000006C2   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_PollForTransfer_75: (+1)
   \   000006C6   0x60B8             STR      R0,[R7, #+8]
   \   000006C8   0xE02D             B.N      ??HAL_DMA_PollForTransfer_73
   \                     ??HAL_DMA_PollForTransfer_74: (+1)
   \   000006CA   0xF8DF 0x1370      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x48  ;; 0x40026059
   \   000006CE   0x4288             CMP      R0,R1
   \   000006D0   0xD316             BCC.N    ??HAL_DMA_PollForTransfer_76
   \   000006D2   0xF8DF 0x1328      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x8  ;; 0x40026070
   \   000006D6   0x4288             CMP      R0,R1
   \   000006D8   0xBF08             IT       EQ 
   \   000006DA   0x2020             MOVEQ    R0,#+32
   \   000006DC   0xD00E             BEQ.N    ??HAL_DMA_PollForTransfer_77
   \   000006DE   0xF8DF 0x132C      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x18  ;; 0x40026088
   \   000006E2   0x4288             CMP      R0,R1
   \   000006E4   0xBF08             IT       EQ 
   \   000006E6   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   000006EA   0xD007             BEQ.N    ??HAL_DMA_PollForTransfer_77
   \   000006EC   0xF8DF 0x132C      LDR.W    R1,??HAL_DMA_PollForTransfer_0+0x28  ;; 0x400260a0
   \   000006F0   0x4288             CMP      R0,R1
   \   000006F2   0xBF0C             ITE      EQ 
   \   000006F4   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   000006F8   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_PollForTransfer_77: (+1)
   \   000006FC   0x60E8             STR      R0,[R5, #+12]
   \   000006FE   0xE012             B.N      ??HAL_DMA_PollForTransfer_73
   \                     ??HAL_DMA_PollForTransfer_76: (+1)
   \   00000700   0x4548             CMP      R0,R9
   \   00000702   0xBF08             IT       EQ 
   \   00000704   0x2020             MOVEQ    R0,#+32
   \   00000706   0xD00D             BEQ.N    ??HAL_DMA_PollForTransfer_78
   \   00000708   0xF8DF 0x1350      LDR.W    R1,??HAL_DMA_PollForTransfer_43  ;; 0x40026028
   \   0000070C   0x4288             CMP      R0,R1
   \   0000070E   0xBF08             IT       EQ 
   \   00000710   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   00000714   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_78
   \   00000716   0x49BF             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x20  ;; 0x40026040
   \   00000718   0x4288             CMP      R0,R1
   \   0000071A   0xBF0C             ITE      EQ 
   \   0000071C   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   00000720   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_PollForTransfer_78: (+1)
   \   00000724   0x60A8             STR      R0,[R5, #+8]
    608          
    609                /* Current memory buffer used is Memory 0 */
    610                if((hdma->Instance->CR & DMA_SxCR_CT) == 0)
   \                     ??HAL_DMA_PollForTransfer_73: (+1)
   \   00000726   0x6820             LDR      R0,[R4, #+0]
   \   00000728   0x6801             LDR      R1,[R0, #+0]
   \   0000072A   0x0309             LSLS     R1,R1,#+12
   \   0000072C   0xF140 0x80B3      BPL.W    ??HAL_DMA_PollForTransfer_79
    611                {
    612                  /* Change DMA peripheral state */
    613                  hdma->State = HAL_DMA_STATE_READY_MEM0;
    614                }
    615                /* Current memory buffer used is Memory 1 */
    616                else if((hdma->Instance->CR & DMA_SxCR_CT) != 0)
   \   00000730   0x6800             LDR      R0,[R0, #+0]
   \   00000732   0x0300             LSLS     R0,R0,#+12
   \   00000734   0xF140 0x80B3      BPL.W    ??HAL_DMA_PollForTransfer_80
    617                {
    618                  /* Change DMA peripheral state */
    619                  hdma->State = HAL_DMA_STATE_READY_MEM1;
   \   00000738   0x2021             MOVS     R0,#+33
   \   0000073A   0xE0AD             B.N      ??HAL_DMA_PollForTransfer_81
    620                }
    621              }
    622              else
    623              {
    624                /* Clear the half transfer complete flag */
    625                __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
   \                     ??HAL_DMA_PollForTransfer_62: (+1)
   \   0000073C   0x4558             CMP      R0,R11
   \   0000073E   0xD313             BCC.N    ??HAL_DMA_PollForTransfer_82
   \   00000740   0x49AF             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0xC  ;; 0x40026470
   \   00000742   0x4288             CMP      R0,R1
   \   00000744   0xBF08             IT       EQ 
   \   00000746   0x2010             MOVEQ    R0,#+16
   \   00000748   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_83
   \   0000074A   0x49B1             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x1C  ;; 0x40026488
   \   0000074C   0x4288             CMP      R0,R1
   \   0000074E   0xBF08             IT       EQ 
   \   00000750   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   00000754   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_83
   \   00000756   0x49B2             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x2C  ;; 0x400264a0
   \   00000758   0x4288             CMP      R0,R1
   \   0000075A   0xBF0C             ITE      EQ 
   \   0000075C   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   00000760   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_83: (+1)
   \   00000764   0x60F8             STR      R0,[R7, #+12]
   \   00000766   0xE03F             B.N      ??HAL_DMA_PollForTransfer_84
   \                     ??HAL_DMA_PollForTransfer_82: (+1)
   \   00000768   0x49B3             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x44  ;; 0x400260b9
   \   0000076A   0x4288             CMP      R0,R1
   \   0000076C   0xD313             BCC.N    ??HAL_DMA_PollForTransfer_85
   \   0000076E   0x49A2             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x4  ;; 0x40026410
   \   00000770   0x4288             CMP      R0,R1
   \   00000772   0xBF08             IT       EQ 
   \   00000774   0x2010             MOVEQ    R0,#+16
   \   00000776   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_86
   \   00000778   0x49A3             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x14  ;; 0x40026428
   \   0000077A   0x4288             CMP      R0,R1
   \   0000077C   0xBF08             IT       EQ 
   \   0000077E   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   00000782   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_86
   \   00000784   0x49A4             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x24  ;; 0x40026440
   \   00000786   0x4288             CMP      R0,R1
   \   00000788   0xBF0C             ITE      EQ 
   \   0000078A   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   0000078E   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_86: (+1)
   \   00000792   0x60B8             STR      R0,[R7, #+8]
   \   00000794   0xE028             B.N      ??HAL_DMA_PollForTransfer_84
   \                     ??HAL_DMA_PollForTransfer_85: (+1)
   \   00000796   0x49A9             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x48  ;; 0x40026059
   \   00000798   0x4288             CMP      R0,R1
   \   0000079A   0xD313             BCC.N    ??HAL_DMA_PollForTransfer_87
   \   0000079C   0x4997             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x8  ;; 0x40026070
   \   0000079E   0x4288             CMP      R0,R1
   \   000007A0   0xBF08             IT       EQ 
   \   000007A2   0x2010             MOVEQ    R0,#+16
   \   000007A4   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_88
   \   000007A6   0x4999             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x18  ;; 0x40026088
   \   000007A8   0x4288             CMP      R0,R1
   \   000007AA   0xBF08             IT       EQ 
   \   000007AC   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   000007B0   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_88
   \   000007B2   0x499A             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x28  ;; 0x400260a0
   \   000007B4   0x4288             CMP      R0,R1
   \   000007B6   0xBF0C             ITE      EQ 
   \   000007B8   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   000007BC   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_88: (+1)
   \   000007C0   0x60E8             STR      R0,[R5, #+12]
   \   000007C2   0xE011             B.N      ??HAL_DMA_PollForTransfer_84
   \                     ??HAL_DMA_PollForTransfer_87: (+1)
   \   000007C4   0x4548             CMP      R0,R9
   \   000007C6   0xBF08             IT       EQ 
   \   000007C8   0x2010             MOVEQ    R0,#+16
   \   000007CA   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_89
   \   000007CC   0x49A3             LDR.N    R1,??HAL_DMA_PollForTransfer_43  ;; 0x40026028
   \   000007CE   0x4288             CMP      R0,R1
   \   000007D0   0xBF08             IT       EQ 
   \   000007D2   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   000007D6   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_89
   \   000007D8   0x498E             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x20  ;; 0x40026040
   \   000007DA   0x4288             CMP      R0,R1
   \   000007DC   0xBF0C             ITE      EQ 
   \   000007DE   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   000007E2   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_89: (+1)
   \   000007E6   0x60A8             STR      R0,[R5, #+8]
    626                /* Clear the transfer complete flag */
    627                __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma)); 
   \                     ??HAL_DMA_PollForTransfer_84: (+1)
   \   000007E8   0x6820             LDR      R0,[R4, #+0]
   \   000007EA   0x4558             CMP      R0,R11
   \   000007EC   0xD313             BCC.N    ??HAL_DMA_PollForTransfer_90
   \   000007EE   0x4984             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0xC  ;; 0x40026470
   \   000007F0   0x4288             CMP      R0,R1
   \   000007F2   0xBF08             IT       EQ 
   \   000007F4   0x2020             MOVEQ    R0,#+32
   \   000007F6   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_91
   \   000007F8   0x4985             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x1C  ;; 0x40026488
   \   000007FA   0x4288             CMP      R0,R1
   \   000007FC   0xBF08             IT       EQ 
   \   000007FE   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   00000802   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_91
   \   00000804   0x4986             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x2C  ;; 0x400264a0
   \   00000806   0x4288             CMP      R0,R1
   \   00000808   0xBF0C             ITE      EQ 
   \   0000080A   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   0000080E   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_PollForTransfer_91: (+1)
   \   00000812   0x60F8             STR      R0,[R7, #+12]
   \   00000814   0xE03F             B.N      ??HAL_DMA_PollForTransfer_79
   \                     ??HAL_DMA_PollForTransfer_90: (+1)
   \   00000816   0x4988             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x44  ;; 0x400260b9
   \   00000818   0x4288             CMP      R0,R1
   \   0000081A   0xD313             BCC.N    ??HAL_DMA_PollForTransfer_92
   \   0000081C   0x4976             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x4  ;; 0x40026410
   \   0000081E   0x4288             CMP      R0,R1
   \   00000820   0xBF08             IT       EQ 
   \   00000822   0x2020             MOVEQ    R0,#+32
   \   00000824   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_93
   \   00000826   0x4978             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x14  ;; 0x40026428
   \   00000828   0x4288             CMP      R0,R1
   \   0000082A   0xBF08             IT       EQ 
   \   0000082C   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   00000830   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_93
   \   00000832   0x4979             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x24  ;; 0x40026440
   \   00000834   0x4288             CMP      R0,R1
   \   00000836   0xBF0C             ITE      EQ 
   \   00000838   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   0000083C   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_PollForTransfer_93: (+1)
   \   00000840   0x60B8             STR      R0,[R7, #+8]
   \   00000842   0xE028             B.N      ??HAL_DMA_PollForTransfer_79
   \                     ??HAL_DMA_PollForTransfer_92: (+1)
   \   00000844   0x497D             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x48  ;; 0x40026059
   \   00000846   0x4288             CMP      R0,R1
   \   00000848   0xD313             BCC.N    ??HAL_DMA_PollForTransfer_94
   \   0000084A   0x496C             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x8  ;; 0x40026070
   \   0000084C   0x4288             CMP      R0,R1
   \   0000084E   0xBF08             IT       EQ 
   \   00000850   0x2020             MOVEQ    R0,#+32
   \   00000852   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_95
   \   00000854   0x496D             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x18  ;; 0x40026088
   \   00000856   0x4288             CMP      R0,R1
   \   00000858   0xBF08             IT       EQ 
   \   0000085A   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   0000085E   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_95
   \   00000860   0x496E             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x28  ;; 0x400260a0
   \   00000862   0x4288             CMP      R0,R1
   \   00000864   0xBF0C             ITE      EQ 
   \   00000866   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   0000086A   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_PollForTransfer_95: (+1)
   \   0000086E   0x60E8             STR      R0,[R5, #+12]
   \   00000870   0xE011             B.N      ??HAL_DMA_PollForTransfer_79
   \                     ??HAL_DMA_PollForTransfer_94: (+1)
   \   00000872   0x4548             CMP      R0,R9
   \   00000874   0xBF08             IT       EQ 
   \   00000876   0x2020             MOVEQ    R0,#+32
   \   00000878   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_96
   \   0000087A   0x4978             LDR.N    R1,??HAL_DMA_PollForTransfer_43  ;; 0x40026028
   \   0000087C   0x4288             CMP      R0,R1
   \   0000087E   0xBF08             IT       EQ 
   \   00000880   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   00000884   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_96
   \   00000886   0x4963             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x20  ;; 0x40026040
   \   00000888   0x4288             CMP      R0,R1
   \   0000088A   0xBF0C             ITE      EQ 
   \   0000088C   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   00000890   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_PollForTransfer_96: (+1)
   \   00000894   0x60A8             STR      R0,[R5, #+8]
    628          
    629                /* The selected Streamx EN bit is cleared (DMA is disabled and all transfers
    630                   are complete) */
    631                hdma->State = HAL_DMA_STATE_READY_MEM0;
   \                     ??HAL_DMA_PollForTransfer_79: (+1)
   \   00000896   0x2011             MOVS     R0,#+17
   \                     ??HAL_DMA_PollForTransfer_81: (+1)
   \   00000898   0xF104 0x0134      ADD      R1,R4,#+52
   \   0000089C   0x7048             STRB     R0,[R1, #+1]
    632              }
    633              /* Process Unlocked */
    634              __HAL_UNLOCK(hdma);
   \                     ??HAL_DMA_PollForTransfer_80: (+1)
   \   0000089E   0x2000             MOVS     R0,#+0
   \   000008A0   0xF884 0x0034      STRB     R0,[R4, #+52]
   \   000008A4   0xE0E7             B.N      ??HAL_DMA_PollForTransfer_97
    635            }
    636            else
    637            { 
    638              /* Multi_Buffering mode enabled */
    639              if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != 0)
   \                     ??HAL_DMA_PollForTransfer_61: (+1)
   \   000008A6   0x0349             LSLS     R1,R1,#+13
   \   000008A8   0xD560             BPL.N    ??HAL_DMA_PollForTransfer_98
    640              {
    641                /* Clear the half transfer complete flag */
    642                __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
   \   000008AA   0x4558             CMP      R0,R11
   \   000008AC   0xD313             BCC.N    ??HAL_DMA_PollForTransfer_99
   \   000008AE   0x4954             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0xC  ;; 0x40026470
   \   000008B0   0x4288             CMP      R0,R1
   \   000008B2   0xBF08             IT       EQ 
   \   000008B4   0x2010             MOVEQ    R0,#+16
   \   000008B6   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_100
   \   000008B8   0x4955             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x1C  ;; 0x40026488
   \   000008BA   0x4288             CMP      R0,R1
   \   000008BC   0xBF08             IT       EQ 
   \   000008BE   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   000008C2   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_100
   \   000008C4   0x4956             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x2C  ;; 0x400264a0
   \   000008C6   0x4288             CMP      R0,R1
   \   000008C8   0xBF0C             ITE      EQ 
   \   000008CA   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   000008CE   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_100: (+1)
   \   000008D2   0x60F8             STR      R0,[R7, #+12]
   \   000008D4   0xE03F             B.N      ??HAL_DMA_PollForTransfer_101
   \                     ??HAL_DMA_PollForTransfer_99: (+1)
   \   000008D6   0x4958             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x44  ;; 0x400260b9
   \   000008D8   0x4288             CMP      R0,R1
   \   000008DA   0xD313             BCC.N    ??HAL_DMA_PollForTransfer_102
   \   000008DC   0x4946             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x4  ;; 0x40026410
   \   000008DE   0x4288             CMP      R0,R1
   \   000008E0   0xBF08             IT       EQ 
   \   000008E2   0x2010             MOVEQ    R0,#+16
   \   000008E4   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_103
   \   000008E6   0x4948             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x14  ;; 0x40026428
   \   000008E8   0x4288             CMP      R0,R1
   \   000008EA   0xBF08             IT       EQ 
   \   000008EC   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   000008F0   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_103
   \   000008F2   0x4949             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x24  ;; 0x40026440
   \   000008F4   0x4288             CMP      R0,R1
   \   000008F6   0xBF0C             ITE      EQ 
   \   000008F8   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   000008FC   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_103: (+1)
   \   00000900   0x60B8             STR      R0,[R7, #+8]
   \   00000902   0xE028             B.N      ??HAL_DMA_PollForTransfer_101
   \                     ??HAL_DMA_PollForTransfer_102: (+1)
   \   00000904   0x494D             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x48  ;; 0x40026059
   \   00000906   0x4288             CMP      R0,R1
   \   00000908   0xD313             BCC.N    ??HAL_DMA_PollForTransfer_104
   \   0000090A   0x493C             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x8  ;; 0x40026070
   \   0000090C   0x4288             CMP      R0,R1
   \   0000090E   0xBF08             IT       EQ 
   \   00000910   0x2010             MOVEQ    R0,#+16
   \   00000912   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_105
   \   00000914   0x493D             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x18  ;; 0x40026088
   \   00000916   0x4288             CMP      R0,R1
   \   00000918   0xBF08             IT       EQ 
   \   0000091A   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   0000091E   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_105
   \   00000920   0x493E             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x28  ;; 0x400260a0
   \   00000922   0x4288             CMP      R0,R1
   \   00000924   0xBF0C             ITE      EQ 
   \   00000926   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   0000092A   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_105: (+1)
   \   0000092E   0x60E8             STR      R0,[R5, #+12]
   \   00000930   0xE011             B.N      ??HAL_DMA_PollForTransfer_101
   \                     ??HAL_DMA_PollForTransfer_104: (+1)
   \   00000932   0x4548             CMP      R0,R9
   \   00000934   0xBF08             IT       EQ 
   \   00000936   0x2010             MOVEQ    R0,#+16
   \   00000938   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_106
   \   0000093A   0x4948             LDR.N    R1,??HAL_DMA_PollForTransfer_43  ;; 0x40026028
   \   0000093C   0x4288             CMP      R0,R1
   \   0000093E   0xBF08             IT       EQ 
   \   00000940   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   00000944   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_106
   \   00000946   0x4933             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x20  ;; 0x40026040
   \   00000948   0x4288             CMP      R0,R1
   \   0000094A   0xBF0C             ITE      EQ 
   \   0000094C   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   00000950   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_106: (+1)
   \   00000954   0x60A8             STR      R0,[R5, #+8]
    643          
    644                /* Current memory buffer used is Memory 0 */
    645                if((hdma->Instance->CR & DMA_SxCR_CT) == 0)
   \                     ??HAL_DMA_PollForTransfer_101: (+1)
   \   00000956   0x6820             LDR      R0,[R4, #+0]
   \   00000958   0x6801             LDR      R1,[R0, #+0]
   \   0000095A   0x0309             LSLS     R1,R1,#+12
   \   0000095C   0xF140 0x8087      BPL.W    ??HAL_DMA_PollForTransfer_107
    646                {
    647                  /* Change DMA peripheral state */
    648                  hdma->State = HAL_DMA_STATE_READY_HALF_MEM0;
    649                }
    650                /* Current memory buffer used is Memory 1 */
    651                else if((hdma->Instance->CR & DMA_SxCR_CT) != 0)
   \   00000960   0x6800             LDR      R0,[R0, #+0]
   \   00000962   0x0300             LSLS     R0,R0,#+12
   \   00000964   0xF140 0x8087      BPL.W    ??HAL_DMA_PollForTransfer_97
    652                {
    653                  /* Change DMA peripheral state */
    654                  hdma->State = HAL_DMA_STATE_READY_HALF_MEM1;
   \   00000968   0x2041             MOVS     R0,#+65
   \   0000096A   0xE081             B.N      ??HAL_DMA_PollForTransfer_108
    655                }
    656              }
    657              else
    658              {
    659                /* Clear the half transfer complete flag */
    660                __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
   \                     ??HAL_DMA_PollForTransfer_98: (+1)
   \   0000096C   0x4558             CMP      R0,R11
   \   0000096E   0xD313             BCC.N    ??HAL_DMA_PollForTransfer_109
   \   00000970   0x4923             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0xC  ;; 0x40026470
   \   00000972   0x4288             CMP      R0,R1
   \   00000974   0xBF08             IT       EQ 
   \   00000976   0x2010             MOVEQ    R0,#+16
   \   00000978   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_110
   \   0000097A   0x4925             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x1C  ;; 0x40026488
   \   0000097C   0x4288             CMP      R0,R1
   \   0000097E   0xBF08             IT       EQ 
   \   00000980   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   00000984   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_110
   \   00000986   0x4926             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x2C  ;; 0x400264a0
   \   00000988   0x4288             CMP      R0,R1
   \   0000098A   0xBF0C             ITE      EQ 
   \   0000098C   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   00000990   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_110: (+1)
   \   00000994   0x60F8             STR      R0,[R7, #+12]
   \   00000996   0xE06A             B.N      ??HAL_DMA_PollForTransfer_107
   \                     ??HAL_DMA_PollForTransfer_109: (+1)
   \   00000998   0x4927             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x44  ;; 0x400260b9
   \   0000099A   0x4288             CMP      R0,R1
   \   0000099C   0xD313             BCC.N    ??HAL_DMA_PollForTransfer_111
   \   0000099E   0x4916             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x4  ;; 0x40026410
   \   000009A0   0x4288             CMP      R0,R1
   \   000009A2   0xBF08             IT       EQ 
   \   000009A4   0x2010             MOVEQ    R0,#+16
   \   000009A6   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_112
   \   000009A8   0x4917             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x14  ;; 0x40026428
   \   000009AA   0x4288             CMP      R0,R1
   \   000009AC   0xBF08             IT       EQ 
   \   000009AE   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   000009B2   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_112
   \   000009B4   0x4918             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x24  ;; 0x40026440
   \   000009B6   0x4288             CMP      R0,R1
   \   000009B8   0xBF0C             ITE      EQ 
   \   000009BA   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   000009BE   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_112: (+1)
   \   000009C2   0x60B8             STR      R0,[R7, #+8]
   \   000009C4   0xE053             B.N      ??HAL_DMA_PollForTransfer_107
   \                     ??HAL_DMA_PollForTransfer_111: (+1)
   \   000009C6   0x491D             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x48  ;; 0x40026059
   \   000009C8   0x4288             CMP      R0,R1
   \   000009CA   0xD339             BCC.N    ??HAL_DMA_PollForTransfer_113
   \   000009CC   0x490B             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x8  ;; 0x40026070
   \   000009CE   0x4288             CMP      R0,R1
   \   000009D0   0xBF08             IT       EQ 
   \   000009D2   0x2010             MOVEQ    R0,#+16
   \   000009D4   0xD00C             BEQ.N    ??HAL_DMA_PollForTransfer_114
   \   000009D6   0x490D             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x18  ;; 0x40026088
   \   000009D8   0x4288             CMP      R0,R1
   \   000009DA   0xBF08             IT       EQ 
   \   000009DC   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   000009E0   0xD006             BEQ.N    ??HAL_DMA_PollForTransfer_114
   \   000009E2   0x490E             LDR.N    R1,??HAL_DMA_PollForTransfer_0+0x28  ;; 0x400260a0
   \   000009E4   0x4288             CMP      R0,R1
   \   000009E6   0xBF0C             ITE      EQ 
   \   000009E8   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   000009EC   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_114: (+1)
   \   000009F0   0x60E8             STR      R0,[R5, #+12]
   \   000009F2   0xE03C             B.N      ??HAL_DMA_PollForTransfer_107
   \                     ??HAL_DMA_PollForTransfer_0:
   \   000009F4   0x40026010         DC32     0x40026010
   \   000009F8   0x40026410         DC32     0x40026410
   \   000009FC   0x40026070         DC32     0x40026070
   \   00000A00   0x40026470         DC32     0x40026470
   \   00000A04   0x40026028         DC32     0x40026028
   \   00000A08   0x40026428         DC32     0x40026428
   \   00000A0C   0x40026088         DC32     0x40026088
   \   00000A10   0x40026488         DC32     0x40026488
   \   00000A14   0x40026040         DC32     0x40026040
   \   00000A18   0x40026440         DC32     0x40026440
   \   00000A1C   0x400260A0         DC32     0x400260a0
   \   00000A20   0x400264A0         DC32     0x400264a0
   \   00000A24   0x00800004         DC32     0x800004
   \   00000A28   0x00800001         DC32     0x800001
   \   00000A2C   0x40026000         DC32     0x40026000
   \   00000A30   0x40026400         DC32     0x40026400
   \   00000A34   0x40026459         DC32     0x40026459
   \   00000A38   0x400260B9         DC32     0x400260b9
   \   00000A3C   0x40026059         DC32     0x40026059
   \                     ??HAL_DMA_PollForTransfer_113: (+1)
   \   00000A40   0x4548             CMP      R0,R9
   \   00000A42   0xBF08             IT       EQ 
   \   00000A44   0x2010             MOVEQ    R0,#+16
   \   00000A46   0xD011             BEQ.N    ??HAL_DMA_PollForTransfer_115
   \   00000A48   0x4904             LDR.N    R1,??HAL_DMA_PollForTransfer_43  ;; 0x40026028
   \   00000A4A   0x4288             CMP      R0,R1
   \   00000A4C   0xBF08             IT       EQ 
   \   00000A4E   0xF44F 0x6080      MOVEQ    R0,#+1024
   \   00000A52   0xD00B             BEQ.N    ??HAL_DMA_PollForTransfer_115
   \   00000A54   0x.... 0x....      LDR.W    R1,??DataTable2  ;; 0x40026040
   \   00000A58   0xE002             B.N      ??HAL_DMA_PollForTransfer_116
   \   00000A5A   0xBF00             Nop      
   \                     ??HAL_DMA_PollForTransfer_43:
   \   00000A5C   0x40026028         DC32     0x40026028
   \                     ??HAL_DMA_PollForTransfer_116: (+1)
   \   00000A60   0x4288             CMP      R0,R1
   \   00000A62   0xBF0C             ITE      EQ 
   \   00000A64   0xF44F 0x1080      MOVEQ    R0,#+1048576
   \   00000A68   0xF04F 0x6080      MOVNE    R0,#+67108864
   \                     ??HAL_DMA_PollForTransfer_115: (+1)
   \   00000A6C   0x60A8             STR      R0,[R5, #+8]
    661          
    662                /* Change DMA peripheral state */
    663                hdma->State = HAL_DMA_STATE_READY_HALF_MEM0;
   \                     ??HAL_DMA_PollForTransfer_107: (+1)
   \   00000A6E   0x2031             MOVS     R0,#+49
   \                     ??HAL_DMA_PollForTransfer_108: (+1)
   \   00000A70   0xF104 0x0134      ADD      R1,R4,#+52
   \   00000A74   0x7048             STRB     R0,[R1, #+1]
    664              }
    665            }
    666            return HAL_OK;
   \                     ??HAL_DMA_PollForTransfer_97: (+1)
   \   00000A76   0x2000             MOVS     R0,#+0
   \   00000A78                      REQUIRE ?Subroutine0
   \   00000A78                      ;; // Fall through to label ?Subroutine0
    667          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0xB003             ADD      SP,SP,#+12
   \   00000002   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    668          
    669          /**
    670            * @brief  Handles DMA interrupt request.
    671            * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
    672            *               the configuration information for the specified DMA Stream.  
    673            * @retval None
    674            */

   \                                 In section .text, align 2, keep-with-next
    675          void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
    676          {
   \                     HAL_DMA_IRQHandler: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x4604             MOV      R4,R0
    677            /* Transfer Error Interrupt management ***************************************/
    678            if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_TE_FLAG_INDEX(hdma)) != RESET)
   \   00000006   0x.... 0x....      LDR.W    R8,??DataTable2_1  ;; 0x40026459
   \   0000000A   0x.... 0x....      LDR.W    R5,??DataTable2_2  ;; 0x40026400
   \   0000000E   0x.... 0x....      LDR.W    R6,??DataTable2_3  ;; 0x400260b9
   \   00000012   0x6821             LDR      R1,[R4, #+0]
   \   00000014   0x.... 0x....      LDR.W    R7,??DataTable2_4  ;; 0x40026470
   \   00000018   0x4541             CMP      R1,R8
   \   0000001A   0xD314             BCC.N    ??HAL_DMA_IRQHandler_0
   \   0000001C   0x42B9             CMP      R1,R7
   \   0000001E   0x6868             LDR      R0,[R5, #+4]
   \   00000020   0xBF08             IT       EQ 
   \   00000022   0x2208             MOVEQ    R2,#+8
   \   00000024   0xD05B             BEQ.N    ??HAL_DMA_IRQHandler_1
   \   00000026   0x.... 0x....      LDR.W    R3,??DataTable2_5  ;; 0x40026488
   \   0000002A   0x4299             CMP      R1,R3
   \   0000002C   0xBF08             IT       EQ 
   \   0000002E   0xF44F 0x7200      MOVEQ    R2,#+512
   \   00000032   0xD054             BEQ.N    ??HAL_DMA_IRQHandler_1
   \   00000034   0x.... 0x....      LDR.W    R3,??DataTable2_6  ;; 0x400264a0
   \   00000038   0x4299             CMP      R1,R3
   \   0000003A   0xBF14             ITE      NE 
   \   0000003C   0xF04F 0x7200      MOVNE    R2,#+33554432
   \   00000040   0xF44F 0x2200      MOVEQ    R2,#+524288
   \   00000044   0xE04B             B.N      ??HAL_DMA_IRQHandler_1
   \                     ??HAL_DMA_IRQHandler_0: (+1)
   \   00000046   0x42B1             CMP      R1,R6
   \   00000048   0xD316             BCC.N    ??HAL_DMA_IRQHandler_2
   \   0000004A   0x.... 0x....      LDR.W    R3,??DataTable2_7  ;; 0x40026410
   \   0000004E   0x6828             LDR      R0,[R5, #+0]
   \   00000050   0x4299             CMP      R1,R3
   \   00000052   0xBF08             IT       EQ 
   \   00000054   0x2208             MOVEQ    R2,#+8
   \   00000056   0xD042             BEQ.N    ??HAL_DMA_IRQHandler_1
   \   00000058   0x.... 0x....      LDR.W    R3,??DataTable2_8  ;; 0x40026428
   \   0000005C   0x4299             CMP      R1,R3
   \   0000005E   0xBF08             IT       EQ 
   \   00000060   0xF44F 0x7200      MOVEQ    R2,#+512
   \   00000064   0xD03B             BEQ.N    ??HAL_DMA_IRQHandler_1
   \   00000066   0x.... 0x....      LDR.W    R3,??DataTable2_9  ;; 0x40026440
   \   0000006A   0x4299             CMP      R1,R3
   \   0000006C   0xBF14             ITE      NE 
   \   0000006E   0xF04F 0x7200      MOVNE    R2,#+33554432
   \   00000072   0xF44F 0x2200      MOVEQ    R2,#+524288
   \   00000076   0xE032             B.N      ??HAL_DMA_IRQHandler_1
   \                     ??HAL_DMA_IRQHandler_2: (+1)
   \   00000078   0x.... 0x....      LDR.W    R3,??DataTable2_10  ;; 0x40026059
   \   0000007C   0x.... 0x....      LDR.W    R0,??DataTable2_11  ;; 0x40026000
   \   00000080   0x4299             CMP      R1,R3
   \   00000082   0xD316             BCC.N    ??HAL_DMA_IRQHandler_3
   \   00000084   0x.... 0x....      LDR.W    R3,??DataTable2_12  ;; 0x40026070
   \   00000088   0x6840             LDR      R0,[R0, #+4]
   \   0000008A   0x4299             CMP      R1,R3
   \   0000008C   0xBF08             IT       EQ 
   \   0000008E   0x2208             MOVEQ    R2,#+8
   \   00000090   0xD025             BEQ.N    ??HAL_DMA_IRQHandler_1
   \   00000092   0x.... 0x....      LDR.W    R3,??DataTable2_13  ;; 0x40026088
   \   00000096   0x4299             CMP      R1,R3
   \   00000098   0xBF08             IT       EQ 
   \   0000009A   0xF44F 0x7200      MOVEQ    R2,#+512
   \   0000009E   0xD01E             BEQ.N    ??HAL_DMA_IRQHandler_1
   \   000000A0   0x.... 0x....      LDR.W    R3,??DataTable2_14  ;; 0x400260a0
   \   000000A4   0x4299             CMP      R1,R3
   \   000000A6   0xBF14             ITE      NE 
   \   000000A8   0xF04F 0x7200      MOVNE    R2,#+33554432
   \   000000AC   0xF44F 0x2200      MOVEQ    R2,#+524288
   \   000000B0   0xE015             B.N      ??HAL_DMA_IRQHandler_1
   \                     ??HAL_DMA_IRQHandler_3: (+1)
   \   000000B2   0x.... 0x....      LDR.W    R3,??DataTable2_15  ;; 0x40026010
   \   000000B6   0x6800             LDR      R0,[R0, #+0]
   \   000000B8   0x4299             CMP      R1,R3
   \   000000BA   0xBF08             IT       EQ 
   \   000000BC   0x2208             MOVEQ    R2,#+8
   \   000000BE   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_1
   \   000000C0   0x.... 0x....      LDR.W    R3,??DataTable2_16  ;; 0x40026028
   \   000000C4   0x4299             CMP      R1,R3
   \   000000C6   0xBF08             IT       EQ 
   \   000000C8   0xF44F 0x7200      MOVEQ    R2,#+512
   \   000000CC   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_1
   \   000000CE   0x.... 0x....      LDR.W    R3,??DataTable2  ;; 0x40026040
   \   000000D2   0x4299             CMP      R1,R3
   \   000000D4   0xBF0C             ITE      EQ 
   \   000000D6   0xF44F 0x2200      MOVEQ    R2,#+524288
   \   000000DA   0xF04F 0x7200      MOVNE    R2,#+33554432
   \                     ??HAL_DMA_IRQHandler_1: (+1)
   \   000000DE   0x4010             ANDS     R0,R2,R0
   \   000000E0   0xD079             BEQ.N    ??HAL_DMA_IRQHandler_4
    679            {
    680              if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
   \   000000E2   0x6808             LDR      R0,[R1, #+0]
   \   000000E4   0x0740             LSLS     R0,R0,#+29
   \   000000E6   0xD576             BPL.N    ??HAL_DMA_IRQHandler_4
    681              {
    682                /* Disable the transfer error interrupt */
    683                __HAL_DMA_DISABLE_IT(hdma, DMA_IT_TE);
   \   000000E8   0x6808             LDR      R0,[R1, #+0]
   \   000000EA   0xF020 0x0004      BIC      R0,R0,#0x4
   \   000000EE   0x6008             STR      R0,[R1, #+0]
    684          
    685                /* Clear the transfer error flag */
    686                __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TE_FLAG_INDEX(hdma));
   \   000000F0   0x6821             LDR      R1,[R4, #+0]
   \   000000F2   0x4541             CMP      R1,R8
   \   000000F4   0xD314             BCC.N    ??HAL_DMA_IRQHandler_5
   \   000000F6   0x42B9             CMP      R1,R7
   \   000000F8   0xBF08             IT       EQ 
   \   000000FA   0x2008             MOVEQ    R0,#+8
   \   000000FC   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_6
   \   000000FE   0x.... 0x....      LDR.W    R0,??DataTable2_5  ;; 0x40026488
   \   00000102   0x4281             CMP      R1,R0
   \   00000104   0xBF08             IT       EQ 
   \   00000106   0xF44F 0x7000      MOVEQ    R0,#+512
   \   0000010A   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_6
   \   0000010C   0x.... 0x....      LDR.W    R0,??DataTable2_6  ;; 0x400264a0
   \   00000110   0x4281             CMP      R1,R0
   \   00000112   0xBF0C             ITE      EQ 
   \   00000114   0xF44F 0x2000      MOVEQ    R0,#+524288
   \   00000118   0xF04F 0x7000      MOVNE    R0,#+33554432
   \                     ??HAL_DMA_IRQHandler_6: (+1)
   \   0000011C   0x60E8             STR      R0,[R5, #+12]
   \   0000011E   0xE04B             B.N      ??HAL_DMA_IRQHandler_7
   \                     ??HAL_DMA_IRQHandler_5: (+1)
   \   00000120   0x42B1             CMP      R1,R6
   \   00000122   0xD316             BCC.N    ??HAL_DMA_IRQHandler_8
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable2_7  ;; 0x40026410
   \   00000128   0x4281             CMP      R1,R0
   \   0000012A   0xBF08             IT       EQ 
   \   0000012C   0x2008             MOVEQ    R0,#+8
   \   0000012E   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_9
   \   00000130   0x.... 0x....      LDR.W    R0,??DataTable2_8  ;; 0x40026428
   \   00000134   0x4281             CMP      R1,R0
   \   00000136   0xBF08             IT       EQ 
   \   00000138   0xF44F 0x7000      MOVEQ    R0,#+512
   \   0000013C   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_9
   \   0000013E   0x.... 0x....      LDR.W    R0,??DataTable2_9  ;; 0x40026440
   \   00000142   0x4281             CMP      R1,R0
   \   00000144   0xBF0C             ITE      EQ 
   \   00000146   0xF44F 0x2000      MOVEQ    R0,#+524288
   \   0000014A   0xF04F 0x7000      MOVNE    R0,#+33554432
   \                     ??HAL_DMA_IRQHandler_9: (+1)
   \   0000014E   0x60A8             STR      R0,[R5, #+8]
   \   00000150   0xE032             B.N      ??HAL_DMA_IRQHandler_7
   \                     ??HAL_DMA_IRQHandler_8: (+1)
   \   00000152   0x.... 0x....      LDR.W    R2,??DataTable2_10  ;; 0x40026059
   \   00000156   0x.... 0x....      LDR.W    R0,??DataTable2_11  ;; 0x40026000
   \   0000015A   0x4291             CMP      R1,R2
   \   0000015C   0xD316             BCC.N    ??HAL_DMA_IRQHandler_10
   \   0000015E   0x.... 0x....      LDR.W    R2,??DataTable2_12  ;; 0x40026070
   \   00000162   0x4291             CMP      R1,R2
   \   00000164   0xBF08             IT       EQ 
   \   00000166   0x2108             MOVEQ    R1,#+8
   \   00000168   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_11
   \   0000016A   0x.... 0x....      LDR.W    R2,??DataTable2_13  ;; 0x40026088
   \   0000016E   0x4291             CMP      R1,R2
   \   00000170   0xBF08             IT       EQ 
   \   00000172   0xF44F 0x7100      MOVEQ    R1,#+512
   \   00000176   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_11
   \   00000178   0x.... 0x....      LDR.W    R2,??DataTable2_14  ;; 0x400260a0
   \   0000017C   0x4291             CMP      R1,R2
   \   0000017E   0xBF0C             ITE      EQ 
   \   00000180   0xF44F 0x2100      MOVEQ    R1,#+524288
   \   00000184   0xF04F 0x7100      MOVNE    R1,#+33554432
   \                     ??HAL_DMA_IRQHandler_11: (+1)
   \   00000188   0x60C1             STR      R1,[R0, #+12]
   \   0000018A   0xE015             B.N      ??HAL_DMA_IRQHandler_7
   \                     ??HAL_DMA_IRQHandler_10: (+1)
   \   0000018C   0x.... 0x....      LDR.W    R2,??DataTable2_15  ;; 0x40026010
   \   00000190   0x4291             CMP      R1,R2
   \   00000192   0xBF08             IT       EQ 
   \   00000194   0x2108             MOVEQ    R1,#+8
   \   00000196   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_12
   \   00000198   0x.... 0x....      LDR.W    R2,??DataTable2_16  ;; 0x40026028
   \   0000019C   0x4291             CMP      R1,R2
   \   0000019E   0xBF08             IT       EQ 
   \   000001A0   0xF44F 0x7100      MOVEQ    R1,#+512
   \   000001A4   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_12
   \   000001A6   0x.... 0x....      LDR.W    R2,??DataTable2  ;; 0x40026040
   \   000001AA   0x4291             CMP      R1,R2
   \   000001AC   0xBF0C             ITE      EQ 
   \   000001AE   0xF44F 0x2100      MOVEQ    R1,#+524288
   \   000001B2   0xF04F 0x7100      MOVNE    R1,#+33554432
   \                     ??HAL_DMA_IRQHandler_12: (+1)
   \   000001B6   0x6081             STR      R1,[R0, #+8]
    687          
    688                /* Update error code */
    689                hdma->ErrorCode |= HAL_DMA_ERROR_TE;
   \                     ??HAL_DMA_IRQHandler_7: (+1)
   \   000001B8   0xF104 0x0034      ADD      R0,R4,#+52
   \   000001BC   0x6981             LDR      R1,[R0, #+24]
   \   000001BE   0xF041 0x0101      ORR      R1,R1,#0x1
   \   000001C2   0x6181             STR      R1,[R0, #+24]
    690          
    691                /* Change the DMA state */
    692                hdma->State = HAL_DMA_STATE_ERROR;
   \   000001C4   0x2104             MOVS     R1,#+4
   \   000001C6   0x7041             STRB     R1,[R0, #+1]
    693          
    694                /* Process Unlocked */
    695                __HAL_UNLOCK(hdma); 
   \   000001C8   0x2100             MOVS     R1,#+0
   \   000001CA   0x7001             STRB     R1,[R0, #+0]
    696          
    697                if(hdma->XferErrorCallback != NULL)
   \   000001CC   0x6941             LDR      R1,[R0, #+20]
   \   000001CE   0x0008             MOVS     R0,R1
   \   000001D0   0xBF1C             ITT      NE 
    698                {
    699                  /* Transfer error callback */
    700                  hdma->XferErrorCallback(hdma);
   \   000001D2   0x4620             MOVNE    R0,R4
   \   000001D4   0x4788             BLXNE    R1
    701                }
    702              }
    703            }
    704            /* FIFO Error Interrupt management ******************************************/
    705            if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_FE_FLAG_INDEX(hdma)) != RESET)
   \                     ??HAL_DMA_IRQHandler_4: (+1)
   \   000001D6   0x6821             LDR      R1,[R4, #+0]
   \   000001D8   0x4541             CMP      R1,R8
   \   000001DA   0xD314             BCC.N    ??HAL_DMA_IRQHandler_13
   \   000001DC   0x42B9             CMP      R1,R7
   \   000001DE   0x6868             LDR      R0,[R5, #+4]
   \   000001E0   0xBF08             IT       EQ 
   \   000001E2   0x.... 0x....      LDREQ.W  R2,??DataTable2_17  ;; 0x800001
   \   000001E6   0xD05A             BEQ.N    ??HAL_DMA_IRQHandler_14
   \   000001E8   0x.... 0x....      LDR.W    R3,??DataTable2_5  ;; 0x40026488
   \   000001EC   0x4299             CMP      R1,R3
   \   000001EE   0xBF08             IT       EQ 
   \   000001F0   0x2240             MOVEQ    R2,#+64
   \   000001F2   0xD054             BEQ.N    ??HAL_DMA_IRQHandler_14
   \   000001F4   0x.... 0x....      LDR.W    R3,??DataTable2_6  ;; 0x400264a0
   \   000001F8   0x4299             CMP      R1,R3
   \   000001FA   0xBF14             ITE      NE 
   \   000001FC   0xF44F 0x0280      MOVNE    R2,#+4194304
   \   00000200   0xF44F 0x3280      MOVEQ    R2,#+65536
   \   00000204   0xE04B             B.N      ??HAL_DMA_IRQHandler_14
   \                     ??HAL_DMA_IRQHandler_13: (+1)
   \   00000206   0x42B1             CMP      R1,R6
   \   00000208   0xD316             BCC.N    ??HAL_DMA_IRQHandler_15
   \   0000020A   0x.... 0x....      LDR.W    R3,??DataTable2_7  ;; 0x40026410
   \   0000020E   0x6828             LDR      R0,[R5, #+0]
   \   00000210   0x4299             CMP      R1,R3
   \   00000212   0xBF08             IT       EQ 
   \   00000214   0x.... 0x....      LDREQ.W  R2,??DataTable2_17  ;; 0x800001
   \   00000218   0xD041             BEQ.N    ??HAL_DMA_IRQHandler_14
   \   0000021A   0x.... 0x....      LDR.W    R3,??DataTable2_8  ;; 0x40026428
   \   0000021E   0x4299             CMP      R1,R3
   \   00000220   0xBF08             IT       EQ 
   \   00000222   0x2240             MOVEQ    R2,#+64
   \   00000224   0xD03B             BEQ.N    ??HAL_DMA_IRQHandler_14
   \   00000226   0x.... 0x....      LDR.W    R3,??DataTable2_9  ;; 0x40026440
   \   0000022A   0x4299             CMP      R1,R3
   \   0000022C   0xBF14             ITE      NE 
   \   0000022E   0xF44F 0x0280      MOVNE    R2,#+4194304
   \   00000232   0xF44F 0x3280      MOVEQ    R2,#+65536
   \   00000236   0xE032             B.N      ??HAL_DMA_IRQHandler_14
   \                     ??HAL_DMA_IRQHandler_15: (+1)
   \   00000238   0x.... 0x....      LDR.W    R3,??DataTable2_10  ;; 0x40026059
   \   0000023C   0x.... 0x....      LDR.W    R0,??DataTable2_11  ;; 0x40026000
   \   00000240   0x4299             CMP      R1,R3
   \   00000242   0xD316             BCC.N    ??HAL_DMA_IRQHandler_16
   \   00000244   0x.... 0x....      LDR.W    R3,??DataTable2_12  ;; 0x40026070
   \   00000248   0x6840             LDR      R0,[R0, #+4]
   \   0000024A   0x4299             CMP      R1,R3
   \   0000024C   0xBF08             IT       EQ 
   \   0000024E   0x.... 0x....      LDREQ.W  R2,??DataTable2_17  ;; 0x800001
   \   00000252   0xD024             BEQ.N    ??HAL_DMA_IRQHandler_14
   \   00000254   0x.... 0x....      LDR.W    R3,??DataTable2_13  ;; 0x40026088
   \   00000258   0x4299             CMP      R1,R3
   \   0000025A   0xBF08             IT       EQ 
   \   0000025C   0x2240             MOVEQ    R2,#+64
   \   0000025E   0xD01E             BEQ.N    ??HAL_DMA_IRQHandler_14
   \   00000260   0x.... 0x....      LDR.W    R3,??DataTable2_14  ;; 0x400260a0
   \   00000264   0x4299             CMP      R1,R3
   \   00000266   0xBF14             ITE      NE 
   \   00000268   0xF44F 0x0280      MOVNE    R2,#+4194304
   \   0000026C   0xF44F 0x3280      MOVEQ    R2,#+65536
   \   00000270   0xE015             B.N      ??HAL_DMA_IRQHandler_14
   \                     ??HAL_DMA_IRQHandler_16: (+1)
   \   00000272   0x.... 0x....      LDR.W    R3,??DataTable2_15  ;; 0x40026010
   \   00000276   0x6800             LDR      R0,[R0, #+0]
   \   00000278   0x4299             CMP      R1,R3
   \   0000027A   0xBF08             IT       EQ 
   \   0000027C   0x.... 0x....      LDREQ.W  R2,??DataTable2_17  ;; 0x800001
   \   00000280   0xD00D             BEQ.N    ??HAL_DMA_IRQHandler_14
   \   00000282   0x.... 0x....      LDR.W    R3,??DataTable2_16  ;; 0x40026028
   \   00000286   0x4299             CMP      R1,R3
   \   00000288   0xBF08             IT       EQ 
   \   0000028A   0x2240             MOVEQ    R2,#+64
   \   0000028C   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_14
   \   0000028E   0x.... 0x....      LDR.W    R3,??DataTable2  ;; 0x40026040
   \   00000292   0x4299             CMP      R1,R3
   \   00000294   0xBF0C             ITE      EQ 
   \   00000296   0xF44F 0x3280      MOVEQ    R2,#+65536
   \   0000029A   0xF44F 0x0280      MOVNE    R2,#+4194304
   \                     ??HAL_DMA_IRQHandler_14: (+1)
   \   0000029E   0x4010             ANDS     R0,R2,R0
   \   000002A0   0xD07B             BEQ.N    ??HAL_DMA_IRQHandler_17
    706            {
    707              if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
   \   000002A2   0x6948             LDR      R0,[R1, #+20]
   \   000002A4   0x0600             LSLS     R0,R0,#+24
   \   000002A6   0xD578             BPL.N    ??HAL_DMA_IRQHandler_17
    708              {
    709                /* Disable the FIFO Error interrupt */
    710                __HAL_DMA_DISABLE_IT(hdma, DMA_IT_FE);
   \   000002A8   0x6948             LDR      R0,[R1, #+20]
   \   000002AA   0xF020 0x0080      BIC      R0,R0,#0x80
   \   000002AE   0x6148             STR      R0,[R1, #+20]
    711          
    712                /* Clear the FIFO error flag */
    713                __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_FE_FLAG_INDEX(hdma));
   \   000002B0   0x6820             LDR      R0,[R4, #+0]
   \   000002B2   0x4540             CMP      R0,R8
   \   000002B4   0xD314             BCC.N    ??HAL_DMA_IRQHandler_18
   \   000002B6   0x42B8             CMP      R0,R7
   \   000002B8   0xBF08             IT       EQ 
   \   000002BA   0x.... 0x....      LDREQ.W  R0,??DataTable2_17  ;; 0x800001
   \   000002BE   0xD00D             BEQ.N    ??HAL_DMA_IRQHandler_19
   \   000002C0   0x.... 0x....      LDR.W    R1,??DataTable2_5  ;; 0x40026488
   \   000002C4   0x4288             CMP      R0,R1
   \   000002C6   0xBF08             IT       EQ 
   \   000002C8   0x2040             MOVEQ    R0,#+64
   \   000002CA   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_19
   \   000002CC   0x.... 0x....      LDR.W    R1,??DataTable2_6  ;; 0x400264a0
   \   000002D0   0x4288             CMP      R0,R1
   \   000002D2   0xBF0C             ITE      EQ 
   \   000002D4   0xF44F 0x3080      MOVEQ    R0,#+65536
   \   000002D8   0xF44F 0x0080      MOVNE    R0,#+4194304
   \                     ??HAL_DMA_IRQHandler_19: (+1)
   \   000002DC   0x60E8             STR      R0,[R5, #+12]
   \   000002DE   0xE04D             B.N      ??HAL_DMA_IRQHandler_20
   \                     ??HAL_DMA_IRQHandler_18: (+1)
   \   000002E0   0x42B0             CMP      R0,R6
   \   000002E2   0xD316             BCC.N    ??HAL_DMA_IRQHandler_21
   \   000002E4   0x.... 0x....      LDR.W    R1,??DataTable2_7  ;; 0x40026410
   \   000002E8   0x4288             CMP      R0,R1
   \   000002EA   0xBF08             IT       EQ 
   \   000002EC   0x.... 0x....      LDREQ.W  R0,??DataTable2_17  ;; 0x800001
   \   000002F0   0xD00D             BEQ.N    ??HAL_DMA_IRQHandler_22
   \   000002F2   0x.... 0x....      LDR.W    R1,??DataTable2_8  ;; 0x40026428
   \   000002F6   0x4288             CMP      R0,R1
   \   000002F8   0xBF08             IT       EQ 
   \   000002FA   0x2040             MOVEQ    R0,#+64
   \   000002FC   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_22
   \   000002FE   0x.... 0x....      LDR.W    R1,??DataTable2_9  ;; 0x40026440
   \   00000302   0x4288             CMP      R0,R1
   \   00000304   0xBF0C             ITE      EQ 
   \   00000306   0xF44F 0x3080      MOVEQ    R0,#+65536
   \   0000030A   0xF44F 0x0080      MOVNE    R0,#+4194304
   \                     ??HAL_DMA_IRQHandler_22: (+1)
   \   0000030E   0x60A8             STR      R0,[R5, #+8]
   \   00000310   0xE034             B.N      ??HAL_DMA_IRQHandler_20
   \                     ??HAL_DMA_IRQHandler_21: (+1)
   \   00000312   0x.... 0x....      LDR.W    R1,??DataTable2_10  ;; 0x40026059
   \   00000316   0x4288             CMP      R0,R1
   \   00000318   0xD318             BCC.N    ??HAL_DMA_IRQHandler_23
   \   0000031A   0x.... 0x....      LDR.W    R1,??DataTable2_12  ;; 0x40026070
   \   0000031E   0x4288             CMP      R0,R1
   \   00000320   0xBF08             IT       EQ 
   \   00000322   0x.... 0x....      LDREQ.W  R0,??DataTable2_17  ;; 0x800001
   \   00000326   0xD00D             BEQ.N    ??HAL_DMA_IRQHandler_24
   \   00000328   0x.... 0x....      LDR.W    R1,??DataTable2_13  ;; 0x40026088
   \   0000032C   0x4288             CMP      R0,R1
   \   0000032E   0xBF08             IT       EQ 
   \   00000330   0x2040             MOVEQ    R0,#+64
   \   00000332   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_24
   \   00000334   0x.... 0x....      LDR.W    R1,??DataTable2_14  ;; 0x400260a0
   \   00000338   0x4288             CMP      R0,R1
   \   0000033A   0xBF0C             ITE      EQ 
   \   0000033C   0xF44F 0x3080      MOVEQ    R0,#+65536
   \   00000340   0xF44F 0x0080      MOVNE    R0,#+4194304
   \                     ??HAL_DMA_IRQHandler_24: (+1)
   \   00000344   0x.... 0x....      LDR.W    R1,??DataTable2_11  ;; 0x40026000
   \   00000348   0x60C8             STR      R0,[R1, #+12]
   \   0000034A   0xE017             B.N      ??HAL_DMA_IRQHandler_20
   \                     ??HAL_DMA_IRQHandler_23: (+1)
   \   0000034C   0x.... 0x....      LDR.W    R1,??DataTable2_15  ;; 0x40026010
   \   00000350   0x4288             CMP      R0,R1
   \   00000352   0xBF08             IT       EQ 
   \   00000354   0x.... 0x....      LDREQ.W  R0,??DataTable2_17  ;; 0x800001
   \   00000358   0xD00D             BEQ.N    ??HAL_DMA_IRQHandler_25
   \   0000035A   0x.... 0x....      LDR.W    R1,??DataTable2_16  ;; 0x40026028
   \   0000035E   0x4288             CMP      R0,R1
   \   00000360   0xBF08             IT       EQ 
   \   00000362   0x2040             MOVEQ    R0,#+64
   \   00000364   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_25
   \   00000366   0x.... 0x....      LDR.W    R1,??DataTable2  ;; 0x40026040
   \   0000036A   0x4288             CMP      R0,R1
   \   0000036C   0xBF0C             ITE      EQ 
   \   0000036E   0xF44F 0x3080      MOVEQ    R0,#+65536
   \   00000372   0xF44F 0x0080      MOVNE    R0,#+4194304
   \                     ??HAL_DMA_IRQHandler_25: (+1)
   \   00000376   0x.... 0x....      LDR.W    R1,??DataTable2_11  ;; 0x40026000
   \   0000037A   0x6088             STR      R0,[R1, #+8]
    714          
    715                /* Update error code */
    716                hdma->ErrorCode |= HAL_DMA_ERROR_FE;
   \                     ??HAL_DMA_IRQHandler_20: (+1)
   \   0000037C   0xF104 0x0034      ADD      R0,R4,#+52
   \   00000380   0x6981             LDR      R1,[R0, #+24]
   \   00000382   0xF041 0x0102      ORR      R1,R1,#0x2
   \   00000386   0x6181             STR      R1,[R0, #+24]
    717          
    718                /* Change the DMA state */
    719                hdma->State = HAL_DMA_STATE_ERROR;
   \   00000388   0x2104             MOVS     R1,#+4
   \   0000038A   0x7041             STRB     R1,[R0, #+1]
    720          
    721                /* Process Unlocked */
    722                __HAL_UNLOCK(hdma);
   \   0000038C   0x2100             MOVS     R1,#+0
   \   0000038E   0x7001             STRB     R1,[R0, #+0]
    723          
    724                if(hdma->XferErrorCallback != NULL)
   \   00000390   0x6941             LDR      R1,[R0, #+20]
   \   00000392   0x0008             MOVS     R0,R1
   \   00000394   0xBF1C             ITT      NE 
    725                {
    726                  /* Transfer error callback */
    727                  hdma->XferErrorCallback(hdma);
   \   00000396   0x4620             MOVNE    R0,R4
   \   00000398   0x4788             BLXNE    R1
    728                }
    729              }
    730            }
    731            /* Direct Mode Error Interrupt management ***********************************/
    732            if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_DME_FLAG_INDEX(hdma)) != RESET)
   \                     ??HAL_DMA_IRQHandler_17: (+1)
   \   0000039A   0x6821             LDR      R1,[R4, #+0]
   \   0000039C   0x4541             CMP      R1,R8
   \   0000039E   0xD315             BCC.N    ??HAL_DMA_IRQHandler_26
   \   000003A0   0x42B9             CMP      R1,R7
   \   000003A2   0x6868             LDR      R0,[R5, #+4]
   \   000003A4   0xBF08             IT       EQ 
   \   000003A6   0x.... 0x....      LDREQ.W  R2,??DataTable2_18  ;; 0x800004
   \   000003AA   0xD05E             BEQ.N    ??HAL_DMA_IRQHandler_27
   \   000003AC   0x.... 0x....      LDR.W    R3,??DataTable2_5  ;; 0x40026488
   \   000003B0   0x4299             CMP      R1,R3
   \   000003B2   0xBF08             IT       EQ 
   \   000003B4   0xF44F 0x7280      MOVEQ    R2,#+256
   \   000003B8   0xD057             BEQ.N    ??HAL_DMA_IRQHandler_27
   \   000003BA   0x.... 0x....      LDR.W    R3,??DataTable2_6  ;; 0x400264a0
   \   000003BE   0x4299             CMP      R1,R3
   \   000003C0   0xBF14             ITE      NE 
   \   000003C2   0xF04F 0x7280      MOVNE    R2,#+16777216
   \   000003C6   0xF44F 0x2280      MOVEQ    R2,#+262144
   \   000003CA   0xE04E             B.N      ??HAL_DMA_IRQHandler_27
   \                     ??HAL_DMA_IRQHandler_26: (+1)
   \   000003CC   0x42B1             CMP      R1,R6
   \   000003CE   0xD317             BCC.N    ??HAL_DMA_IRQHandler_28
   \   000003D0   0x.... 0x....      LDR.W    R3,??DataTable2_7  ;; 0x40026410
   \   000003D4   0x6828             LDR      R0,[R5, #+0]
   \   000003D6   0x4299             CMP      R1,R3
   \   000003D8   0xBF08             IT       EQ 
   \   000003DA   0x.... 0x....      LDREQ.W  R2,??DataTable2_18  ;; 0x800004
   \   000003DE   0xD044             BEQ.N    ??HAL_DMA_IRQHandler_27
   \   000003E0   0x.... 0x....      LDR.W    R3,??DataTable2_8  ;; 0x40026428
   \   000003E4   0x4299             CMP      R1,R3
   \   000003E6   0xBF08             IT       EQ 
   \   000003E8   0xF44F 0x7280      MOVEQ    R2,#+256
   \   000003EC   0xD03D             BEQ.N    ??HAL_DMA_IRQHandler_27
   \   000003EE   0x.... 0x....      LDR.W    R3,??DataTable2_9  ;; 0x40026440
   \   000003F2   0x4299             CMP      R1,R3
   \   000003F4   0xBF14             ITE      NE 
   \   000003F6   0xF04F 0x7280      MOVNE    R2,#+16777216
   \   000003FA   0xF44F 0x2280      MOVEQ    R2,#+262144
   \   000003FE   0xE034             B.N      ??HAL_DMA_IRQHandler_27
   \                     ??HAL_DMA_IRQHandler_28: (+1)
   \   00000400   0x.... 0x....      LDR.W    R3,??DataTable2_10  ;; 0x40026059
   \   00000404   0x.... 0x....      LDR.W    R0,??DataTable2_11  ;; 0x40026000
   \   00000408   0x4299             CMP      R1,R3
   \   0000040A   0xD317             BCC.N    ??HAL_DMA_IRQHandler_29
   \   0000040C   0x.... 0x....      LDR.W    R3,??DataTable2_12  ;; 0x40026070
   \   00000410   0x6840             LDR      R0,[R0, #+4]
   \   00000412   0x4299             CMP      R1,R3
   \   00000414   0xBF08             IT       EQ 
   \   00000416   0x.... 0x....      LDREQ.W  R2,??DataTable2_18  ;; 0x800004
   \   0000041A   0xD026             BEQ.N    ??HAL_DMA_IRQHandler_27
   \   0000041C   0x.... 0x....      LDR.W    R3,??DataTable2_13  ;; 0x40026088
   \   00000420   0x4299             CMP      R1,R3
   \   00000422   0xBF08             IT       EQ 
   \   00000424   0xF44F 0x7280      MOVEQ    R2,#+256
   \   00000428   0xD01F             BEQ.N    ??HAL_DMA_IRQHandler_27
   \   0000042A   0x.... 0x....      LDR.W    R3,??DataTable2_14  ;; 0x400260a0
   \   0000042E   0x4299             CMP      R1,R3
   \   00000430   0xBF14             ITE      NE 
   \   00000432   0xF04F 0x7280      MOVNE    R2,#+16777216
   \   00000436   0xF44F 0x2280      MOVEQ    R2,#+262144
   \   0000043A   0xE016             B.N      ??HAL_DMA_IRQHandler_27
   \                     ??HAL_DMA_IRQHandler_29: (+1)
   \   0000043C   0x.... 0x....      LDR.W    R3,??DataTable2_15  ;; 0x40026010
   \   00000440   0x6800             LDR      R0,[R0, #+0]
   \   00000442   0x4299             CMP      R1,R3
   \   00000444   0xBF08             IT       EQ 
   \   00000446   0x.... 0x....      LDREQ.W  R2,??DataTable2_18  ;; 0x800004
   \   0000044A   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_27
   \   0000044C   0x.... 0x....      LDR.W    R3,??DataTable2_16  ;; 0x40026028
   \   00000450   0x4299             CMP      R1,R3
   \   00000452   0xBF08             IT       EQ 
   \   00000454   0xF44F 0x7280      MOVEQ    R2,#+256
   \   00000458   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_27
   \   0000045A   0x.... 0x....      LDR.W    R3,??DataTable2  ;; 0x40026040
   \   0000045E   0x4299             CMP      R1,R3
   \   00000460   0xBF0C             ITE      EQ 
   \   00000462   0xF44F 0x2280      MOVEQ    R2,#+262144
   \   00000466   0xF04F 0x7280      MOVNE    R2,#+16777216
   \                     ??HAL_DMA_IRQHandler_27: (+1)
   \   0000046A   0x4010             ANDS     R0,R2,R0
   \   0000046C   0xF000 0x8080      BEQ.W    ??HAL_DMA_IRQHandler_30
    733            {
    734              if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
   \   00000470   0x6808             LDR      R0,[R1, #+0]
   \   00000472   0x0780             LSLS     R0,R0,#+30
   \   00000474   0xD57C             BPL.N    ??HAL_DMA_IRQHandler_30
    735              {
    736                /* Disable the direct mode Error interrupt */
    737                __HAL_DMA_DISABLE_IT(hdma, DMA_IT_DME);
   \   00000476   0x6808             LDR      R0,[R1, #+0]
   \   00000478   0xF020 0x0002      BIC      R0,R0,#0x2
   \   0000047C   0x6008             STR      R0,[R1, #+0]
    738          
    739                /* Clear the direct mode error flag */
    740                __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_DME_FLAG_INDEX(hdma));
   \   0000047E   0x6820             LDR      R0,[R4, #+0]
   \   00000480   0x4540             CMP      R0,R8
   \   00000482   0xD315             BCC.N    ??HAL_DMA_IRQHandler_31
   \   00000484   0x42B8             CMP      R0,R7
   \   00000486   0xBF08             IT       EQ 
   \   00000488   0x.... 0x....      LDREQ.W  R0,??DataTable2_18  ;; 0x800004
   \   0000048C   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_32
   \   0000048E   0x.... 0x....      LDR.W    R1,??DataTable2_5  ;; 0x40026488
   \   00000492   0x4288             CMP      R0,R1
   \   00000494   0xBF08             IT       EQ 
   \   00000496   0xF44F 0x7080      MOVEQ    R0,#+256
   \   0000049A   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_32
   \   0000049C   0x.... 0x....      LDR.W    R1,??DataTable2_6  ;; 0x400264a0
   \   000004A0   0x4288             CMP      R0,R1
   \   000004A2   0xBF0C             ITE      EQ 
   \   000004A4   0xF44F 0x2080      MOVEQ    R0,#+262144
   \   000004A8   0xF04F 0x7080      MOVNE    R0,#+16777216
   \                     ??HAL_DMA_IRQHandler_32: (+1)
   \   000004AC   0x60E8             STR      R0,[R5, #+12]
   \   000004AE   0xE050             B.N      ??HAL_DMA_IRQHandler_33
   \                     ??HAL_DMA_IRQHandler_31: (+1)
   \   000004B0   0x42B0             CMP      R0,R6
   \   000004B2   0xD317             BCC.N    ??HAL_DMA_IRQHandler_34
   \   000004B4   0x.... 0x....      LDR.W    R1,??DataTable2_7  ;; 0x40026410
   \   000004B8   0x4288             CMP      R0,R1
   \   000004BA   0xBF08             IT       EQ 
   \   000004BC   0x.... 0x....      LDREQ.W  R0,??DataTable2_18  ;; 0x800004
   \   000004C0   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_35
   \   000004C2   0x.... 0x....      LDR.W    R1,??DataTable2_8  ;; 0x40026428
   \   000004C6   0x4288             CMP      R0,R1
   \   000004C8   0xBF08             IT       EQ 
   \   000004CA   0xF44F 0x7080      MOVEQ    R0,#+256
   \   000004CE   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_35
   \   000004D0   0x.... 0x....      LDR.W    R1,??DataTable2_9  ;; 0x40026440
   \   000004D4   0x4288             CMP      R0,R1
   \   000004D6   0xBF0C             ITE      EQ 
   \   000004D8   0xF44F 0x2080      MOVEQ    R0,#+262144
   \   000004DC   0xF04F 0x7080      MOVNE    R0,#+16777216
   \                     ??HAL_DMA_IRQHandler_35: (+1)
   \   000004E0   0x60A8             STR      R0,[R5, #+8]
   \   000004E2   0xE036             B.N      ??HAL_DMA_IRQHandler_33
   \                     ??HAL_DMA_IRQHandler_34: (+1)
   \   000004E4   0x.... 0x....      LDR.W    R1,??DataTable2_10  ;; 0x40026059
   \   000004E8   0x4288             CMP      R0,R1
   \   000004EA   0xD319             BCC.N    ??HAL_DMA_IRQHandler_36
   \   000004EC   0x.... 0x....      LDR.W    R1,??DataTable2_12  ;; 0x40026070
   \   000004F0   0x4288             CMP      R0,R1
   \   000004F2   0xBF08             IT       EQ 
   \   000004F4   0x.... 0x....      LDREQ.W  R0,??DataTable2_18  ;; 0x800004
   \   000004F8   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_37
   \   000004FA   0x.... 0x....      LDR.W    R1,??DataTable2_13  ;; 0x40026088
   \   000004FE   0x4288             CMP      R0,R1
   \   00000500   0xBF08             IT       EQ 
   \   00000502   0xF44F 0x7080      MOVEQ    R0,#+256
   \   00000506   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_37
   \   00000508   0x.... 0x....      LDR.W    R1,??DataTable2_14  ;; 0x400260a0
   \   0000050C   0x4288             CMP      R0,R1
   \   0000050E   0xBF0C             ITE      EQ 
   \   00000510   0xF44F 0x2080      MOVEQ    R0,#+262144
   \   00000514   0xF04F 0x7080      MOVNE    R0,#+16777216
   \                     ??HAL_DMA_IRQHandler_37: (+1)
   \   00000518   0x.... 0x....      LDR.W    R1,??DataTable2_11  ;; 0x40026000
   \   0000051C   0x60C8             STR      R0,[R1, #+12]
   \   0000051E   0xE018             B.N      ??HAL_DMA_IRQHandler_33
   \                     ??HAL_DMA_IRQHandler_36: (+1)
   \   00000520   0x.... 0x....      LDR.W    R1,??DataTable2_15  ;; 0x40026010
   \   00000524   0x4288             CMP      R0,R1
   \   00000526   0xBF08             IT       EQ 
   \   00000528   0x.... 0x....      LDREQ.W  R0,??DataTable2_18  ;; 0x800004
   \   0000052C   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_38
   \   0000052E   0x.... 0x....      LDR.W    R1,??DataTable2_16  ;; 0x40026028
   \   00000532   0x4288             CMP      R0,R1
   \   00000534   0xBF08             IT       EQ 
   \   00000536   0xF44F 0x7080      MOVEQ    R0,#+256
   \   0000053A   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_38
   \   0000053C   0x.... 0x....      LDR.W    R1,??DataTable2  ;; 0x40026040
   \   00000540   0x4288             CMP      R0,R1
   \   00000542   0xBF0C             ITE      EQ 
   \   00000544   0xF44F 0x2080      MOVEQ    R0,#+262144
   \   00000548   0xF04F 0x7080      MOVNE    R0,#+16777216
   \                     ??HAL_DMA_IRQHandler_38: (+1)
   \   0000054C   0x.... 0x....      LDR.W    R1,??DataTable2_11  ;; 0x40026000
   \   00000550   0x6088             STR      R0,[R1, #+8]
    741          
    742                /* Update error code */
    743                hdma->ErrorCode |= HAL_DMA_ERROR_DME;
   \                     ??HAL_DMA_IRQHandler_33: (+1)
   \   00000552   0xF104 0x0034      ADD      R0,R4,#+52
   \   00000556   0x6981             LDR      R1,[R0, #+24]
   \   00000558   0xF041 0x0104      ORR      R1,R1,#0x4
   \   0000055C   0x6181             STR      R1,[R0, #+24]
    744          
    745                /* Change the DMA state */
    746                hdma->State = HAL_DMA_STATE_ERROR;
   \   0000055E   0x2104             MOVS     R1,#+4
   \   00000560   0x7041             STRB     R1,[R0, #+1]
    747          
    748                /* Process Unlocked */
    749                __HAL_UNLOCK(hdma);
   \   00000562   0x2100             MOVS     R1,#+0
   \   00000564   0x7001             STRB     R1,[R0, #+0]
    750          
    751                if(hdma->XferErrorCallback != NULL)
   \   00000566   0x6941             LDR      R1,[R0, #+20]
   \   00000568   0x0008             MOVS     R0,R1
   \   0000056A   0xBF1C             ITT      NE 
    752                {
    753                  /* Transfer error callback */
    754                  hdma->XferErrorCallback(hdma);
   \   0000056C   0x4620             MOVNE    R0,R4
   \   0000056E   0x4788             BLXNE    R1
    755                }
    756              }
    757            }
    758            /* Half Transfer Complete Interrupt management ******************************/
    759            if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma)) != RESET)
   \                     ??HAL_DMA_IRQHandler_30: (+1)
   \   00000570   0x6821             LDR      R1,[R4, #+0]
   \   00000572   0x460A             MOV      R2,R1
   \   00000574   0x4542             CMP      R2,R8
   \   00000576   0xD314             BCC.N    ??HAL_DMA_IRQHandler_39
   \   00000578   0x42BA             CMP      R2,R7
   \   0000057A   0x6868             LDR      R0,[R5, #+4]
   \   0000057C   0xBF08             IT       EQ 
   \   0000057E   0x2310             MOVEQ    R3,#+16
   \   00000580   0xD05B             BEQ.N    ??HAL_DMA_IRQHandler_40
   \   00000582   0x.... 0x....      LDR.W    R3,??DataTable2_5  ;; 0x40026488
   \   00000586   0x429A             CMP      R2,R3
   \   00000588   0xBF08             IT       EQ 
   \   0000058A   0xF44F 0x6380      MOVEQ    R3,#+1024
   \   0000058E   0xD054             BEQ.N    ??HAL_DMA_IRQHandler_40
   \   00000590   0x.... 0x....      LDR.W    R3,??DataTable2_6  ;; 0x400264a0
   \   00000594   0x429A             CMP      R2,R3
   \   00000596   0xBF14             ITE      NE 
   \   00000598   0xF04F 0x6380      MOVNE    R3,#+67108864
   \   0000059C   0xF44F 0x1380      MOVEQ    R3,#+1048576
   \   000005A0   0xE04B             B.N      ??HAL_DMA_IRQHandler_40
   \                     ??HAL_DMA_IRQHandler_39: (+1)
   \   000005A2   0x42B2             CMP      R2,R6
   \   000005A4   0xD316             BCC.N    ??HAL_DMA_IRQHandler_41
   \   000005A6   0x.... 0x....      LDR.W    R3,??DataTable2_7  ;; 0x40026410
   \   000005AA   0x6828             LDR      R0,[R5, #+0]
   \   000005AC   0x429A             CMP      R2,R3
   \   000005AE   0xBF08             IT       EQ 
   \   000005B0   0x2310             MOVEQ    R3,#+16
   \   000005B2   0xD042             BEQ.N    ??HAL_DMA_IRQHandler_40
   \   000005B4   0x.... 0x....      LDR.W    R3,??DataTable2_8  ;; 0x40026428
   \   000005B8   0x429A             CMP      R2,R3
   \   000005BA   0xBF08             IT       EQ 
   \   000005BC   0xF44F 0x6380      MOVEQ    R3,#+1024
   \   000005C0   0xD03B             BEQ.N    ??HAL_DMA_IRQHandler_40
   \   000005C2   0x.... 0x....      LDR.W    R3,??DataTable2_9  ;; 0x40026440
   \   000005C6   0x429A             CMP      R2,R3
   \   000005C8   0xBF14             ITE      NE 
   \   000005CA   0xF04F 0x6380      MOVNE    R3,#+67108864
   \   000005CE   0xF44F 0x1380      MOVEQ    R3,#+1048576
   \   000005D2   0xE032             B.N      ??HAL_DMA_IRQHandler_40
   \                     ??HAL_DMA_IRQHandler_41: (+1)
   \   000005D4   0x.... 0x....      LDR.W    R3,??DataTable2_10  ;; 0x40026059
   \   000005D8   0x.... 0x....      LDR.W    R0,??DataTable2_11  ;; 0x40026000
   \   000005DC   0x429A             CMP      R2,R3
   \   000005DE   0xD316             BCC.N    ??HAL_DMA_IRQHandler_42
   \   000005E0   0x.... 0x....      LDR.W    R3,??DataTable2_12  ;; 0x40026070
   \   000005E4   0x6840             LDR      R0,[R0, #+4]
   \   000005E6   0x429A             CMP      R2,R3
   \   000005E8   0xBF08             IT       EQ 
   \   000005EA   0x2310             MOVEQ    R3,#+16
   \   000005EC   0xD025             BEQ.N    ??HAL_DMA_IRQHandler_40
   \   000005EE   0x.... 0x....      LDR.W    R3,??DataTable2_13  ;; 0x40026088
   \   000005F2   0x429A             CMP      R2,R3
   \   000005F4   0xBF08             IT       EQ 
   \   000005F6   0xF44F 0x6380      MOVEQ    R3,#+1024
   \   000005FA   0xD01E             BEQ.N    ??HAL_DMA_IRQHandler_40
   \   000005FC   0x.... 0x....      LDR.W    R3,??DataTable2_14  ;; 0x400260a0
   \   00000600   0x429A             CMP      R2,R3
   \   00000602   0xBF14             ITE      NE 
   \   00000604   0xF04F 0x6380      MOVNE    R3,#+67108864
   \   00000608   0xF44F 0x1380      MOVEQ    R3,#+1048576
   \   0000060C   0xE015             B.N      ??HAL_DMA_IRQHandler_40
   \                     ??HAL_DMA_IRQHandler_42: (+1)
   \   0000060E   0x.... 0x....      LDR.W    R3,??DataTable2_15  ;; 0x40026010
   \   00000612   0x6800             LDR      R0,[R0, #+0]
   \   00000614   0x429A             CMP      R2,R3
   \   00000616   0xBF08             IT       EQ 
   \   00000618   0x2310             MOVEQ    R3,#+16
   \   0000061A   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_40
   \   0000061C   0x.... 0x....      LDR.W    R3,??DataTable2_16  ;; 0x40026028
   \   00000620   0x429A             CMP      R2,R3
   \   00000622   0xBF08             IT       EQ 
   \   00000624   0xF44F 0x6380      MOVEQ    R3,#+1024
   \   00000628   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_40
   \   0000062A   0x.... 0x....      LDR.W    R3,??DataTable2  ;; 0x40026040
   \   0000062E   0x429A             CMP      R2,R3
   \   00000630   0xBF0C             ITE      EQ 
   \   00000632   0xF44F 0x1380      MOVEQ    R3,#+1048576
   \   00000636   0xF04F 0x6380      MOVNE    R3,#+67108864
   \                     ??HAL_DMA_IRQHandler_40: (+1)
   \   0000063A   0x4018             ANDS     R0,R3,R0
   \   0000063C   0xF000 0x80E1      BEQ.W    ??HAL_DMA_IRQHandler_43
    760            {
    761              if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
   \   00000640   0x6808             LDR      R0,[R1, #+0]
   \   00000642   0x0700             LSLS     R0,R0,#+28
   \   00000644   0xF140 0x80DD      BPL.W    ??HAL_DMA_IRQHandler_43
    762              { 
    763                /* Multi_Buffering mode enabled */
    764                if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != 0)
   \   00000648   0x680B             LDR      R3,[R1, #+0]
   \   0000064A   0xF104 0x0034      ADD      R0,R4,#+52
   \   0000064E   0x035B             LSLS     R3,R3,#+13
   \   00000650   0xD56D             BPL.N    ??HAL_DMA_IRQHandler_44
    765                {
    766                  /* Clear the half transfer complete flag */
    767                  __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
   \   00000652   0x4542             CMP      R2,R8
   \   00000654   0xD314             BCC.N    ??HAL_DMA_IRQHandler_45
   \   00000656   0x42BA             CMP      R2,R7
   \   00000658   0xBF08             IT       EQ 
   \   0000065A   0x2110             MOVEQ    R1,#+16
   \   0000065C   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_46
   \   0000065E   0x.... 0x....      LDR.W    R1,??DataTable2_5  ;; 0x40026488
   \   00000662   0x428A             CMP      R2,R1
   \   00000664   0xBF08             IT       EQ 
   \   00000666   0xF44F 0x6180      MOVEQ    R1,#+1024
   \   0000066A   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_46
   \   0000066C   0x.... 0x....      LDR.W    R1,??DataTable2_6  ;; 0x400264a0
   \   00000670   0x428A             CMP      R2,R1
   \   00000672   0xBF0C             ITE      EQ 
   \   00000674   0xF44F 0x1180      MOVEQ    R1,#+1048576
   \   00000678   0xF04F 0x6180      MOVNE    R1,#+67108864
   \                     ??HAL_DMA_IRQHandler_46: (+1)
   \   0000067C   0x60E9             STR      R1,[R5, #+12]
   \   0000067E   0xE04D             B.N      ??HAL_DMA_IRQHandler_47
   \                     ??HAL_DMA_IRQHandler_45: (+1)
   \   00000680   0x42B2             CMP      R2,R6
   \   00000682   0xD316             BCC.N    ??HAL_DMA_IRQHandler_48
   \   00000684   0x.... 0x....      LDR.W    R1,??DataTable2_7  ;; 0x40026410
   \   00000688   0x428A             CMP      R2,R1
   \   0000068A   0xBF08             IT       EQ 
   \   0000068C   0x2110             MOVEQ    R1,#+16
   \   0000068E   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_49
   \   00000690   0x.... 0x....      LDR.W    R1,??DataTable2_8  ;; 0x40026428
   \   00000694   0x428A             CMP      R2,R1
   \   00000696   0xBF08             IT       EQ 
   \   00000698   0xF44F 0x6180      MOVEQ    R1,#+1024
   \   0000069C   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_49
   \   0000069E   0x.... 0x....      LDR.W    R1,??DataTable2_9  ;; 0x40026440
   \   000006A2   0x428A             CMP      R2,R1
   \   000006A4   0xBF0C             ITE      EQ 
   \   000006A6   0xF44F 0x1180      MOVEQ    R1,#+1048576
   \   000006AA   0xF04F 0x6180      MOVNE    R1,#+67108864
   \                     ??HAL_DMA_IRQHandler_49: (+1)
   \   000006AE   0x60A9             STR      R1,[R5, #+8]
   \   000006B0   0xE034             B.N      ??HAL_DMA_IRQHandler_47
   \                     ??HAL_DMA_IRQHandler_48: (+1)
   \   000006B2   0x.... 0x....      LDR.W    R1,??DataTable2_10  ;; 0x40026059
   \   000006B6   0x428A             CMP      R2,R1
   \   000006B8   0xD318             BCC.N    ??HAL_DMA_IRQHandler_50
   \   000006BA   0x.... 0x....      LDR.W    R1,??DataTable2_12  ;; 0x40026070
   \   000006BE   0x428A             CMP      R2,R1
   \   000006C0   0xBF08             IT       EQ 
   \   000006C2   0x2110             MOVEQ    R1,#+16
   \   000006C4   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_51
   \   000006C6   0x.... 0x....      LDR.W    R1,??DataTable2_13  ;; 0x40026088
   \   000006CA   0x428A             CMP      R2,R1
   \   000006CC   0xBF08             IT       EQ 
   \   000006CE   0xF44F 0x6180      MOVEQ    R1,#+1024
   \   000006D2   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_51
   \   000006D4   0x.... 0x....      LDR.W    R1,??DataTable2_14  ;; 0x400260a0
   \   000006D8   0x428A             CMP      R2,R1
   \   000006DA   0xBF0C             ITE      EQ 
   \   000006DC   0xF44F 0x1180      MOVEQ    R1,#+1048576
   \   000006E0   0xF04F 0x6180      MOVNE    R1,#+67108864
   \                     ??HAL_DMA_IRQHandler_51: (+1)
   \   000006E4   0x.... 0x....      LDR.W    R2,??DataTable2_11  ;; 0x40026000
   \   000006E8   0x60D1             STR      R1,[R2, #+12]
   \   000006EA   0xE017             B.N      ??HAL_DMA_IRQHandler_47
   \                     ??HAL_DMA_IRQHandler_50: (+1)
   \   000006EC   0x.... 0x....      LDR.W    R1,??DataTable2_15  ;; 0x40026010
   \   000006F0   0x428A             CMP      R2,R1
   \   000006F2   0xBF08             IT       EQ 
   \   000006F4   0x2110             MOVEQ    R1,#+16
   \   000006F6   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_52
   \   000006F8   0x.... 0x....      LDR.W    R1,??DataTable2_16  ;; 0x40026028
   \   000006FC   0x428A             CMP      R2,R1
   \   000006FE   0xBF08             IT       EQ 
   \   00000700   0xF44F 0x6180      MOVEQ    R1,#+1024
   \   00000704   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_52
   \   00000706   0x.... 0x....      LDR.W    R1,??DataTable2  ;; 0x40026040
   \   0000070A   0x428A             CMP      R2,R1
   \   0000070C   0xBF0C             ITE      EQ 
   \   0000070E   0xF44F 0x1180      MOVEQ    R1,#+1048576
   \   00000712   0xF04F 0x6180      MOVNE    R1,#+67108864
   \                     ??HAL_DMA_IRQHandler_52: (+1)
   \   00000716   0x.... 0x....      LDR.W    R2,??DataTable2_11  ;; 0x40026000
   \   0000071A   0x6091             STR      R1,[R2, #+8]
    768          
    769                  /* Current memory buffer used is Memory 0 */
    770                  if((hdma->Instance->CR & DMA_SxCR_CT) == 0)
   \                     ??HAL_DMA_IRQHandler_47: (+1)
   \   0000071C   0x6821             LDR      R1,[R4, #+0]
   \   0000071E   0x680A             LDR      R2,[R1, #+0]
   \   00000720   0x0312             LSLS     R2,R2,#+12
   \   00000722   0xD567             BPL.N    ??HAL_DMA_IRQHandler_53
    771                  {
    772                    /* Change DMA peripheral state */
    773                    hdma->State = HAL_DMA_STATE_READY_HALF_MEM0;
    774                  }
    775                  /* Current memory buffer used is Memory 1 */
    776                  else if((hdma->Instance->CR & DMA_SxCR_CT) != 0)
   \   00000724   0x6809             LDR      R1,[R1, #+0]
   \   00000726   0x0309             LSLS     R1,R1,#+12
   \   00000728   0xD566             BPL.N    ??HAL_DMA_IRQHandler_54
    777                  {
    778                    /* Change DMA peripheral state */
    779                    hdma->State = HAL_DMA_STATE_READY_HALF_MEM1;
   \   0000072A   0x2141             MOVS     R1,#+65
   \   0000072C   0xE063             B.N      ??HAL_DMA_IRQHandler_55
    780                  }
    781                }
    782                else
    783                {
    784                  /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
    785                  if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0)
   \                     ??HAL_DMA_IRQHandler_44: (+1)
   \   0000072E   0x680A             LDR      R2,[R1, #+0]
   \   00000730   0x05D2             LSLS     R2,R2,#+23
   \   00000732   0xD403             BMI.N    ??HAL_DMA_IRQHandler_56
    786                  {
    787                    /* Disable the half transfer interrupt */
    788                    __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
   \   00000734   0x680A             LDR      R2,[R1, #+0]
   \   00000736   0xF022 0x0208      BIC      R2,R2,#0x8
   \   0000073A   0x600A             STR      R2,[R1, #+0]
    789                  }
    790                  /* Clear the half transfer complete flag */
    791                  __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
   \                     ??HAL_DMA_IRQHandler_56: (+1)
   \   0000073C   0x6821             LDR      R1,[R4, #+0]
   \   0000073E   0x4541             CMP      R1,R8
   \   00000740   0xD314             BCC.N    ??HAL_DMA_IRQHandler_57
   \   00000742   0x42B9             CMP      R1,R7
   \   00000744   0xBF08             IT       EQ 
   \   00000746   0x2110             MOVEQ    R1,#+16
   \   00000748   0xD00E             BEQ.N    ??HAL_DMA_IRQHandler_58
   \   0000074A   0x.... 0x....      LDR.W    R2,??DataTable2_5  ;; 0x40026488
   \   0000074E   0x4291             CMP      R1,R2
   \   00000750   0xBF08             IT       EQ 
   \   00000752   0xF44F 0x6180      MOVEQ    R1,#+1024
   \   00000756   0xD007             BEQ.N    ??HAL_DMA_IRQHandler_58
   \   00000758   0x.... 0x....      LDR.W    R2,??DataTable2_6  ;; 0x400264a0
   \   0000075C   0x4291             CMP      R1,R2
   \   0000075E   0xBF0C             ITE      EQ 
   \   00000760   0xF44F 0x1180      MOVEQ    R1,#+1048576
   \   00000764   0xF04F 0x6180      MOVNE    R1,#+67108864
   \                     ??HAL_DMA_IRQHandler_58: (+1)
   \   00000768   0x60E9             STR      R1,[R5, #+12]
   \   0000076A   0xE043             B.N      ??HAL_DMA_IRQHandler_53
   \                     ??HAL_DMA_IRQHandler_57: (+1)
   \   0000076C   0x42B1             CMP      R1,R6
   \   0000076E   0xD315             BCC.N    ??HAL_DMA_IRQHandler_59
   \   00000770   0x.... 0x....      LDR.W    R2,??DataTable2_7  ;; 0x40026410
   \   00000774   0x4291             CMP      R1,R2
   \   00000776   0xBF08             IT       EQ 
   \   00000778   0x2110             MOVEQ    R1,#+16
   \   0000077A   0xD00D             BEQ.N    ??HAL_DMA_IRQHandler_60
   \   0000077C   0x.... 0x....      LDR.W    R2,??DataTable2_8  ;; 0x40026428
   \   00000780   0x4291             CMP      R1,R2
   \   00000782   0xBF08             IT       EQ 
   \   00000784   0xF44F 0x6180      MOVEQ    R1,#+1024
   \   00000788   0xD006             BEQ.N    ??HAL_DMA_IRQHandler_60
   \   0000078A   0x....             LDR.N    R2,??DataTable2_9  ;; 0x40026440
   \   0000078C   0x4291             CMP      R1,R2
   \   0000078E   0xBF0C             ITE      EQ 
   \   00000790   0xF44F 0x1180      MOVEQ    R1,#+1048576
   \   00000794   0xF04F 0x6180      MOVNE    R1,#+67108864
   \                     ??HAL_DMA_IRQHandler_60: (+1)
   \   00000798   0x60A9             STR      R1,[R5, #+8]
   \   0000079A   0xE02B             B.N      ??HAL_DMA_IRQHandler_53
   \                     ??HAL_DMA_IRQHandler_59: (+1)
   \   0000079C   0x....             LDR.N    R2,??DataTable2_10  ;; 0x40026059
   \   0000079E   0x4291             CMP      R1,R2
   \   000007A0   0xD314             BCC.N    ??HAL_DMA_IRQHandler_61
   \   000007A2   0x....             LDR.N    R2,??DataTable2_12  ;; 0x40026070
   \   000007A4   0x4291             CMP      R1,R2
   \   000007A6   0xBF08             IT       EQ 
   \   000007A8   0x2110             MOVEQ    R1,#+16
   \   000007AA   0xD00C             BEQ.N    ??HAL_DMA_IRQHandler_62
   \   000007AC   0x....             LDR.N    R2,??DataTable2_13  ;; 0x40026088
   \   000007AE   0x4291             CMP      R1,R2
   \   000007B0   0xBF08             IT       EQ 
   \   000007B2   0xF44F 0x6180      MOVEQ    R1,#+1024
   \   000007B6   0xD006             BEQ.N    ??HAL_DMA_IRQHandler_62
   \   000007B8   0x....             LDR.N    R2,??DataTable2_14  ;; 0x400260a0
   \   000007BA   0x4291             CMP      R1,R2
   \   000007BC   0xBF0C             ITE      EQ 
   \   000007BE   0xF44F 0x1180      MOVEQ    R1,#+1048576
   \   000007C2   0xF04F 0x6180      MOVNE    R1,#+67108864
   \                     ??HAL_DMA_IRQHandler_62: (+1)
   \   000007C6   0x....             LDR.N    R2,??DataTable2_11  ;; 0x40026000
   \   000007C8   0x60D1             STR      R1,[R2, #+12]
   \   000007CA   0xE013             B.N      ??HAL_DMA_IRQHandler_53
   \                     ??HAL_DMA_IRQHandler_61: (+1)
   \   000007CC   0x....             LDR.N    R2,??DataTable2_15  ;; 0x40026010
   \   000007CE   0x4291             CMP      R1,R2
   \   000007D0   0xBF08             IT       EQ 
   \   000007D2   0x2110             MOVEQ    R1,#+16
   \   000007D4   0xD00C             BEQ.N    ??HAL_DMA_IRQHandler_63
   \   000007D6   0x....             LDR.N    R2,??DataTable2_16  ;; 0x40026028
   \   000007D8   0x4291             CMP      R1,R2
   \   000007DA   0xBF08             IT       EQ 
   \   000007DC   0xF44F 0x6180      MOVEQ    R1,#+1024
   \   000007E0   0xD006             BEQ.N    ??HAL_DMA_IRQHandler_63
   \   000007E2   0x....             LDR.N    R2,??DataTable2  ;; 0x40026040
   \   000007E4   0x4291             CMP      R1,R2
   \   000007E6   0xBF0C             ITE      EQ 
   \   000007E8   0xF44F 0x1180      MOVEQ    R1,#+1048576
   \   000007EC   0xF04F 0x6180      MOVNE    R1,#+67108864
   \                     ??HAL_DMA_IRQHandler_63: (+1)
   \   000007F0   0x....             LDR.N    R2,??DataTable2_11  ;; 0x40026000
   \   000007F2   0x6091             STR      R1,[R2, #+8]
    792          
    793                  /* Change DMA peripheral state */
    794                  hdma->State = HAL_DMA_STATE_READY_HALF_MEM0;
   \                     ??HAL_DMA_IRQHandler_53: (+1)
   \   000007F4   0x2131             MOVS     R1,#+49
   \                     ??HAL_DMA_IRQHandler_55: (+1)
   \   000007F6   0x7041             STRB     R1,[R0, #+1]
    795                }
    796          
    797                if(hdma->XferHalfCpltCallback != NULL)
   \                     ??HAL_DMA_IRQHandler_54: (+1)
   \   000007F8   0x68C1             LDR      R1,[R0, #+12]
   \   000007FA   0x0008             MOVS     R0,R1
   \   000007FC   0xBF1C             ITT      NE 
    798                {
    799                  /* Half transfer callback */
    800                  hdma->XferHalfCpltCallback(hdma);
   \   000007FE   0x4620             MOVNE    R0,R4
   \   00000800   0x4788             BLXNE    R1
    801                }
    802              }
    803            }
    804            /* Transfer Complete Interrupt management ***********************************/
    805            if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma)) != RESET)
   \                     ??HAL_DMA_IRQHandler_43: (+1)
   \   00000802   0x6821             LDR      R1,[R4, #+0]
   \   00000804   0x4541             CMP      R1,R8
   \   00000806   0xD312             BCC.N    ??HAL_DMA_IRQHandler_64
   \   00000808   0x42B9             CMP      R1,R7
   \   0000080A   0x6868             LDR      R0,[R5, #+4]
   \   0000080C   0xBF08             IT       EQ 
   \   0000080E   0x2320             MOVEQ    R3,#+32
   \   00000810   0xD04E             BEQ.N    ??HAL_DMA_IRQHandler_65
   \   00000812   0x....             LDR.N    R3,??DataTable2_5  ;; 0x40026488
   \   00000814   0x4299             CMP      R1,R3
   \   00000816   0xBF08             IT       EQ 
   \   00000818   0xF44F 0x6300      MOVEQ    R3,#+2048
   \   0000081C   0xD048             BEQ.N    ??HAL_DMA_IRQHandler_65
   \   0000081E   0x....             LDR.N    R3,??DataTable2_6  ;; 0x400264a0
   \   00000820   0x4299             CMP      R1,R3
   \   00000822   0xBF14             ITE      NE 
   \   00000824   0xF04F 0x6300      MOVNE    R3,#+134217728
   \   00000828   0xF44F 0x1300      MOVEQ    R3,#+2097152
   \   0000082C   0xE040             B.N      ??HAL_DMA_IRQHandler_65
   \                     ??HAL_DMA_IRQHandler_64: (+1)
   \   0000082E   0x42B1             CMP      R1,R6
   \   00000830   0xD313             BCC.N    ??HAL_DMA_IRQHandler_66
   \   00000832   0x....             LDR.N    R3,??DataTable2_7  ;; 0x40026410
   \   00000834   0x6828             LDR      R0,[R5, #+0]
   \   00000836   0x4299             CMP      R1,R3
   \   00000838   0xBF08             IT       EQ 
   \   0000083A   0x2320             MOVEQ    R3,#+32
   \   0000083C   0xD038             BEQ.N    ??HAL_DMA_IRQHandler_65
   \   0000083E   0x....             LDR.N    R3,??DataTable2_8  ;; 0x40026428
   \   00000840   0x4299             CMP      R1,R3
   \   00000842   0xBF08             IT       EQ 
   \   00000844   0xF44F 0x6300      MOVEQ    R3,#+2048
   \   00000848   0xD032             BEQ.N    ??HAL_DMA_IRQHandler_65
   \   0000084A   0x....             LDR.N    R3,??DataTable2_9  ;; 0x40026440
   \   0000084C   0x4299             CMP      R1,R3
   \   0000084E   0xBF14             ITE      NE 
   \   00000850   0xF04F 0x6300      MOVNE    R3,#+134217728
   \   00000854   0xF44F 0x1300      MOVEQ    R3,#+2097152
   \   00000858   0xE02A             B.N      ??HAL_DMA_IRQHandler_65
   \                     ??HAL_DMA_IRQHandler_66: (+1)
   \   0000085A   0x....             LDR.N    R3,??DataTable2_10  ;; 0x40026059
   \   0000085C   0x....             LDR.N    R0,??DataTable2_11  ;; 0x40026000
   \   0000085E   0x4299             CMP      R1,R3
   \   00000860   0xD313             BCC.N    ??HAL_DMA_IRQHandler_67
   \   00000862   0x....             LDR.N    R3,??DataTable2_12  ;; 0x40026070
   \   00000864   0x6840             LDR      R0,[R0, #+4]
   \   00000866   0x4299             CMP      R1,R3
   \   00000868   0xBF08             IT       EQ 
   \   0000086A   0x2320             MOVEQ    R3,#+32
   \   0000086C   0xD020             BEQ.N    ??HAL_DMA_IRQHandler_65
   \   0000086E   0x....             LDR.N    R3,??DataTable2_13  ;; 0x40026088
   \   00000870   0x4299             CMP      R1,R3
   \   00000872   0xBF08             IT       EQ 
   \   00000874   0xF44F 0x6300      MOVEQ    R3,#+2048
   \   00000878   0xD01A             BEQ.N    ??HAL_DMA_IRQHandler_65
   \   0000087A   0x....             LDR.N    R3,??DataTable2_14  ;; 0x400260a0
   \   0000087C   0x4299             CMP      R1,R3
   \   0000087E   0xBF14             ITE      NE 
   \   00000880   0xF04F 0x6300      MOVNE    R3,#+134217728
   \   00000884   0xF44F 0x1300      MOVEQ    R3,#+2097152
   \   00000888   0xE012             B.N      ??HAL_DMA_IRQHandler_65
   \                     ??HAL_DMA_IRQHandler_67: (+1)
   \   0000088A   0x....             LDR.N    R3,??DataTable2_15  ;; 0x40026010
   \   0000088C   0x6800             LDR      R0,[R0, #+0]
   \   0000088E   0x4299             CMP      R1,R3
   \   00000890   0xBF08             IT       EQ 
   \   00000892   0x2320             MOVEQ    R3,#+32
   \   00000894   0xD00C             BEQ.N    ??HAL_DMA_IRQHandler_65
   \   00000896   0x....             LDR.N    R3,??DataTable2_16  ;; 0x40026028
   \   00000898   0x4299             CMP      R1,R3
   \   0000089A   0xBF08             IT       EQ 
   \   0000089C   0xF44F 0x6300      MOVEQ    R3,#+2048
   \   000008A0   0xD006             BEQ.N    ??HAL_DMA_IRQHandler_65
   \   000008A2   0x....             LDR.N    R3,??DataTable2  ;; 0x40026040
   \   000008A4   0x4299             CMP      R1,R3
   \   000008A6   0xBF0C             ITE      EQ 
   \   000008A8   0xF44F 0x1300      MOVEQ    R3,#+2097152
   \   000008AC   0xF04F 0x6300      MOVNE    R3,#+134217728
   \                     ??HAL_DMA_IRQHandler_65: (+1)
   \   000008B0   0x4018             ANDS     R0,R3,R0
   \   000008B2   0xF000 0x80DF      BEQ.W    ??HAL_DMA_IRQHandler_68
    806            {
    807              if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
   \   000008B6   0x6808             LDR      R0,[R1, #+0]
   \   000008B8   0x06C0             LSLS     R0,R0,#+27
   \   000008BA   0xF140 0x80DB      BPL.W    ??HAL_DMA_IRQHandler_68
    808              {
    809                if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != 0)
   \   000008BE   0x6808             LDR      R0,[R1, #+0]
   \   000008C0   0x0340             LSLS     R0,R0,#+13
   \   000008C2   0xD569             BPL.N    ??HAL_DMA_IRQHandler_69
    810                {
    811                  /* Clear the transfer complete flag */
    812                  __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma));
   \   000008C4   0x4541             CMP      R1,R8
   \   000008C6   0xD312             BCC.N    ??HAL_DMA_IRQHandler_70
   \   000008C8   0x42B9             CMP      R1,R7
   \   000008CA   0xBF08             IT       EQ 
   \   000008CC   0x2020             MOVEQ    R0,#+32
   \   000008CE   0xD00C             BEQ.N    ??HAL_DMA_IRQHandler_71
   \   000008D0   0x....             LDR.N    R0,??DataTable2_5  ;; 0x40026488
   \   000008D2   0x4281             CMP      R1,R0
   \   000008D4   0xBF08             IT       EQ 
   \   000008D6   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   000008DA   0xD006             BEQ.N    ??HAL_DMA_IRQHandler_71
   \   000008DC   0x....             LDR.N    R0,??DataTable2_6  ;; 0x400264a0
   \   000008DE   0x4281             CMP      R1,R0
   \   000008E0   0xBF0C             ITE      EQ 
   \   000008E2   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   000008E6   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_IRQHandler_71: (+1)
   \   000008EA   0x60E8             STR      R0,[R5, #+12]
   \   000008EC   0xE041             B.N      ??HAL_DMA_IRQHandler_72
   \                     ??HAL_DMA_IRQHandler_70: (+1)
   \   000008EE   0x42B1             CMP      R1,R6
   \   000008F0   0xD313             BCC.N    ??HAL_DMA_IRQHandler_73
   \   000008F2   0x....             LDR.N    R0,??DataTable2_7  ;; 0x40026410
   \   000008F4   0x4281             CMP      R1,R0
   \   000008F6   0xBF08             IT       EQ 
   \   000008F8   0x2020             MOVEQ    R0,#+32
   \   000008FA   0xD00C             BEQ.N    ??HAL_DMA_IRQHandler_74
   \   000008FC   0x....             LDR.N    R0,??DataTable2_8  ;; 0x40026428
   \   000008FE   0x4281             CMP      R1,R0
   \   00000900   0xBF08             IT       EQ 
   \   00000902   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   00000906   0xD006             BEQ.N    ??HAL_DMA_IRQHandler_74
   \   00000908   0x....             LDR.N    R0,??DataTable2_9  ;; 0x40026440
   \   0000090A   0x4281             CMP      R1,R0
   \   0000090C   0xBF0C             ITE      EQ 
   \   0000090E   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   00000912   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_IRQHandler_74: (+1)
   \   00000916   0x60A8             STR      R0,[R5, #+8]
   \   00000918   0xE02B             B.N      ??HAL_DMA_IRQHandler_72
   \                     ??HAL_DMA_IRQHandler_73: (+1)
   \   0000091A   0x....             LDR.N    R0,??DataTable2_10  ;; 0x40026059
   \   0000091C   0x4281             CMP      R1,R0
   \   0000091E   0xD314             BCC.N    ??HAL_DMA_IRQHandler_75
   \   00000920   0x....             LDR.N    R0,??DataTable2_12  ;; 0x40026070
   \   00000922   0x4281             CMP      R1,R0
   \   00000924   0xBF08             IT       EQ 
   \   00000926   0x2020             MOVEQ    R0,#+32
   \   00000928   0xD00C             BEQ.N    ??HAL_DMA_IRQHandler_76
   \   0000092A   0x....             LDR.N    R0,??DataTable2_13  ;; 0x40026088
   \   0000092C   0x4281             CMP      R1,R0
   \   0000092E   0xBF08             IT       EQ 
   \   00000930   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   00000934   0xD006             BEQ.N    ??HAL_DMA_IRQHandler_76
   \   00000936   0x....             LDR.N    R0,??DataTable2_14  ;; 0x400260a0
   \   00000938   0x4281             CMP      R1,R0
   \   0000093A   0xBF0C             ITE      EQ 
   \   0000093C   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   00000940   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_IRQHandler_76: (+1)
   \   00000944   0x....             LDR.N    R1,??DataTable2_11  ;; 0x40026000
   \   00000946   0x60C8             STR      R0,[R1, #+12]
   \   00000948   0xE013             B.N      ??HAL_DMA_IRQHandler_72
   \                     ??HAL_DMA_IRQHandler_75: (+1)
   \   0000094A   0x....             LDR.N    R0,??DataTable2_15  ;; 0x40026010
   \   0000094C   0x4281             CMP      R1,R0
   \   0000094E   0xBF08             IT       EQ 
   \   00000950   0x2020             MOVEQ    R0,#+32
   \   00000952   0xD00C             BEQ.N    ??HAL_DMA_IRQHandler_77
   \   00000954   0x....             LDR.N    R0,??DataTable2_16  ;; 0x40026028
   \   00000956   0x4281             CMP      R1,R0
   \   00000958   0xBF08             IT       EQ 
   \   0000095A   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   0000095E   0xD006             BEQ.N    ??HAL_DMA_IRQHandler_77
   \   00000960   0x....             LDR.N    R0,??DataTable2  ;; 0x40026040
   \   00000962   0x4281             CMP      R1,R0
   \   00000964   0xBF0C             ITE      EQ 
   \   00000966   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   0000096A   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_IRQHandler_77: (+1)
   \   0000096E   0x....             LDR.N    R1,??DataTable2_11  ;; 0x40026000
   \   00000970   0x6088             STR      R0,[R1, #+8]
    813          
    814                  /* Current memory buffer used is Memory 1 */
    815                  if((hdma->Instance->CR & DMA_SxCR_CT) == 0)
   \                     ??HAL_DMA_IRQHandler_72: (+1)
   \   00000972   0x6820             LDR      R0,[R4, #+0]
   \   00000974   0x6801             LDR      R1,[R0, #+0]
   \   00000976   0x0309             LSLS     R1,R1,#+12
   \   00000978   0xD408             BMI.N    ??HAL_DMA_IRQHandler_78
    816                  {
    817                    if(hdma->XferM1CpltCallback != NULL)
   \   0000097A   0xF104 0x0034      ADD      R0,R4,#+52
   \   0000097E   0x6901             LDR      R1,[R0, #+16]
   \   00000980   0x0008             MOVS     R0,R1
   \   00000982   0xD077             BEQ.N    ??HAL_DMA_IRQHandler_68
    818                    {
    819                      /* Transfer complete Callback for memory1 */
    820                      hdma->XferM1CpltCallback(hdma);
   \   00000984   0x4620             MOV      R0,R4
   \   00000986   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   0000098A   0x4708             BX       R1
    821                    }
    822                  }
    823                  /* Current memory buffer used is Memory 0 */
    824                  else if((hdma->Instance->CR & DMA_SxCR_CT) != 0) 
   \                     ??HAL_DMA_IRQHandler_78: (+1)
   \   0000098C   0x6800             LDR      R0,[R0, #+0]
   \   0000098E   0x0300             LSLS     R0,R0,#+12
   \   00000990   0xD570             BPL.N    ??HAL_DMA_IRQHandler_68
    825                  {
    826                    if(hdma->XferCpltCallback != NULL)
   \   00000992   0xF104 0x0034      ADD      R0,R4,#+52
   \   00000996   0xE066             B.N      ??HAL_DMA_IRQHandler_79
    827                    {
    828                      /* Transfer complete Callback for memory0 */
    829                      hdma->XferCpltCallback(hdma);
    830                    }
    831                  }
    832                }
    833                /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
    834                else
    835                {
    836                  if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0)
   \                     ??HAL_DMA_IRQHandler_69: (+1)
   \   00000998   0x6808             LDR      R0,[R1, #+0]
   \   0000099A   0x05C0             LSLS     R0,R0,#+23
   \   0000099C   0xD403             BMI.N    ??HAL_DMA_IRQHandler_80
    837                  {
    838                    /* Disable the transfer complete interrupt */
    839                    __HAL_DMA_DISABLE_IT(hdma, DMA_IT_TC);
   \   0000099E   0x6808             LDR      R0,[R1, #+0]
   \   000009A0   0xF020 0x0010      BIC      R0,R0,#0x10
   \   000009A4   0x6008             STR      R0,[R1, #+0]
    840                  }
    841                  /* Clear the transfer complete flag */
    842                  __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma));
   \                     ??HAL_DMA_IRQHandler_80: (+1)
   \   000009A6   0x6820             LDR      R0,[R4, #+0]
   \   000009A8   0x4540             CMP      R0,R8
   \   000009AA   0xD312             BCC.N    ??HAL_DMA_IRQHandler_81
   \   000009AC   0x42B8             CMP      R0,R7
   \   000009AE   0xBF08             IT       EQ 
   \   000009B0   0x2020             MOVEQ    R0,#+32
   \   000009B2   0xD00C             BEQ.N    ??HAL_DMA_IRQHandler_82
   \   000009B4   0x....             LDR.N    R1,??DataTable2_5  ;; 0x40026488
   \   000009B6   0x4288             CMP      R0,R1
   \   000009B8   0xBF08             IT       EQ 
   \   000009BA   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   000009BE   0xD006             BEQ.N    ??HAL_DMA_IRQHandler_82
   \   000009C0   0x....             LDR.N    R1,??DataTable2_6  ;; 0x400264a0
   \   000009C2   0x4288             CMP      R0,R1
   \   000009C4   0xBF0C             ITE      EQ 
   \   000009C6   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   000009CA   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_IRQHandler_82: (+1)
   \   000009CE   0x60E8             STR      R0,[R5, #+12]
   \   000009D0   0xE041             B.N      ??HAL_DMA_IRQHandler_83
   \                     ??HAL_DMA_IRQHandler_81: (+1)
   \   000009D2   0x42B0             CMP      R0,R6
   \   000009D4   0xD313             BCC.N    ??HAL_DMA_IRQHandler_84
   \   000009D6   0x....             LDR.N    R1,??DataTable2_7  ;; 0x40026410
   \   000009D8   0x4288             CMP      R0,R1
   \   000009DA   0xBF08             IT       EQ 
   \   000009DC   0x2020             MOVEQ    R0,#+32
   \   000009DE   0xD00C             BEQ.N    ??HAL_DMA_IRQHandler_85
   \   000009E0   0x....             LDR.N    R1,??DataTable2_8  ;; 0x40026428
   \   000009E2   0x4288             CMP      R0,R1
   \   000009E4   0xBF08             IT       EQ 
   \   000009E6   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   000009EA   0xD006             BEQ.N    ??HAL_DMA_IRQHandler_85
   \   000009EC   0x....             LDR.N    R1,??DataTable2_9  ;; 0x40026440
   \   000009EE   0x4288             CMP      R0,R1
   \   000009F0   0xBF0C             ITE      EQ 
   \   000009F2   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   000009F6   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_IRQHandler_85: (+1)
   \   000009FA   0x60A8             STR      R0,[R5, #+8]
   \   000009FC   0xE02B             B.N      ??HAL_DMA_IRQHandler_83
   \                     ??HAL_DMA_IRQHandler_84: (+1)
   \   000009FE   0x....             LDR.N    R1,??DataTable2_10  ;; 0x40026059
   \   00000A00   0x4288             CMP      R0,R1
   \   00000A02   0xD314             BCC.N    ??HAL_DMA_IRQHandler_86
   \   00000A04   0x....             LDR.N    R1,??DataTable2_12  ;; 0x40026070
   \   00000A06   0x4288             CMP      R0,R1
   \   00000A08   0xBF08             IT       EQ 
   \   00000A0A   0x2020             MOVEQ    R0,#+32
   \   00000A0C   0xD00C             BEQ.N    ??HAL_DMA_IRQHandler_87
   \   00000A0E   0x....             LDR.N    R1,??DataTable2_13  ;; 0x40026088
   \   00000A10   0x4288             CMP      R0,R1
   \   00000A12   0xBF08             IT       EQ 
   \   00000A14   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   00000A18   0xD006             BEQ.N    ??HAL_DMA_IRQHandler_87
   \   00000A1A   0x....             LDR.N    R1,??DataTable2_14  ;; 0x400260a0
   \   00000A1C   0x4288             CMP      R0,R1
   \   00000A1E   0xBF0C             ITE      EQ 
   \   00000A20   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   00000A24   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_IRQHandler_87: (+1)
   \   00000A28   0x....             LDR.N    R1,??DataTable2_11  ;; 0x40026000
   \   00000A2A   0x60C8             STR      R0,[R1, #+12]
   \   00000A2C   0xE013             B.N      ??HAL_DMA_IRQHandler_83
   \                     ??HAL_DMA_IRQHandler_86: (+1)
   \   00000A2E   0x....             LDR.N    R1,??DataTable2_15  ;; 0x40026010
   \   00000A30   0x4288             CMP      R0,R1
   \   00000A32   0xBF08             IT       EQ 
   \   00000A34   0x2020             MOVEQ    R0,#+32
   \   00000A36   0xD00C             BEQ.N    ??HAL_DMA_IRQHandler_88
   \   00000A38   0x....             LDR.N    R1,??DataTable2_16  ;; 0x40026028
   \   00000A3A   0x4288             CMP      R0,R1
   \   00000A3C   0xBF08             IT       EQ 
   \   00000A3E   0xF44F 0x6000      MOVEQ    R0,#+2048
   \   00000A42   0xD006             BEQ.N    ??HAL_DMA_IRQHandler_88
   \   00000A44   0x....             LDR.N    R1,??DataTable2  ;; 0x40026040
   \   00000A46   0x4288             CMP      R0,R1
   \   00000A48   0xBF0C             ITE      EQ 
   \   00000A4A   0xF44F 0x1000      MOVEQ    R0,#+2097152
   \   00000A4E   0xF04F 0x6000      MOVNE    R0,#+134217728
   \                     ??HAL_DMA_IRQHandler_88: (+1)
   \   00000A52   0x....             LDR.N    R1,??DataTable2_11  ;; 0x40026000
   \   00000A54   0x6088             STR      R0,[R1, #+8]
    843          
    844                  /* Update error code */
    845                  hdma->ErrorCode |= HAL_DMA_ERROR_NONE;
   \                     ??HAL_DMA_IRQHandler_83: (+1)
   \   00000A56   0xF104 0x0034      ADD      R0,R4,#+52
   \   00000A5A   0x6981             LDR      R1,[R0, #+24]
   \   00000A5C   0x6181             STR      R1,[R0, #+24]
    846          
    847                  /* Change the DMA state */
    848                  hdma->State = HAL_DMA_STATE_READY_MEM0;
   \   00000A5E   0x2111             MOVS     R1,#+17
   \   00000A60   0x7041             STRB     R1,[R0, #+1]
    849          
    850                  /* Process Unlocked */
    851                  __HAL_UNLOCK(hdma);      
   \   00000A62   0x2100             MOVS     R1,#+0
   \   00000A64   0x7001             STRB     R1,[R0, #+0]
    852          
    853                  if(hdma->XferCpltCallback != NULL)
   \                     ??HAL_DMA_IRQHandler_79: (+1)
   \   00000A66   0x6881             LDR      R1,[R0, #+8]
   \   00000A68   0x0008             MOVS     R0,R1
   \   00000A6A   0xD003             BEQ.N    ??HAL_DMA_IRQHandler_68
    854                  {
    855                    /* Transfer complete callback */
    856                    hdma->XferCpltCallback(hdma);
   \   00000A6C   0x4620             MOV      R0,R4
   \   00000A6E   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   00000A72   0x4708             BX       R1
    857                  }
    858                }
    859              }
    860            }
    861          }
   \                     ??HAL_DMA_IRQHandler_68: (+1)
   \   00000A74   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    862          
    863          /**
    864            * @}
    865            */
    866          
    867          /** @addtogroup DMA_Exported_Functions_Group3
    868            *
    869          @verbatim
    870           ===============================================================================
    871                              ##### State and Errors functions #####
    872           ===============================================================================
    873              [..]
    874              This subsection provides functions allowing to
    875                (+) Check the DMA state
    876                (+) Get error code
    877          
    878          @endverbatim
    879            * @{
    880            */
    881          
    882          /**
    883            * @brief  Returns the DMA state.
    884            * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
    885            *               the configuration information for the specified DMA Stream.
    886            * @retval HAL state
    887            */

   \                                 In section .text, align 2, keep-with-next
    888          HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
    889          {
    890            return hdma->State;
   \                     HAL_DMA_GetState: (+1)
   \   00000000   0xF890 0x0035      LDRB     R0,[R0, #+53]
   \   00000004   0x4770             BX       LR               ;; return
    891          }
    892          
    893          /**
    894            * @brief  Return the DMA error code
    895            * @param  hdma : pointer to a DMA_HandleTypeDef structure that contains
    896            *              the configuration information for the specified DMA Stream.
    897            * @retval DMA Error Code
    898            */

   \                                 In section .text, align 2, keep-with-next
    899          uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
    900          {
    901            return hdma->ErrorCode;
   \                     HAL_DMA_GetError: (+1)
   \   00000000   0x6CC0             LDR      R0,[R0, #+76]
   \   00000002   0x4770             BX       LR               ;; return
    902          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0xF010803F         DC32     0xf010803f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x40026459         DC32     0x40026459

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x40026470         DC32     0x40026470

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x40026408         DC32     0x40026408

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x400260B9         DC32     0x400260b9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x00800004         DC32     0x800004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x40026488         DC32     0x40026488

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x400264A0         DC32     0x400264a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x40026410         DC32     0x40026410

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x40026428         DC32     0x40026428

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x40026440         DC32     0x40026440

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_11:
   \   00000000   0x40026059         DC32     0x40026059

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_12:
   \   00000000   0x40026070         DC32     0x40026070

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_13:
   \   00000000   0x40026088         DC32     0x40026088

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_14:
   \   00000000   0x400260A0         DC32     0x400260a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_15:
   \   00000000   0x40026008         DC32     0x40026008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_16:
   \   00000000   0x40026010         DC32     0x40026010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_17:
   \   00000000   0x40026028         DC32     0x40026028

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_18:
   \   00000000   0x40026040         DC32     0x40026040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_19:
   \   00000000   0x00800001         DC32     0x800001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x40026040         DC32     0x40026040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x40026459         DC32     0x40026459

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x40026400         DC32     0x40026400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x400260B9         DC32     0x400260b9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x40026470         DC32     0x40026470

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x40026488         DC32     0x40026488

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x400264A0         DC32     0x400264a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x40026410         DC32     0x40026410

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x40026428         DC32     0x40026428

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x40026440         DC32     0x40026440

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x40026059         DC32     0x40026059

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_11:
   \   00000000   0x40026000         DC32     0x40026000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_12:
   \   00000000   0x40026070         DC32     0x40026070

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_13:
   \   00000000   0x40026088         DC32     0x40026088

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_14:
   \   00000000   0x400260A0         DC32     0x400260a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_15:
   \   00000000   0x40026010         DC32     0x40026010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_16:
   \   00000000   0x40026028         DC32     0x40026028

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_17:
   \   00000000   0x00800001         DC32     0x800001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_18:
   \   00000000   0x00800004         DC32     0x800004
    903          
    904          /**
    905            * @}
    906            */
    907          
    908          /**
    909            * @}
    910            */
    911          
    912          #endif /* HAL_DMA_MODULE_ENABLED */
    913          /**
    914            * @}
    915            */
    916          
    917          /**
    918            * @}
    919            */
    920          
    921          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   DMA_SetConfig
      16   HAL_DMA_Abort
        16   -> HAL_GetTick
      16   HAL_DMA_DeInit
       0   HAL_DMA_GetError
       0   HAL_DMA_GetState
      24   HAL_DMA_IRQHandler
         0   -- Indirect call
        24   -- Indirect call
       0   HAL_DMA_Init
      48   HAL_DMA_PollForTransfer
        48   -> HAL_GetTick
       8   HAL_DMA_Start
       8   HAL_DMA_Start_IT


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_12
       4  ??DataTable1_13
       4  ??DataTable1_14
       4  ??DataTable1_15
       4  ??DataTable1_16
       4  ??DataTable1_17
       4  ??DataTable1_18
       4  ??DataTable1_19
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_11
       4  ??DataTable2_12
       4  ??DataTable2_13
       4  ??DataTable2_14
       4  ??DataTable2_15
       4  ??DataTable2_16
       4  ??DataTable2_17
       4  ??DataTable2_18
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
       6  ?Subroutine0
      32  DMA_SetConfig
      82  HAL_DMA_Abort
     986  HAL_DMA_DeInit
       4  HAL_DMA_GetError
       6  HAL_DMA_GetState
    2680  HAL_DMA_IRQHandler
     110  HAL_DMA_Init
    2680  HAL_DMA_PollForTransfer
      86  HAL_DMA_Start
     136  HAL_DMA_Start_IT

 
 6 964 bytes in section .text
 
 6 964 bytes of CODE memory

Errors: none
Warnings: none
