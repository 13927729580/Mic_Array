###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.3.10732/W32 for ARM       10/Oct/2016  13:58:49
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\sop1hc\Mic\Mic_Array\For_Window\Projects\STM32746G\Applications\Audio\Mic_Array\Src\audio_application.c
#    Command line =  
#        D:\sop1hc\Mic\Mic_Array\For_Window\Projects\STM32746G\Applications\Audio\Mic_Array\Src\audio_application.c
#        -D USE_HAL_DRIVER -D STM32F746xx -D USE_STM32746G_DISCO -D
#        USE_IOEXPANDER -D USE_USB_FS -lC
#        D:\sop1hc\Mic\Mic_Array\For_Window\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List
#        -lA
#        D:\sop1hc\Mic\Mic_Array\For_Window\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List
#        -o
#        D:\sop1hc\Mic\Mic_Array\For_Window\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\Obj
#        --no_unroll --debug --endian=little --cpu=Cortex-M7 -e
#        --char_is_signed --fpu=VFPv5_sp --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.3\arm\INC\c\DLib_Config_Full.h"
#        -I
#        D:\sop1hc\Mic\Mic_Array\For_Window\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\Inc\
#        -I
#        D:\sop1hc\Mic\Mic_Array\For_Window\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\CMSIS\Device\ST\STM32F7xx\Include\
#        -I
#        D:\sop1hc\Mic\Mic_Array\For_Window\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\STM32F7xx_HAL_Driver\Inc\
#        -I
#        D:\sop1hc\Mic\Mic_Array\For_Window\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\BSP\STM32746G-Discovery\
#        -I
#        D:\sop1hc\Mic\Mic_Array\For_Window\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\BSP\Components\Common\
#        -I
#        D:\sop1hc\Mic\Mic_Array\For_Window\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\Log\
#        -I
#        D:\sop1hc\Mic\Mic_Array\For_Window\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\Fonts\
#        -I
#        D:\sop1hc\Mic\Mic_Array\For_Window\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\CPU\
#        -I
#        D:\sop1hc\Mic\Mic_Array\For_Window\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_Device_Library\Core\Inc\
#        -I
#        D:\sop1hc\Mic\Mic_Array\For_Window\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_HOST_Library\Core\Inc\
#        -I
#        D:\sop1hc\Mic\Mic_Array\For_Window\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_HOST_Library\Class\MSC\Inc\
#        -I
#        D:\sop1hc\Mic\Mic_Array\For_Window\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\Third_Party\FatFs\src\
#        -I
#        D:\sop1hc\Mic\Mic_Array\For_Window\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\Third_Party\FatFs\src\drivers\
#        -I
#        D:\sop1hc\Mic\Mic_Array\For_Window\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_Audio\Addons\PDM\
#        -I
#        D:\sop1hc\Mic\Mic_Array\For_Window\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_Device_Library\Class\AUDIO\Inc\
#        -Ohs --use_c++_inline --require_prototypes -I "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.3\arm\CMSIS\Include\" -D
#        ARM_MATH_CM7 --relaxed_fp
#    List file    =  
#        D:\sop1hc\Mic\Mic_Array\For_Window\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List\audio_application.lst
#    Object file  =  
#        D:\sop1hc\Mic\Mic_Array\For_Window\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\Obj\audio_application.o
#
###############################################################################

D:\sop1hc\Mic\Mic_Array\For_Window\Projects\STM32746G\Applications\Audio\Mic_Array\Src\audio_application.c
      1          /*****************************************************************************
      2            *    Author: Phan Le Son                                                                                           
      3            *    Company: Autonomous.ai                                            
      4            *    email: plson03@gmail.com
      5            *****************************************************************************/
      6          
      7          /* Includes ------------------------------------------------------------------*/
      8          #include "audio_application.h"
      9          #include "main.h"
     10          
     11          
     12          /* Private typedef -----------------------------------------------------------*/
     13          #define AUDIO_SIZE_ELEMENT (2*AUDIO_OUT_BUFFER_SIZE+10)
     14          /* Private define ------------------------------------------------------------*/
     15          /* Private macro -------------------------------------------------------------*/
     16          
     17          /** @defgroup AUDIO_APPLICATION_Exported_Variables 
     18          * @{
     19          */
     20          #if EXT_RAM
     21          #pragma location= (SDRAM_BANK_ADDR+ 3*BUFFER_SIZE_BYTE)
     22          #endif

   \                                 In section .bss, align 4
     23          int16_t PCM_Buffer1[8*AUDIO_OUT_BUFFER_SIZE];
   \                     PCM_Buffer1:
   \   00000000                      DS8 16384
     24          #if EXT_RAM
     25          #pragma location= (SDRAM_BANK_ADDR+ 3*BUFFER_SIZE_BYTE+2*8*AUDIO_OUT_BUFFER_SIZE)
     26          #endif

   \                                 In section .bss, align 4
     27          int16_t PCM_Buffer2[8*AUDIO_OUT_BUFFER_SIZE];//AUDIO_CHANNELS
   \                     PCM_Buffer2:
   \   00000000                      DS8 16384
     28          //#if EXT_RAM
     29          //#pragma location= (SDRAM_BANK_ADDR+ 3*BUFFER_SIZE_BYTE+4*8*AUDIO_OUT_BUFFER_SIZE)
     30          //#endif
     31          //int16_t PCM_Buffer3[8*AUDIO_OUT_BUFFER_SIZE];
     32          

   \                                 In section .bss, align 2
     33          __IO uint16_t cntFrm;
   \                     cntFrm:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
     34          __IO uint8_t  swtBufUSBOut;
   \                     swtBufUSBOut:
   \   00000000                      DS8 1
     35          
     36          extern uint8_t buffer_switch;
     37          extern Mic_Array_Data Buffer1,Buffer2,Buffer3;
     38          extern __IO uint8_t   cntBtnPress;
     39          
     40          
     41          
     42          extern uint8_t swtCase1Mic56;
     43          
     44          //int16_t Frame1Old[SHIFT_CHNNL1];
     45          //int16_t Frame2Old[SHIFT_CHNNL2];
     46          //int16_t Frame3Old[SHIFT_CHNNL3];
     47          //int16_t Frame4Old[SHIFT_CHNNL4];
     48          //int16_t Frame5Old[SHIFT_CHNNL5+1];
     49          //int16_t Frame6Old[SHIFT_CHNNL6];
     50          //int16_t Frame7Old[SHIFT_CHNNL7];
     51          //int16_t Frame8Old[SHIFT_CHNNL8];
     52          

   \                                 In section .text, align 2, keep-with-next
     53          void AudioUSBSend(uint16_t idxFrm) /* This function called every ms */
     54          {
   \                     AudioUSBSend: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
     55              //Send_Audio_to_USB((int16_t *)PCM_Buffer1, AUDIO_OUT_BUFFER_SIZE*AUDIO_CHANNELS);
     56              
     57              (swtBufUSBOut)?Send_Audio_to_USB((int16_t *)&PCM_Buffer2[(8*AUDIO_SAMPLING_FREQUENCY/1000)*idxFrm], (8*AUDIO_SAMPLING_FREQUENCY/1000))://AUDIO_CHANNELS
     58                             Send_Audio_to_USB((int16_t *)&PCM_Buffer1[(8*AUDIO_SAMPLING_FREQUENCY/1000)*idxFrm], (8*AUDIO_SAMPLING_FREQUENCY/1000));//AUDIO_CHANNELS
   \   00000002   0x....             LDR.N    R5,??DataTable1
   \   00000004   0xB081             SUB      SP,SP,#+4
   \   00000006   0x4604             MOV      R4,R0
   \   00000008   0x7829             LDRB     R1,[R5, #+0]
   \   0000000A   0x2900             CMP      R1,#+0
   \   0000000C   0xBF19             ITTEE    NE 
   \   0000000E   0x2180             MOVNE    R1,#+128
   \   00000010   0x....             LDRNE.N  R2,??DataTable1_1
   \   00000012   0x2180             MOVEQ    R1,#+128
   \   00000014   0x....             LDREQ.N  R2,??DataTable1_2
   \   00000016   0xEB02 0x2004      ADD      R0,R2,R4, LSL #+8
   \   0000001A   0x.... 0x....      BL       Send_Audio_to_USB
     59              if (idxFrm == (AUDIO_OUT_BUFFER_SIZE/(AUDIO_SAMPLING_FREQUENCY/1000) -1) ) swtBufUSBOut^=0x01;				   		   
   \   0000001E   0x2C3F             CMP      R4,#+63
   \   00000020   0xD103             BNE.N    ??AudioUSBSend_0
   \   00000022   0x7828             LDRB     R0,[R5, #+0]
   \   00000024   0xF080 0x0001      EOR      R0,R0,#0x1
   \   00000028   0x7028             STRB     R0,[R5, #+0]
     60          }
   \                     ??AudioUSBSend_0: (+1)
   \   0000002A   0xB001             ADD      SP,SP,#+4
   \   0000002C   0xBD30             POP      {R4,R5,PC}       ;; return
     61          
     62          /* This function should be called after data processing */
     63          /*-------------------------------------------------------------------------------------------------------------
     64          			  
     65          	Sequence  Record Data                     Processing Data                 Player Data
     66          			  
     67          	1-------  Buffer1                         Buffer2                         Buffer3
     68          			  
     69          	2-------  Buffer3                         Buffer1                         Buffer2		  
     70          			  
     71          	3-------  Buffer2                         Buffer3                         Buffer1 
     72           ---------------------------------------------------------------------------------------------------------------*/
     73          

   \                                 In section .text, align 4, keep-with-next
     74          void AudioPlayerUpd(void) /* This function called with period of 64ms */
     75          {
     76          	switch (buffer_switch)
   \                     AudioPlayerUpd: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable1_3
   \   00000002   0xB4F0             PUSH     {R4-R7}
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0xB120             CBZ.N    R0,??AudioPlayerUpd_0
   \   00000008   0x2802             CMP      R0,#+2
   \   0000000A   0xD04D             BEQ.N    ??AudioPlayerUpd_1
   \   0000000C   0xD326             BCC.N    ??AudioPlayerUpd_2
     77              {
     78                case BUF1_PLAY:
     79          		for (uint16_t i=0;i<PAR_N;i++)
     80          		{
     81                      if (swtBufUSBOut)
     82                      {               
     83                          for (uint16_t j = 0; j < PAR_M; j++)
     84                          {
     85                             PCM_Buffer1[8*(i) +j]= *(&Buffer1.bufMIC1[i] + PAR_N*j);
     86                          }
     87                      }
     88          		    else
     89          		    {
     90                          for (uint16_t j = 0; j < PAR_M; j++)
     91                          {
     92                             PCM_Buffer2[8*(i) +j]= *(&Buffer1.bufMIC1[i] + PAR_N*j);
     93                          }
     94          		    }
     95          	  
     96          		}
     97                  break;    
     98                case BUF2_PLAY:
     99                    for (uint16_t i=0;i<AUDIO_OUT_BUFFER_SIZE;i++)
    100                    {
    101                      if (swtBufUSBOut)
    102                      {               
    103                          for (uint16_t j = 0; j < PAR_M; j++)
    104                          {
    105                             PCM_Buffer1[8*(i) +j]= *(&Buffer2.bufMIC1[i] + PAR_N*j);
    106                          }
    107                      }
    108          		    else
    109          		    {
    110                          for (uint16_t j = 0; j < PAR_M; j++)
    111                          {
    112                             PCM_Buffer2[8*(i) +j]= *(&Buffer2.bufMIC1[i] + PAR_N*j);
    113                          }
    114          		    }             
    115                    
    116                      
    117                    }
    118                    break;
    119                case BUF3_PLAY:
    120          		for (uint16_t i=0;i<AUDIO_OUT_BUFFER_SIZE;i++)
    121          		{
    122                      if (swtBufUSBOut)
    123                      {               
    124                          for (uint16_t j = 0; j < PAR_M; j++)
    125                          {
    126                             PCM_Buffer1[8*(i) +j]= *(&Buffer3.bufMIC1[i] + PAR_N*j);
    127                          }
    128                      }
    129          		    else
    130          		    {
    131                          for (uint16_t j = 0; j < PAR_M; j++)
    132                          {
    133                             PCM_Buffer2[8*(i) +j]= *(&Buffer3.bufMIC1[i] + PAR_N*j);
    134                          }
    135          		    }
    136          		} 	
    137                  break;
    138                default:
    139                  break;
    140              }
    141          }
   \   0000000E   0xBCF0             POP      {R4-R7}
   \   00000010   0x4770             BX       LR
   \                     ??AudioPlayerUpd_0: (+1)
   \   00000012   0x....             LDR.N    R1,??DataTable1_4
   \   00000014   0x....             LDR.N    R2,??DataTable1_2
   \   00000016   0x....             LDR.N    R3,??DataTable1_1
   \   00000018   0xF44F 0x6480      MOV      R4,#+1024
   \   0000001C   0x....             LDR.N    R0,??DataTable1
   \                     ??AudioPlayerUpd_3: (+1)
   \   0000001E   0x7805             LDRB     R5,[R0, #+0]
   \   00000020   0xB15D             CBZ.N    R5,??AudioPlayerUpd_4
   \   00000022   0x4615             MOV      R5,R2
   \   00000024   0x460E             MOV      R6,R1
   \   00000026   0x2708             MOVS     R7,#+8
   \                     ??AudioPlayerUpd_5: (+1)
   \   00000028   0xF8B6 0xC000      LDRH     R12,[R6, #+0]
   \   0000002C   0x1E7F             SUBS     R7,R7,#+1
   \   0000002E   0xF506 0x6600      ADD      R6,R6,#+2048
   \   00000032   0xF825 0xCB02      STRH     R12,[R5], #+2
   \   00000036   0xD1F7             BNE.N    ??AudioPlayerUpd_5
   \   00000038   0xE00A             B.N      ??AudioPlayerUpd_6
   \                     ??AudioPlayerUpd_4: (+1)
   \   0000003A   0x461D             MOV      R5,R3
   \   0000003C   0x460E             MOV      R6,R1
   \   0000003E   0x2708             MOVS     R7,#+8
   \                     ??AudioPlayerUpd_7: (+1)
   \   00000040   0xF8B6 0xC000      LDRH     R12,[R6, #+0]
   \   00000044   0x1E7F             SUBS     R7,R7,#+1
   \   00000046   0xF506 0x6600      ADD      R6,R6,#+2048
   \   0000004A   0xF825 0xCB02      STRH     R12,[R5], #+2
   \   0000004E   0xD1F7             BNE.N    ??AudioPlayerUpd_7
   \                     ??AudioPlayerUpd_6: (+1)
   \   00000050   0x3310             ADDS     R3,R3,#+16
   \   00000052   0x3210             ADDS     R2,R2,#+16
   \   00000054   0x1C89             ADDS     R1,R1,#+2
   \   00000056   0x1E64             SUBS     R4,R4,#+1
   \   00000058   0xD04B             BEQ.N    ??AudioPlayerUpd_8
   \   0000005A   0xE7E0             B.N      ??AudioPlayerUpd_3
   \                     ??AudioPlayerUpd_2: (+1)
   \   0000005C   0x....             LDR.N    R1,??DataTable1_5
   \   0000005E   0x....             LDR.N    R2,??DataTable1_2
   \   00000060   0x....             LDR.N    R3,??DataTable1_1
   \   00000062   0xF44F 0x6480      MOV      R4,#+1024
   \   00000066   0x....             LDR.N    R0,??DataTable1
   \                     ??AudioPlayerUpd_9: (+1)
   \   00000068   0x7805             LDRB     R5,[R0, #+0]
   \   0000006A   0xB165             CBZ.N    R5,??AudioPlayerUpd_10
   \   0000006C   0x4615             MOV      R5,R2
   \   0000006E   0x460E             MOV      R6,R1
   \   00000070   0xF05F 0x0708      MOVS.W   R7,#+8
   \                     ??AudioPlayerUpd_11: (+1)
   \   00000074   0xF8B6 0xC000      LDRH     R12,[R6, #+0]
   \   00000078   0x1E7F             SUBS     R7,R7,#+1
   \   0000007A   0xF506 0x6600      ADD      R6,R6,#+2048
   \   0000007E   0xF825 0xCB02      STRH     R12,[R5], #+2
   \   00000082   0xD1F7             BNE.N    ??AudioPlayerUpd_11
   \   00000084   0xE00A             B.N      ??AudioPlayerUpd_12
   \                     ??AudioPlayerUpd_10: (+1)
   \   00000086   0x461D             MOV      R5,R3
   \   00000088   0x460E             MOV      R6,R1
   \   0000008A   0x2708             MOVS     R7,#+8
   \                     ??AudioPlayerUpd_13: (+1)
   \   0000008C   0xF8B6 0xC000      LDRH     R12,[R6, #+0]
   \   00000090   0x1E7F             SUBS     R7,R7,#+1
   \   00000092   0xF506 0x6600      ADD      R6,R6,#+2048
   \   00000096   0xF825 0xCB02      STRH     R12,[R5], #+2
   \   0000009A   0xD1F7             BNE.N    ??AudioPlayerUpd_13
   \                     ??AudioPlayerUpd_12: (+1)
   \   0000009C   0x3310             ADDS     R3,R3,#+16
   \   0000009E   0x3210             ADDS     R2,R2,#+16
   \   000000A0   0x1C89             ADDS     R1,R1,#+2
   \   000000A2   0x1E64             SUBS     R4,R4,#+1
   \   000000A4   0xD025             BEQ.N    ??AudioPlayerUpd_8
   \   000000A6   0xE7DF             B.N      ??AudioPlayerUpd_9
   \                     ??AudioPlayerUpd_1: (+1)
   \   000000A8   0x....             LDR.N    R1,??DataTable1_6
   \   000000AA   0x....             LDR.N    R2,??DataTable1_2
   \   000000AC   0x....             LDR.N    R3,??DataTable1_1
   \   000000AE   0xF44F 0x6480      MOV      R4,#+1024
   \   000000B2   0x....             LDR.N    R0,??DataTable1
   \                     ??AudioPlayerUpd_14: (+1)
   \   000000B4   0x7805             LDRB     R5,[R0, #+0]
   \   000000B6   0xB165             CBZ.N    R5,??AudioPlayerUpd_15
   \   000000B8   0x4615             MOV      R5,R2
   \   000000BA   0x460E             MOV      R6,R1
   \   000000BC   0xF05F 0x0708      MOVS.W   R7,#+8
   \                     ??AudioPlayerUpd_16: (+1)
   \   000000C0   0xF8B6 0xC000      LDRH     R12,[R6, #+0]
   \   000000C4   0x1E7F             SUBS     R7,R7,#+1
   \   000000C6   0xF506 0x6600      ADD      R6,R6,#+2048
   \   000000CA   0xF825 0xCB02      STRH     R12,[R5], #+2
   \   000000CE   0xD1F7             BNE.N    ??AudioPlayerUpd_16
   \   000000D0   0xE00A             B.N      ??AudioPlayerUpd_17
   \                     ??AudioPlayerUpd_15: (+1)
   \   000000D2   0x461D             MOV      R5,R3
   \   000000D4   0x460E             MOV      R6,R1
   \   000000D6   0x2708             MOVS     R7,#+8
   \                     ??AudioPlayerUpd_18: (+1)
   \   000000D8   0xF8B6 0xC000      LDRH     R12,[R6, #+0]
   \   000000DC   0x1E7F             SUBS     R7,R7,#+1
   \   000000DE   0xF506 0x6600      ADD      R6,R6,#+2048
   \   000000E2   0xF825 0xCB02      STRH     R12,[R5], #+2
   \   000000E6   0xD1F7             BNE.N    ??AudioPlayerUpd_18
   \                     ??AudioPlayerUpd_17: (+1)
   \   000000E8   0x3310             ADDS     R3,R3,#+16
   \   000000EA   0x3210             ADDS     R2,R2,#+16
   \   000000EC   0x1C89             ADDS     R1,R1,#+2
   \   000000EE   0x1E64             SUBS     R4,R4,#+1
   \   000000F0   0xD1E0             BNE.N    ??AudioPlayerUpd_14
   \                     ??AudioPlayerUpd_8: (+1)
   \   000000F2   0xBCF0             POP      {R4-R7}
   \   000000F4   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     swtBufUSBOut

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     PCM_Buffer2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     PCM_Buffer1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     buffer_switch

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     Buffer1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     Buffer2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     Buffer3
    142          
    143          
    144          
    145          
    146          
    147          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   AudioPlayerUpd
      16   AudioUSBSend
        16   -> Send_Audio_to_USB


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
     246  AudioPlayerUpd
      46  AudioUSBSend
   16384  PCM_Buffer1
   16384  PCM_Buffer2
       2  cntFrm
       1  swtBufUSBOut

 
 32 771 bytes in section .bss
    320 bytes in section .text
 
    320 bytes of CODE memory
 32 771 bytes of DATA memory

Errors: none
Warnings: none
