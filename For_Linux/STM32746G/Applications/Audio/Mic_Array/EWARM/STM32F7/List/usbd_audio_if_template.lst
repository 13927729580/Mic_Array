###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       12/Feb/2016  23:34:18
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Middlewares\ST\STM32_USB_Device_Library\Class\AUDIO\Src\usbd_audio_if_template.c
#    Command line =  
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Middlewares\ST\STM32_USB_Device_Library\Class\AUDIO\Src\usbd_audio_if_template.c
#        -D USE_HAL_DRIVER -D STM32F746xx -D USE_STM32746G_DISCO -D
#        USE_IOEXPANDER -D USE_USB_FS -lC
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List
#        -lA
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List
#        -o
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_sp --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.3\arm\INC\c\DLib_Config_Full.h"
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\Inc\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\CMSIS\Device\ST\STM32F7xx\Include\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\STM32F7xx_HAL_Driver\Inc\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\BSP\STM32746G-Discovery\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Drivers\BSP\Components\Common\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\Log\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\Fonts\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Utilities\CPU\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_Device_Library\Core\Inc\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_HOST_Library\Core\Inc\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_HOST_Library\Class\MSC\Inc\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\Third_Party\FatFs\src\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\Third_Party\FatFs\src\drivers\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_Audio\Addons\PDM\
#        -I
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\..\..\..\..\..\..\Middlewares\ST\STM32_USB_Device_Library\Class\AUDIO\Inc\
#        -On --use_c++_inline --require_prototypes -I "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.3\arm\CMSIS\Include\" -D
#        ARM_MATH_CM7
#    List file    =  
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\List\usbd_audio_if_template.lst
#    Object file  =  
#        H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Projects\STM32746G\Applications\Audio\Mic_Array\EWARM\STM32F7\Obj\usbd_audio_if_template.o
#
###############################################################################

H:\PhanLeSon\ActivNoise\Microphone\F7\Mic_Array_Project\Mic_Array\Middlewares\ST\STM32_USB_Device_Library\Class\AUDIO\Src\usbd_audio_if_template.c
      1          /**
      2            ******************************************************************************
      3            * @file    usbd_cdc_if_template.c
      4            * @author  MCD Application Team
      5            * @version V2.4.1
      6            * @date    19-June-2015
      7            * @brief   Generic media access Layer.
      8            ******************************************************************************
      9            * @attention
     10            *
     11            * <h2><center>&copy; COPYRIGHT 2015 STMicroelectronics</center></h2>
     12            *
     13            * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
     14            * You may not use this file except in compliance with the License.
     15            * You may obtain a copy of the License at:
     16            *
     17            *        http://www.st.com/software_license_agreement_liberty_v2
     18            *
     19            * Unless required by applicable law or agreed to in writing, software 
     20            * distributed under the License is distributed on an "AS IS" BASIS, 
     21            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     22            * See the License for the specific language governing permissions and
     23            * limitations under the License.
     24            *
     25            ******************************************************************************
     26            */ 
     27          
     28          /* Includes ------------------------------------------------------------------*/
     29          #include "usbd_audio_if_template.h"
     30          
     31          /** @addtogroup STM32_USB_DEVICE_LIBRARY
     32            * @{
     33            */
     34          
     35          
     36          /** @defgroup USBD_AUDIO 
     37            * @brief usbd core module
     38            * @{
     39            */ 
     40          
     41          /** @defgroup USBD_AUDIO_Private_TypesDefinitions
     42            * @{
     43            */ 
     44          /**
     45            * @}
     46            */ 
     47          
     48          
     49          /** @defgroup USBD_AUDIO_Private_Defines
     50            * @{
     51            */ 
     52          /**
     53            * @}
     54            */ 
     55          
     56          
     57          /** @defgroup USBD_AUDIO_Private_Macros
     58            * @{
     59            */ 
     60          
     61          /**
     62            * @}
     63            */ 
     64          
     65          
     66          /** @defgroup USBD_AUDIO_Private_FunctionPrototypes
     67            * @{
     68            */
     69          
     70          static int8_t  TEMPLATE_Init         (uint32_t  AudioFreq, uint32_t Volume, uint32_t options);
     71          static int8_t  TEMPLATE_DeInit       (uint32_t options);
     72          static int8_t  TEMPLATE_AudioCmd     (uint8_t* pbuf, uint32_t size, uint8_t cmd);
     73          static int8_t  TEMPLATE_VolumeCtl    (uint8_t vol);
     74          static int8_t  TEMPLATE_MuteCtl      (uint8_t cmd);
     75          static int8_t  TEMPLATE_PeriodicTC   (uint8_t cmd);
     76          static int8_t  TEMPLATE_GetState     (void);
     77          

   \                                 In section .data, align 4
     78          USBD_AUDIO_ItfTypeDef USBD_AUDIO_Template_fops = 
   \                     USBD_AUDIO_Template_fops:
   \   00000000   0x........         DC32 TEMPLATE_Init, TEMPLATE_DeInit, TEMPLATE_AudioCmd
   \              0x........   
   \              0x........   
   \   0000000C   0x........         DC32 TEMPLATE_VolumeCtl, TEMPLATE_MuteCtl, TEMPLATE_PeriodicTC
   \              0x........   
   \              0x........   
   \   00000018   0x........         DC32 TEMPLATE_GetState
     79          {
     80            TEMPLATE_Init,
     81            TEMPLATE_DeInit,
     82            TEMPLATE_AudioCmd,
     83            TEMPLATE_VolumeCtl,
     84            TEMPLATE_MuteCtl,
     85            TEMPLATE_PeriodicTC,
     86            TEMPLATE_GetState,
     87          };
     88          
     89          /* Private functions ---------------------------------------------------------*/
     90          
     91          /**
     92            * @brief  TEMPLATE_Init
     93            *         Initializes the AUDIO media low layer
     94            * @param  None
     95            * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
     96            */

   \                                 In section .text, align 2, keep-with-next
     97          static int8_t TEMPLATE_Init(uint32_t  AudioFreq, uint32_t Volume, uint32_t options)
     98          {
   \                     TEMPLATE_Init: (+1)
   \   00000000   0x0003             MOVS     R3,R0
     99            /*
    100               Add your initialization code here 
    101            */  
    102            return (0);
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x4770             BX       LR               ;; return
    103          }
    104          
    105          /**
    106            * @brief  TEMPLATE_DeInit
    107            *         DeInitializes the AUDIO media low layer
    108            * @param  None
    109            * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
    110            */

   \                                 In section .text, align 2, keep-with-next
    111          static int8_t TEMPLATE_DeInit(uint32_t options)
    112          {
   \                     TEMPLATE_DeInit: (+1)
   \   00000000   0x0001             MOVS     R1,R0
    113            /*
    114               Add your deinitialization code here 
    115            */  
    116            return (0);
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x4770             BX       LR               ;; return
    117          }
    118          
    119          
    120          /**
    121            * @brief  TEMPLATE_AudioCmd
    122            *         AUDIO command handler 
    123            * @param  Buf: Buffer of data to be sent
    124            * @param  size: Number of data to be sent (in bytes)
    125            * @param  cmd: command opcode
    126            * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
    127            */

   \                                 In section .text, align 2, keep-with-next
    128          static int8_t TEMPLATE_AudioCmd (uint8_t* pbuf, uint32_t size, uint8_t cmd)
    129          {
   \                     TEMPLATE_AudioCmd: (+1)
   \   00000000   0x0003             MOVS     R3,R0
    130          
    131            return (0);
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x4770             BX       LR               ;; return
    132          }
    133          
    134          /**
    135            * @brief  TEMPLATE_VolumeCtl              
    136            * @param  vol: volume level (0..100)
    137            * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
    138            */

   \                                 In section .text, align 2, keep-with-next
    139          static int8_t TEMPLATE_VolumeCtl (uint8_t vol)
    140          {
   \                     TEMPLATE_VolumeCtl: (+1)
   \   00000000   0x0001             MOVS     R1,R0
    141           
    142            return (0);
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x4770             BX       LR               ;; return
    143          }
    144          
    145          /**
    146            * @brief  TEMPLATE_MuteCtl              
    147            * @param  cmd: vmute command
    148            * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
    149            */

   \                                 In section .text, align 2, keep-with-next
    150          static int8_t TEMPLATE_MuteCtl (uint8_t cmd)
    151          {
   \                     TEMPLATE_MuteCtl: (+1)
   \   00000000   0x0001             MOVS     R1,R0
    152           
    153            return (0);
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x4770             BX       LR               ;; return
    154          }
    155          
    156          /**
    157            * @brief  TEMPLATE_PeriodicTC              
    158            * @param  cmd
    159            * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
    160            */

   \                                 In section .text, align 2, keep-with-next
    161          static int8_t TEMPLATE_PeriodicTC (uint8_t cmd)
    162          {
   \                     TEMPLATE_PeriodicTC: (+1)
   \   00000000   0x0001             MOVS     R1,R0
    163           
    164            return (0);
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x4770             BX       LR               ;; return
    165          }
    166          
    167          /**
    168            * @brief  TEMPLATE_GetState              
    169            * @param  None
    170            * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
    171            */

   \                                 In section .text, align 2, keep-with-next
    172          static int8_t TEMPLATE_GetState (void)
    173          {
    174           
    175            return (0);
   \                     TEMPLATE_GetState: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x4770             BX       LR               ;; return
    176          }
    177          /**
    178            * @}
    179            */ 
    180          
    181          /**
    182            * @}
    183            */ 
    184          
    185          /**
    186            * @}
    187            */ 
    188          
    189          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
    190          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   TEMPLATE_AudioCmd
       0   TEMPLATE_DeInit
       0   TEMPLATE_GetState
       0   TEMPLATE_Init
       0   TEMPLATE_MuteCtl
       0   TEMPLATE_PeriodicTC
       0   TEMPLATE_VolumeCtl


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       6  TEMPLATE_AudioCmd
       6  TEMPLATE_DeInit
       4  TEMPLATE_GetState
       6  TEMPLATE_Init
       6  TEMPLATE_MuteCtl
       6  TEMPLATE_PeriodicTC
       6  TEMPLATE_VolumeCtl
      28  USBD_AUDIO_Template_fops

 
 28 bytes in section .data
 40 bytes in section .text
 
 40 bytes of CODE memory
 28 bytes of DATA memory

Errors: none
Warnings: none
